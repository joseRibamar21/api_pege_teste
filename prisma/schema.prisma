generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model acervo {
  id                 Int               @id @default(autoincrement())
  created            DateTime?         @db.DateTime(0)
  status             String?           @db.VarChar(1)
  tipo_publicacao_id Int
  tipo_acervo_id     Int
  escola_id          Int?
  quantidade         Int?
  observacoes        String?           @db.VarChar(500)
  created_at         DateTime?         @db.DateTime(0)
  updated_at         DateTime          @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?         @db.DateTime(0)
  escola             escola?           @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acervo_fk_escola")
  tipo_acervo        tipo_acervo       @relation(fields: [tipo_acervo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_acervo_tipo_acervo1")
  tipo_publicacao    tipo_publicacao   @relation(fields: [tipo_publicacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_acervo_tipo_publicacao1")
  acervo_autor       acervo_autor[]
  dados_obra         dados_obra[]
  dados_outros       dados_outros[]
  dados_periodico    dados_periodico[]
  exemplar           exemplar[]

  @@index([escola_id], map: "acervo_fk_escola")
  @@index([tipo_acervo_id], map: "fk_acervo_tipo_acervo1")
  @@index([tipo_publicacao_id], map: "fk_acervo_tipo_publicacao1")
}

model acervo_autor {
  id         Int       @id @default(autoincrement())
  created    DateTime? @db.DateTime(0)
  status     String?   @db.VarChar(1)
  acervo_id  Int
  autor_id   Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  acervo     acervo    @relation(fields: [acervo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_acervo_autor_acervo1")
  autor      autor     @relation(fields: [autor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_acervo_autor_autor1")

  @@index([acervo_id], map: "fk_acervo_autor_acervo1")
  @@index([autor_id], map: "fk_acervo_autor_autor1")
}

model acervo_digital_documento {
  id         Int                           @id @unique(map: "unique_id") @default(autoincrement())
  nome       String                        @db.VarChar(255)
  arquivo    String?                       @db.VarChar(300)
  data_envio DateTime?                     @db.DateTime(0)
  tipo       acervo_digital_documento_tipo @default(ARQUIVO)
  parent_id  Int?
  created_at DateTime?                     @db.DateTime(0)
  updated_at DateTime                      @default(now()) @db.Timestamp(0)
  deleted_at DateTime?                     @db.DateTime(0)
}

model acervo_digital_documento_nivel_acesso {
  id                             Int       @id @default(autoincrement())
  acervo_digital_documento_id    Int
  acervo_digital_nivel_acesso_id Int
  created_at                     DateTime? @db.DateTime(0)
  updated_at                     DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime? @db.DateTime(0)
}

model acervo_digital_nivel_acesso {
  id         Int                               @id @default(autoincrement())
  nivel      acervo_digital_nivel_acesso_nivel @default(TODOS)
  created_at DateTime?                         @db.DateTime(0)
  updated_at DateTime                          @default(now()) @db.Timestamp(0)
  deleted_at DateTime?                         @db.DateTime(0)
}

model acesso_erro {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  usuario_id     Int?      @db.UnsignedInt
  ip             String?   @db.VarChar(20)
  qtd_atual_erro Int?      @default(0)
  qtd_total_erro Int?      @default(0)
  ultimo_acesso  DateTime? @db.DateTime(0)
  created_at     DateTime? @db.DateTime(0)
  updated_at     DateTime  @default(now()) @db.Timestamp(0)
  deleted_at     DateTime? @db.DateTime(0)
  usuarios       usuarios? @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_acesso_usuario")

  @@index([usuario_id], map: "fk_acesso_usuario")
}

model acesso_servidor_escola {
  id         Int       @id @default(autoincrement())
  servidorId Int?
  escolaId   Int?
  created_at DateTime  @default(now()) @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  servidor   servidor? @relation(fields: [servidorId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "NewTable_FK")
  escola     escola?   @relation(fields: [escolaId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "acesso_servidor_escola_FK")

  @@index([servidorId], map: "NewTable_FK")
  @@index([escolaId], map: "acesso_servidor_escola_FK")
}

model acoes_adaptacoes_necessarias_para_o_aluno {
  id                                    Int                                     @id @default(autoincrement())
  nome                                  String?                                 @db.VarChar(100)
  status                                Int?                                    @default(1) @db.TinyInt
  created_at                            DateTime?                               @db.DateTime(0)
  updated_at                            DateTime                                @default(now()) @db.Timestamp(0)
  deleted_at                            DateTime?                               @db.DateTime(0)
  aluno_planejamento_infantil_AEE_acoes aluno_planejamento_infantil_AEE_acoes[]
}

model acompanhamento_acompanhantes {
  id                Int             @id @default(autoincrement())
  servidor_id       Int
  acompanhamento_id Int
  created_at        DateTime        @db.DateTime(0)
  deleted_at        DateTime?       @db.DateTime(0)
  updated_at        DateTime        @default(now()) @db.Timestamp(0)
  acompanhamentos   acompanhamentos @relation(fields: [acompanhamento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamento_acompanhantes_fk_acompanhamentos")
  servidor          servidor        @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamento_acompanhantes_fk_servidor")

  @@index([acompanhamento_id], map: "acompanhamento_id")
  @@index([servidor_id], map: "servidor_id")
}

model acompanhamento_horarios {
  id                                Int                                 @id @default(autoincrement())
  acompanhamento_plano_id           Int
  hora_inicio                       DateTime                            @db.Time(0)
  hora_fim                          DateTime                            @db.Time(0)
  created_at                        DateTime                            @db.DateTime(0)
  updated_at                        DateTime                            @default(now()) @db.Timestamp(0)
  deleted_at                        DateTime?                           @db.DateTime(0)
  acompanhamento_planos             acompanhamento_planos               @relation(fields: [acompanhamento_plano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamento_planos_fk_acompanhamento_horarios")
  acompanhamento_matricula_horarios acompanhamento_matricula_horarios[]

  @@index([acompanhamento_plano_id], map: "acompanhamento_plano_id")
}

model acompanhamento_matricula_horarios {
  id                        Int                     @id @default(autoincrement())
  acompanhamento_id         Int
  acompanhamento_horario_id Int
  dia_semana                Int
  created_at                DateTime                @db.DateTime(0)
  updated_at                DateTime                @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?               @db.DateTime(0)
  acompanhamentos           acompanhamentos         @relation(fields: [acompanhamento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamento_matricula_horarios_fk_acompanhamento")
  acompanhamento_horarios   acompanhamento_horarios @relation(fields: [acompanhamento_horario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamento_matricula_horarios_fk_acompanhamento_horario")

  @@index([acompanhamento_horario_id], map: "acompanhamento_horario_id")
  @@index([acompanhamento_id], map: "acompanhamento_id")
}

model acompanhamento_planos {
  id                      Int                       @id @default(autoincrement())
  tipo_plano              String
  ano_letivo_id           Int
  created_at              DateTime                  @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  acompanhamento_horarios acompanhamento_horarios[]
  ano_letivo              ano_letivo                @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamento_planos_fk_ano_letivo")
  acompanhamento_topicos  acompanhamento_topicos[]

  @@index([ano_letivo_id], map: "ano_letivo_id")
}

model acompanhamento_topico_respostas {
  id                       Int                    @id @default(autoincrement())
  acompanhamento_id        Int
  acompanhamento_topico_id Int
  resposta                 String?                @db.Text
  created_at               DateTime               @db.DateTime(0)
  updated_at               DateTime               @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?              @db.DateTime(0)
  acompanhamentos          acompanhamentos        @relation(fields: [acompanhamento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamento_topico_respostas_fk_acompanhamento")
  acompanhamento_topicos   acompanhamento_topicos @relation(fields: [acompanhamento_topico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamento_topico_respostas_fk_acompanhamento_topico")

  @@index([acompanhamento_id], map: "acompanhamento_id")
  @@index([acompanhamento_topico_id], map: "acompanhamento_topico_id")
}

model acompanhamento_topicos {
  id                              Int                               @id @default(autoincrement())
  acompanhamento_plano_id         Int
  topico                          String                            @db.VarChar(500)
  created_at                      DateTime                          @db.DateTime(0)
  updated_at                      DateTime                          @default(now()) @db.Timestamp(0)
  deleted_at                      DateTime?                         @db.DateTime(0)
  acompanhamento_topico_respostas acompanhamento_topico_respostas[]
  acompanhamento_planos           acompanhamento_planos             @relation(fields: [acompanhamento_plano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamento_topicos_fk_acompanhamento_planos")

  @@index([acompanhamento_plano_id], map: "acompanhamento_plano_id")
}

model acompanhamentos {
  id                                Int                                 @id @default(autoincrement())
  servidor_id                       Int
  turma_id                          Int?
  matricula_id                      Int?
  tipo_acompanhamento               String                              @db.VarChar(200)
  forma_acompanhamento              String                              @db.VarChar(200)
  created_at                        DateTime                            @db.DateTime(0)
  updated_at                        DateTime                            @default(now()) @db.Timestamp(0)
  deleted_at                        DateTime?                           @db.DateTime(0)
  acompanhamento_acompanhantes      acompanhamento_acompanhantes[]
  acompanhamento_matricula_horarios acompanhamento_matricula_horarios[]
  acompanhamento_topico_respostas   acompanhamento_topico_respostas[]
  matricula                         matricula?                          @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamentos_fk_matricula")
  servidor                          servidor                            @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamentos_fk_servidor")
  turma                             turma?                              @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acompanhamentos_fk_turma")

  @@index([matricula_id], map: "matricula_id")
  @@index([servidor_id], map: "servidor_id")
  @@index([turma_id], map: "turma_id")
}

model acordo_nea {
  id                     Int                      @id @default(autoincrement())
  escola_id              Int
  vigencia_inicio        DateTime                 @db.Date
  vigencia_fim           DateTime                 @db.Date
  objetivos_especificos  String                   @db.Text
  atividades_realizadas  String                   @db.Text
  atividades_futuras     String                   @db.Text
  organizacao            String                   @db.Text
  forma_funcionamento    String                   @db.Text
  created_at             DateTime                 @db.DateTime(0)
  updated_at             DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?                @db.DateTime(0)
  escola                 escola                   @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acordo_nea_fk_escola")
  acordo_nea_aluno       acordo_nea_aluno[]
  acordo_nea_funcionario acordo_nea_funcionario[]
  acordo_nea_professor   acordo_nea_professor[]

  @@index([escola_id], map: "escola_id")
}

model acordo_nea_aluno {
  id            Int        @id @default(autoincrement())
  acordo_nea_id Int
  matricula_id  Int
  created_at    DateTime   @db.DateTime(0)
  updated_at    DateTime   @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?  @db.DateTime(0)
  acordo_nea    acordo_nea @relation(fields: [acordo_nea_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acordo_nea_aluno_fk_acordo_nea")
  matricula     matricula  @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acordo_nea_aluno_fk_matricula")

  @@index([acordo_nea_id], map: "acordo_nea_id")
  @@index([matricula_id], map: "matricula_id")
}

model acordo_nea_funcionario {
  id                       Int                   @id @default(autoincrement())
  acordo_nea_id            Int
  servidor_cargo_escola_id Int
  created_at               DateTime              @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  acordo_nea               acordo_nea            @relation(fields: [acordo_nea_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acordo_nea_funcionario_fk_acordo_nea")
  servidor_cargo_escola    servidor_cargo_escola @relation(fields: [servidor_cargo_escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acordo_nea_funcionario_fk_servidor_cargo_escola")

  @@index([acordo_nea_id], map: "acordo_nea_id")
  @@index([servidor_cargo_escola_id], map: "servidor_cargo_escola_id")
}

model acordo_nea_professor {
  id                Int             @id @default(autoincrement())
  acordo_nea_id     Int
  servidor_id       Int
  disciplina_mec_id Int
  created_at        DateTime        @db.DateTime(0)
  updated_at        DateTime        @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?       @db.DateTime(0)
  acordo_nea        acordo_nea      @relation(fields: [acordo_nea_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acordo_nea_professor_fk_acordo_nea")
  disciplinas_mec   disciplinas_mec @relation(fields: [disciplina_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acordo_nea_professor_fk_disciplina_mec")
  servidor          servidor        @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "acordo_nea_professor_fk_servidor")

  @@index([acordo_nea_id], map: "acordo_nea_id")
  @@index([disciplina_mec_id], map: "disciplina_mec_id")
  @@index([servidor_id], map: "servidor_id")
}

model afastamento {
  id                       Int                   @id @default(autoincrement())
  servidor_cargo_escola_id Int
  afastamento_tipo_id      Int
  protocolo_id             Int                   @unique(map: "afastamento_fk_protocolo")
  afastamento_situacao_id  Int
  portaria                 String?               @db.VarChar(50)
  processo_numero          String?               @db.VarChar(50)
  oficio                   String?               @db.VarChar(50)
  carta_de_apresentacao    String?               @db.VarChar(50)
  data_inicio              DateTime              @db.Date
  data_fim                 DateTime?             @db.Date
  data_prorrogacao         DateTime?             @db.Date
  vencido                  Int
  status                   Int
  created                  DateTime              @db.DateTime(0)
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  servidor_cargo_escola    servidor_cargo_escola @relation(fields: [servidor_cargo_escola_id], references: [id], onUpdate: Restrict, map: "afastamento_ibfk_1")
  afastamento_situacao     afastamento_situacao  @relation(fields: [afastamento_situacao_id], references: [id], onUpdate: Restrict, map: "afastamento_ibfk_5")
  afastamento_tipo         afastamento_tipo      @relation(fields: [afastamento_tipo_id], references: [id], onUpdate: Restrict, map: "afastamento_ibfk_6")
  protocolo                protocolo             @relation(fields: [protocolo_id], references: [id], onUpdate: Restrict, map: "afastamento_ibfk_7")
  substituicao             substituicao[]

  @@index([afastamento_situacao_id], map: "afastamento_fk_afastamento_situacao")
  @@index([afastamento_tipo_id], map: "afastamento_fk_afastamento_tipo")
  @@index([servidor_cargo_escola_id], map: "afastamento_fk_servidor_cargo_escola")
}

model afastamento_motivo {
  id             Int              @id @default(autoincrement())
  nome           String           @db.VarChar(50)
  status         Int
  created        DateTime         @db.DateTime(0)
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  afastamento_v3 afastamento_v3[]
}

model afastamento_situacao {
  id             Int              @id @default(autoincrement())
  nome           String           @db.VarChar(50)
  cor            String?          @db.VarChar(6)
  fonte          String           @db.VarChar(6)
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  afastamento    afastamento[]
  afastamento_v3 afastamento_v3[]
}

model afastamento_tipo {
  id                      Int                                      @id @default(autoincrement())
  nome                    String                                   @db.VarChar(150)
  status                  Int
  necessita_da_data_final afastamento_tipo_necessita_da_data_final @default(S)
  created                 DateTime                                 @db.DateTime(0)
  created_at              DateTime?                                @db.DateTime(0)
  updated_at              DateTime                                 @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                                @db.DateTime(0)
  afastamento             afastamento[]
}

model afastamento_v3 {
  id                       Int                    @id @default(autoincrement())
  servidor_cargo_escola_id Int?
  afastamento_motivo_id    Int
  protocolo_id             Int                    @unique(map: "afastamento_v3_fk_protocolo")
  afastamento_situacao_id  Int?
  portaria                 String?                @db.VarChar(50)
  processo_numero          String?                @db.VarChar(50)
  oficio                   String?                @db.VarChar(50)
  carta_de_apresentacao    String?                @db.VarChar(50)
  data_inicio              DateTime?              @db.Date
  data_fim                 DateTime?              @db.Date
  data_prorrogacao         DateTime?              @db.Date
  vencido                  Int
  status                   Int
  created                  DateTime               @db.DateTime(0)
  created_at               DateTime?              @db.DateTime(0)
  updated_at               DateTime               @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?              @db.DateTime(0)
  servidor_cargo_escola    servidor_cargo_escola? @relation(fields: [servidor_cargo_escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "afastamento_v3_ibfk_1")
  afastamento_situacao     afastamento_situacao?  @relation(fields: [afastamento_situacao_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "afastamento_v3_ibfk_5")
  afastamento_motivo       afastamento_motivo     @relation(fields: [afastamento_motivo_id], references: [id], onUpdate: Restrict, map: "afastamento_v3_ibfk_6")
  protocolo                protocolo              @relation(fields: [protocolo_id], references: [id], onUpdate: Restrict, map: "afastamento_v3_ibfk_7")

  @@index([afastamento_motivo_id], map: "afastamento_v3_fk_afastamento_motivo")
  @@index([afastamento_situacao_id], map: "afastamento_v3_fk_afastamento_situacao")
  @@index([servidor_cargo_escola_id], map: "afastamento_v3_fk_servidor_cargo_escola")
}

model agrupamento_pergunta {
  id            Int        @id @default(autoincrement()) @db.UnsignedSmallInt
  mostrar_ficha Int?       @default(0) @db.UnsignedTinyInt
  descricao     String?    @db.VarChar(100)
  created_at    DateTime?  @db.DateTime(0)
  updated_at    DateTime   @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?  @db.DateTime(0)
  pergunta      pergunta[]
}

model alerta {
  id                    Int       @id @default(autoincrement())
  registro_id           Int
  alerta_mensagem_id    Int
  alvo_usuario_id       Int
  resolvedor_usuario_id Int?
  observacao            String?   @db.Text
  alerta_tipo_id        Int
  created               DateTime  @db.Date
  status                Int
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
}

model alerta_mensagem {
  id         Int       @id @default(autoincrement())
  mensagem   String    @db.Text
  modulo     String    @db.VarChar(100)
  created    DateTime  @db.DateTime(0)
  status     Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model alerta_mensagem_variavel {
  id                 Int       @id @default(autoincrement())
  nome               String    @db.VarChar(100)
  tabela             String    @db.VarChar(100)
  coluna             String    @db.VarChar(100)
  alerta_mensagem_id Int
  created            DateTime  @db.DateTime(0)
  status             Int
  created_at         DateTime? @db.DateTime(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.DateTime(0)
}

model alerta_tipo {
  id         Int       @id @default(autoincrement())
  nome       String    @db.VarChar(250)
  padrao     Bytes?    @unique(map: "padrao") @db.Binary(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model alinhamento {
  id                       Int              @id @default(autoincrement())
  descricao                String?          @db.VarChar(100)
  ano_letivo_identificacao String?          @db.VarChar(4)
  ano_id                   Int?
  disciplina_mec_id        Int?
  bimestre                 Int?
  arquivo_url              String?          @db.VarChar(150)
  created_at               DateTime?        @db.DateTime(0)
  updated_at               DateTime?        @db.Timestamp(0)
  deleted_at               DateTime?        @db.DateTime(0)
  ano                      ano?             @relation(fields: [ano_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "alinhamento_fk_ano")
  disciplinas_mec          disciplinas_mec? @relation(fields: [disciplina_mec_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "alinhamento_fk_disciplina")

  @@index([ano_id], map: "alinhamento_fk_ano")
  @@index([disciplina_mec_id], map: "alinhamento_fk_disciplina")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model almoxarifado_acompanhamento_situacao {
  id                  Int                                               @id @default(autoincrement())
  servidor_id         Int
  status_id           Int                                               @db.UnsignedTinyInt
  objeto_id           Int
  objeto_tipo         almoxarifado_acompanhamento_situacao_objeto_tipo
  procedimento        almoxarifado_acompanhamento_situacao_procedimento
  observacao          String                                            @db.VarChar(255)
  dataevento          DateTime                                          @db.DateTime(0)
  updated_at          DateTime?                                         @db.DateTime(0)
  created_at          DateTime?                                         @db.DateTime(0)
  deleted_at          DateTime?                                         @db.DateTime(0)
  servidor            servidor                                          @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "FK_almoxarifado_acompanhamento_status_servidor_id")
  almoxarifado_status almoxarifado_status                               @relation(fields: [status_id], references: [id], onUpdate: Restrict, map: "FK_almoxarifado_acompanhamento_status_status_id")

  @@index([servidor_id], map: "FK_almoxarifado_acompanhamento_status_servidor_id")
  @@index([status_id], map: "FK_almoxarifado_acompanhamento_status_status_id")
}

model almoxarifado_entrada {
  id                           Int                            @id @default(autoincrement())
  tipo_entrada_id              Int                            @db.UnsignedTinyInt
  fornecedor_id                Int?
  escola_id                    Int?
  saida_id                     Int?
  n_processo                   String?                        @db.VarChar(20)
  n_contrato                   String?                        @db.VarChar(20)
  n_chamada_publica            String?                        @db.VarChar(20)
  n_nota_fiscal                String?                        @db.VarChar(20)
  data_emissao_nota            DateTime?                      @db.Date
  descricao                    String?                        @db.Text
  data_entrada                 DateTime                       @db.Date
  valor_nota                   Decimal?                       @db.Decimal(10, 2)
  created                      DateTime                       @db.DateTime(0)
  modified                     DateTime                       @db.DateTime(0)
  deleted_at                   DateTime?                      @db.DateTime(0)
  updated_at                   DateTime?                      @db.DateTime(0)
  created_at                   DateTime?                      @db.DateTime(0)
  escola                       escola?                        @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_almoxarifado_entrada_escola_id")
  fornecedor                   fornecedor?                    @relation(fields: [fornecedor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_almoxarifado_entrada_fornecedor_id")
  almoxarifado_saida           almoxarifado_saida?            @relation(fields: [saida_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_almoxarifado_entrada_saida_id")
  almoxarifado_tipo_entrada    almoxarifado_tipo_entrada      @relation(fields: [tipo_entrada_id], references: [id], onUpdate: Restrict, map: "fk_almoxarifado_entrada_tipo_entrada_id")
  almoxarifado_entrada_estoque almoxarifado_entrada_estoque[]

  @@index([saida_id], map: "fk_almoxarifado_entrada_saida_id")
  @@index([escola_id], map: "fk_entrada_escola")
  @@index([fornecedor_id], map: "fk_entrada_fornecedor")
  @@index([tipo_entrada_id], map: "fk_entrada_tipo_entrada1")
}

model almoxarifado_entrada_estoque {
  id                     Int                  @id @default(autoincrement())
  entrada_id             Int
  estoque_id             Int
  quantidade             Decimal              @db.Decimal(10, 2)
  unidade_padrao_entrada String               @default("N")
  valor                  Decimal?             @db.Decimal(10, 2)
  valor_total            Decimal?             @db.Decimal(10, 2)
  deleted_at             DateTime?            @db.DateTime(0)
  updated_at             DateTime?            @db.DateTime(0)
  created_at             DateTime?            @db.DateTime(0)
  almoxarifado_entrada   almoxarifado_entrada @relation(fields: [entrada_id], references: [id], onUpdate: Restrict, map: "fk_almoxarifado_entrada_estoque_entrada_id")
  almoxarifado_estoque   almoxarifado_estoque @relation(fields: [estoque_id], references: [id], onUpdate: Restrict, map: "fk_almoxarifado_entrada_estoque_estoque_id")

  @@index([entrada_id], map: "fk_entrada_produto_entrada1")
  @@index([estoque_id], map: "fk_entrada_produto_produto1")
}

model almoxarifado_estoque {
  id                           Int                            @id @default(autoincrement())
  produto_medida_id            Int
  escola_id                    Int?
  estoque_min                  Decimal                        @default(1.00) @db.Decimal(8, 2)
  estoque_max                  Decimal                        @default(1.00) @db.Decimal(8, 2)
  estoque_inicial              Decimal                        @default(1.00) @db.Decimal(8, 2)
  qtd_estoque                  Decimal                        @default(0.00) @db.Decimal(8, 2)
  created                      DateTime                       @db.DateTime(0)
  modified                     DateTime                       @db.DateTime(0)
  identificacao                String?                        @db.VarChar(255)
  data_validade                DateTime?                      @db.Date
  deleted_at                   DateTime?                      @db.DateTime(0)
  updated_at                   DateTime?                      @db.DateTime(0)
  created_at                   DateTime?                      @db.DateTime(0)
  almoxarifado_entrada_estoque almoxarifado_entrada_estoque[]
  escola                       escola?                        @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "almoxarifado_estoque_escola_id")
  almoxarifado_produto_medida  almoxarifado_produto_medida    @relation(fields: [produto_medida_id], references: [id], onUpdate: Restrict, map: "almoxarifado_estoque_produto_id")
  almoxarifado_saida_estoque   almoxarifado_saida_estoque[]

  @@index([escola_id], map: "fk_estoque_escola1")
  @@index([produto_medida_id], map: "fk_estoque_produto1")
}

model almoxarifado_grupo {
  id                   Int                    @id @default(autoincrement()) @db.UnsignedTinyInt
  grupo                String                 @db.VarChar(80)
  updated_at           DateTime?              @db.DateTime(0)
  created_at           DateTime?              @db.DateTime(0)
  deleted_at           DateTime?              @db.DateTime(0)
  almoxarifado_produto almoxarifado_produto[]
}

model almoxarifado_pedido_escola {
  id          Int                                 @id @default(autoincrement())
  escola_id   Int
  servidor_id Int
  pedido      String?                             @db.Text
  atendido    almoxarifado_pedido_escola_atendido @default(AN)
  observacoes String?                             @db.Text
  data_pedido DateTime                            @db.Date
  created_at  DateTime                            @default(now()) @db.Timestamp(0)
  updated_at  DateTime                            @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at  DateTime?                           @db.Timestamp(0)
  escola      escola                              @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "FK_almoxarifado_pedido_escola_escola_id")
  servidor    servidor                            @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "FK_almoxarifado_pedido_escola_servidor_id")

  @@index([escola_id], map: "FK_almoxarifado_pedido_escola_escola_id")
  @@index([servidor_id], map: "FK_almoxarifado_pedido_escola_servidor_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model almoxarifado_pedido_secretaria {
  id          Int                                     @id @default(autoincrement())
  servidor_id Int
  setor_id    Int
  pedido      String                                  @db.Text
  observacoes String?                                 @db.Text
  atendido    almoxarifado_pedido_secretaria_atendido
  data_pedido DateTime                                @db.Date
  created_at  DateTime                                @default(now()) @db.Timestamp(0)
  updated_at  DateTime                                @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at  DateTime?                               @db.Timestamp(0)
  servidor    servidor                                @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "FK_almoxarifado_pedido_secretaria_id")

  @@index([servidor_id], map: "FK_almoxarifado_pedido_escola_servidor_id")
}

model almoxarifado_produto {
  id                          Int                            @id @default(autoincrement())
  grupo_id                    Int?                           @db.UnsignedTinyInt
  merenda_produto_grupo_id    Int?                           @db.UnsignedInt
  produto                     String                         @db.LongText
  descricao                   String?                        @db.VarChar(255)
  referencia                  String?                        @db.VarChar(50)
  calorias                    Decimal?                       @db.Decimal(10, 2)
  created                     DateTime?                      @db.DateTime(0)
  updated                     DateTime?                      @db.DateTime(0)
  perecivel                   almoxarifado_produto_perecivel @default(N)
  status                      Boolean                        @default(true)
  updated_at                  DateTime?                      @db.DateTime(0)
  created_at                  DateTime?                      @db.DateTime(0)
  deleted_at                  DateTime?                      @db.DateTime(0)
  almoxarifado_grupo          almoxarifado_grupo?            @relation(fields: [grupo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "almoxarifado_estoque_grupo_id")
  merenda_produto_grupo       merenda_produto_grupo?         @relation(fields: [merenda_produto_grupo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "almoxarifado_produto_FK_merenda_produto_grupo")
  almoxarifado_produto_medida almoxarifado_produto_medida[]

  @@index([merenda_produto_grupo_id], map: "almoxarifado_produto_FK_merenda_produto_grupo")
  @@index([grupo_id], map: "fk_produto_grupo1")
}

model almoxarifado_produto_medida {
  id                                                                                                             Int                                        @id @default(autoincrement())
  produto_id                                                                                                     Int
  unidade_medida_inicial_id                                                                                      Int?                                       @db.UnsignedSmallInt
  unidade_medida_final_id                                                                                        Int                                        @db.UnsignedSmallInt
  valor_conversao                                                                                                Decimal                                    @db.Decimal(10, 2)
  unidade_padrao                                                                                                 almoxarifado_produto_medida_unidade_padrao @default(N)
  status                                                                                                         Boolean                                    @default(true)
  updated_at                                                                                                     DateTime?                                  @db.DateTime(0)
  created_at                                                                                                     DateTime?                                  @db.DateTime(0)
  deleted_at                                                                                                     DateTime?                                  @db.DateTime(0)
  almoxarifado_estoque                                                                                           almoxarifado_estoque[]
  almoxarifado_produto                                                                                           almoxarifado_produto                       @relation(fields: [produto_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "FK_almoxarifado_produto_medida_produto_id")
  almoxarifado_unidade_medida_almoxarifado_produto_medida_unidade_medida_final_idToalmoxarifado_unidade_medida   almoxarifado_unidade_medida                @relation("almoxarifado_produto_medida_unidade_medida_final_idToalmoxarifado_unidade_medida", fields: [unidade_medida_final_id], references: [id], onUpdate: Restrict, map: "FK_almoxarifado_produto_medida_unidade_medida_final_id")
  almoxarifado_unidade_medida_almoxarifado_produto_medida_unidade_medida_inicial_idToalmoxarifado_unidade_medida almoxarifado_unidade_medida?               @relation("almoxarifado_produto_medida_unidade_medida_inicial_idToalmoxarifado_unidade_medida", fields: [unidade_medida_inicial_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_almoxarifado_produto_medida_unidade_medida_inicial_id")

  @@index([produto_id], map: "FK_almoxarifado_produto_medida_produto_id")
  @@index([unidade_medida_final_id], map: "FK_almoxarifado_produto_medida_unidade_medida_final_id")
  @@index([unidade_medida_inicial_id], map: "FK_almoxarifado_produto_medida_unidade_medida_inicial_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model almoxarifado_saida {
  id                           Int                          @id @default(autoincrement())
  escola_id                    Int?
  setor_id                     Int?
  nucleo_id                    Int?                         @db.UnsignedSmallInt
  orgaos_saida_almoxarifado_id Int?
  tipo_saida                   String
  data_saida                   DateTime                     @db.Date
  observacao                   String?                      @db.Text
  created                      DateTime                     @db.DateTime(0)
  modified                     DateTime                     @db.DateTime(0)
  updated_at                   DateTime?                    @db.DateTime(0)
  created_at                   DateTime?                    @db.DateTime(0)
  deleted_at                   DateTime?                    @db.DateTime(0)
  almoxarifado_entrada         almoxarifado_entrada[]
  escola                       escola?                      @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_almoxarifado_saida_escola_id")
  nucleo                       nucleo?                      @relation(fields: [nucleo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_almoxarifado_saida_nucleo_id")
  orgaos_saida_almoxarifado    orgaos_saida_almoxarifado?   @relation(fields: [orgaos_saida_almoxarifado_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_almoxarifado_saida_orgaos_saida_almoxarifado_id")
  setor                        setor?                       @relation(fields: [setor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_almoxarifado_saida_setor_id")
  almoxarifado_saida_estoque   almoxarifado_saida_estoque[]

  @@index([escola_id], map: "FK_almoxarifado_saida_escola_id")
  @@index([nucleo_id], map: "FK_almoxarifado_saida_nucleo_id")
  @@index([orgaos_saida_almoxarifado_id], map: "FK_almoxarifado_saida_orgaos_saida_almoxarifado_id")
  @@index([setor_id], map: "fk_saida_setor1")
}

model almoxarifado_saida_estoque {
  id                   Int                   @id @default(autoincrement())
  saida_id             Int
  estoque_id           Int?
  unidade_padrao_saida String?               @default("N")
  quantidade           Float                 @db.Float
  updated_at           DateTime?             @db.DateTime(0)
  created_at           DateTime?             @db.DateTime(0)
  deleted_at           DateTime?             @db.DateTime(0)
  almoxarifado_estoque almoxarifado_estoque? @relation(fields: [estoque_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_saida_produto_estoque_id")
  almoxarifado_saida   almoxarifado_saida    @relation(fields: [saida_id], references: [id], onUpdate: Restrict, map: "fk_saida_produto_saida_id")

  @@index([estoque_id], map: "fk_saida_produto_estoque1")
  @@index([saida_id], map: "fk_saida_produto_saida1")
  @@index([unidade_padrao_saida], map: "fk_saida_produto_unidade_medida_id")
}

model almoxarifado_status {
  id                                   Int                                    @id @default(autoincrement()) @db.UnsignedTinyInt
  status                               String                                 @db.VarChar(50)
  updated_at                           DateTime?                              @db.DateTime(0)
  created_at                           DateTime?                              @db.DateTime(0)
  deleted_at                           DateTime?                              @db.DateTime(0)
  almoxarifado_acompanhamento_situacao almoxarifado_acompanhamento_situacao[]
}

model almoxarifado_tipo_entrada {
  id                   Int                    @id @default(autoincrement()) @db.UnsignedTinyInt
  tipo                 String                 @db.VarChar(80)
  status               Boolean
  updated_at           DateTime?              @db.DateTime(0)
  created_at           DateTime?              @db.DateTime(0)
  deleted_at           DateTime?              @db.DateTime(0)
  almoxarifado_entrada almoxarifado_entrada[]
}

model almoxarifado_unidade_medida {
  id                                                                                                             Int                                              @id @default(autoincrement()) @db.UnsignedSmallInt
  unidade                                                                                                        String                                           @db.VarChar(80)
  sigla                                                                                                          String                                           @db.VarChar(5)
  status                                                                                                         Boolean                                          @default(true)
  updated_at                                                                                                     DateTime?                                        @db.DateTime(0)
  created_at                                                                                                     DateTime?                                        @db.DateTime(0)
  deleted_at                                                                                                     DateTime?                                        @db.DateTime(0)
  almoxarifado_produto_medida_almoxarifado_produto_medida_unidade_medida_final_idToalmoxarifado_unidade_medida   almoxarifado_produto_medida[]                    @relation("almoxarifado_produto_medida_unidade_medida_final_idToalmoxarifado_unidade_medida")
  almoxarifado_produto_medida_almoxarifado_produto_medida_unidade_medida_inicial_idToalmoxarifado_unidade_medida almoxarifado_produto_medida[]                    @relation("almoxarifado_produto_medida_unidade_medida_inicial_idToalmoxarifado_unidade_medida")
  merenda_distribuicao_preparo_quantidade_escola                                                                 merenda_distribuicao_preparo_quantidade_escola[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model aluno {
  id                                                          Int                            @id @default(autoincrement())
  escola_id                                                   Int?
  moradia_id                                                  Int?
  estado_id                                                   Int?
  cidade_id                                                   Int?
  pais_origem_id                                              Int?
  estado_nascimento_id                                        Int?
  cidade_nascimento_id                                        Int?
  is_teste                                                    Boolean?                       @default(false)
  inep                                                        String?                        @db.VarChar(30)
  nis                                                         String?                        @db.VarChar(30)
  nome                                                        String?                        @db.VarChar(100)
  sexo                                                        String?
  endereco                                                    String?                        @db.VarChar(100)
  numero                                                      String?                        @db.VarChar(10)
  complemento                                                 String?                        @db.VarChar(100)
  bairro                                                      String?                        @db.VarChar(100)
  cidade                                                      String?                        @db.VarChar(100)
  nacionalidade                                               String?
  cep                                                         String?                        @db.VarChar(20)
  uf                                                          String?                        @db.VarChar(100)
  local                                                       String?                        @db.VarChar(10)
  sus                                                         String?                        @db.VarChar(15)
  telefone                                                    String?                        @db.VarChar(50)
  celular                                                     String?                        @db.VarChar(50)
  email                                                       String?                        @db.VarChar(100)
  peso                                                        Decimal?                       @db.Decimal(5, 2)
  altura                                                      Decimal?                       @db.Decimal(3, 2)
  raca                                                        String?
  tipo_defic                                                  String?                        @db.VarChar(30)
  tipo_transp_escolar                                         String?                        @db.VarChar(30)
  id_educ_censo                                               String?                        @db.VarChar(30)
  tipo_uso_internet                                           String?                        @db.VarChar(30)
  reg_nascimento                                              String?                        @db.VarChar(20)
  reg_livro_num                                               String?                        @db.VarChar(20)
  reg_folha_num                                               String?                        @db.VarChar(20)
  reg_comarca                                                 String?                        @db.VarChar(50)
  rg                                                          String?                        @db.VarChar(40)
  orgao_emissor_identidade_id                                 Int?
  rg_data_expedicao                                           DateTime?                      @db.Date
  titulo                                                      String?                        @db.VarChar(20)
  titulo_zona                                                 String?                        @db.VarChar(20)
  titulo_secao                                                String?                        @db.VarChar(20)
  reservista                                                  String?                        @db.VarChar(20)
  reservista_serie                                            String?                        @db.VarChar(20)
  reservista_numero                                           String?                        @db.VarChar(20)
  reservista_categ_num                                        String?                        @db.VarChar(20)
  reservista_csm                                              String?                        @db.VarChar(20)
  cart_prof                                                   String?                        @db.VarChar(20)
  grupo_sangue                                                String?                        @db.VarChar(30)
  grupo_sangue_rh                                             String?                        @db.VarChar(30)
  grupo_sangue_alergia                                        String?                        @db.VarChar(30)
  grupo_sangue_diabetico                                      String?                        @db.VarChar(30)
  outra_doenca                                                String?                        @db.Text
  familia_composta                                            String?                        @db.VarChar(30)
  estado_civil                                                String?
  usa_oculos                                                  String?                        @db.VarChar(1)
  destro                                                      String?                        @db.VarChar(10)
  denticao                                                    String?                        @db.VarChar(50)
  convenio                                                    String?                        @db.VarChar(15)
  nome_pai                                                    String?                        @db.VarChar(100)
  pai_vivo                                                    String?                        @db.VarChar(5)
  pai_nacionalidade                                           String?                        @db.VarChar(50)
  pai_naturalidade                                            String?                        @db.VarChar(50)
  pai_niv_escolar                                             String?                        @db.VarChar(50)
  pai_religiao                                                String?                        @db.VarChar(50)
  pai_profissao                                               String?                        @db.VarChar(50)
  pai_ender_trab                                              String?                        @db.VarChar(50)
  pai_telefone                                                String?                        @db.VarChar(50)
  pai_email                                                   String?                        @db.VarChar(50)
  pai_titulo                                                  String?                        @db.VarChar(50)
  pai_titulo_zona                                             String?                        @db.VarChar(50)
  pai_titulo_secao                                            String?                        @db.VarChar(50)
  pai_restricao                                               Boolean?
  pai_qual_restricao                                          String?                        @db.VarChar(255)
  nome_mae                                                    String?                        @db.VarChar(100)
  mae_viva                                                    String?                        @db.VarChar(5)
  mae_nacionalidade                                           String?                        @db.VarChar(50)
  mae_naturalidade                                            String?                        @db.VarChar(50)
  mae_niv_escolar                                             String?                        @db.VarChar(50)
  mae_religiao                                                String?                        @db.VarChar(50)
  mae_profissao                                               String?                        @db.VarChar(50)
  mae_ender_trab                                              String?                        @db.VarChar(50)
  mae_telefone                                                String?                        @db.VarChar(50)
  mae_email                                                   String?                        @db.VarChar(50)
  mae_titulo                                                  String?                        @db.VarChar(50)
  mae_titulo_zona                                             String?                        @db.VarChar(50)
  mae_titulo_secao                                            String?                        @db.VarChar(50)
  mae_nis                                                     String?                        @db.VarChar(50)
  mae_restricao                                               Boolean?
  mae_qual_restricao                                          String?                        @db.VarChar(255)
  pai_nis                                                     String?                        @db.VarChar(50)
  tipo_responsavel_id                                         Int?                           @db.UnsignedInt
  nome_responsavel                                            String?                        @db.VarChar(100)
  parentesco_responsavel                                      String?                        @db.VarChar(50)
  nacional_responsavel                                        String?                        @db.VarChar(50)
  natural_responsavel                                         String?                        @db.VarChar(50)
  niv_escolar_responsavel                                     String?                        @db.VarChar(50)
  religiao_responsavel                                        String?                        @db.VarChar(50)
  profissao_responsavel                                       String?                        @db.VarChar(50)
  ender_trab_responsavel                                      String?                        @db.VarChar(50)
  telef_responsavel                                           String?                        @db.VarChar(50)
  email_responsavel                                           String?                        @db.VarChar(50)
  titulo_responsavel                                          String?                        @db.VarChar(20)
  titulo_zona_responsavel                                     String?                        @db.VarChar(20)
  titulo_secao_responsavel                                    String?                        @db.VarChar(20)
  restricao_responsavel                                       Boolean?
  qual_restricao_responsavel                                  String?                        @db.VarChar(255)
  descri_transp_escolar                                       String?                        @db.VarChar(30)
  pai_uf                                                      String?                        @db.VarChar(5)
  mae_uf                                                      String?                        @db.VarChar(5)
  responsavel_uf                                              String?                        @db.VarChar(5)
  data_nascimento                                             DateTime?                      @db.Date
  uf_reg_comarca                                              String?                        @db.VarChar(5)
  cpf_aluno                                                   String?                        @db.VarChar(20)
  cpf_pai                                                     String?                        @db.VarChar(20)
  cpf_mae                                                     String?                        @db.VarChar(20)
  cpf_responsavel                                             String?                        @db.VarChar(20)
  cod_uf                                                      String?                        @db.VarChar(10)
  cod_cidade                                                  String?                        @db.VarChar(20)
  cod_pais                                                    String?                        @db.VarChar(20)
  created                                                     DateTime?                      @db.DateTime(0)
  status                                                      String                         @default("1") @db.Char(1)
  login                                                       String?                        @db.VarChar(16)
  senha                                                       String?                        @db.VarChar(80)
  foto                                                        String?                        @db.VarChar(100)
  foto_url                                                    String?                        @db.VarChar(255)
  foto_documento                                              String?                        @db.VarChar(255)
  colabora_renda_familiar                                     String?                        @db.Char(1)
  filiacao                                                    String?
  com_deficiencia                                             String?                        @db.Char(1)
  deficiencia_cegueira                                        String?                        @db.Char(1)
  deficiencia_baixa_visao                                     String?                        @db.Char(1)
  deficiencia_surdez                                          String?                        @db.Char(1)
  deficiencia_auditiva                                        String?                        @db.Char(1)
  deficiencia_auditiva_surdocegueira                          String?                        @db.Char(1)
  deficiencia_fisica                                          String?                        @db.Char(1)
  deficiencia_intelectual                                     String?                        @db.Char(1)
  deficiencia_multipla                                        String?                        @db.Char(1)
  deficiencia_mudez                                           String?                        @db.Char(1)
  deficiencia_outras                                          String?                        @db.Char(1)
  qual_deficiencia                                            String?                        @db.VarChar(80)
  autistimo_infantil                                          String?                        @db.Char(1)
  sindrome_asperger                                           String?                        @db.Char(1)
  sindrome_rett                                               String?                        @db.Char(1)
  transtorno_desintegrativo_infancia                          String?                        @db.Char(1)
  superdocao                                                  String?                        @db.Char(1)
  estado_identidade_id                                        Int?
  certidao_civil                                              String?
  tipo_certidao_civil                                         String?
  data_emissao_certidao                                       DateTime?                      @db.Date
  estado_cartorio_id                                          Int?
  cidade_cartorio_id                                          Int?
  cartorio_id                                                 Int?
  numero_matricula_certidao_nova                              String?                        @db.VarChar(50)
  passaporte                                                  String?                        @db.VarChar(50)
  justificativa_falta_documento                               String?
  zona                                                        String?
  recebe_escolarizacao_outro_espaco                           String?
  transporte_escolar_publico                                  String?                        @db.Char(1)
  poder_publico_responsavel_pelo_transporte                   String?
  transporte_escolar_utilizado_rodoviario_van                 String?                        @db.Char(1)
  transporte_escolar_utilizado_rodoviario_microonibus         String?                        @db.Char(1)
  transporte_escolar_utilizado_rodoviario_onibus              String?                        @db.Char(1)
  transporte_escolar_utilizado_rodoviario_bicicleta           String?                        @db.Char(1)
  transporte_escolar_utilizado_rodoviario_tracao_animal       String?                        @db.Char(1)
  transporte_escolar_utilizado_rodoviario_outro               String?                        @db.Char(1)
  transporte_escolar_utilizado_aquaviario_embarcacao_ate5     String?                        @db.Char(1)
  transporte_escolar_utilizado_aquaviario_embarcacao_5_a_15   String?                        @db.Char(1)
  transporte_escolar_utilizado_aquaviario_embarcacao_15_a_35  String?                        @db.Char(1)
  transporte_escolar_utilizado_aquaviario_embarcacao_acima_35 String?                        @db.Char(1)
  transporte_escolar_utilizado_ferroviario_trem               String?                        @db.Char(1)
  numero_termo_certidao                                       String?                        @db.Char(32)
  inseto                                                      Int?
  inseto_lista                                                String?                        @db.VarChar(100)
  desnutricao                                                 Int?
  desnutricao_lista                                           String?                        @db.VarChar(100)
  alergia                                                     Int?
  laudo                                                       Int?
  laudo_lista                                                 String?                        @db.VarChar(100)
  alergia_lista                                               String?                        @db.VarChar(100)
  doenca                                                      Int?
  doenca_lista                                                String?                        @db.VarChar(100)
  protese                                                     Int?
  protese_lista                                               String?                        @db.VarChar(100)
  medicamento                                                 Int?
  medicamento_lista                                           String?                        @db.VarChar(100)
  fratura                                                     Int?
  fratura_lista                                               String?                        @db.VarChar(100)
  internado                                                   Int?
  internado_lista                                             String?                        @db.VarChar(100)
  acompanhamento                                              Int?
  assistencia                                                 Int?
  dificuldade                                                 Int?
  saneamento                                                  Int?
  avaliacao_inep_auxilio_ledor                                String?                        @db.Char(1)
  avaliacao_inep_auxilio_transcricao                          String?                        @db.Char(1)
  avaliacao_inep_guia_interprete                              String?                        @db.Char(1)
  avaliacao_inep_interprete_libra                             String?                        @db.Char(1)
  avaliacao_inep_leitura_labial                               String?                        @db.Char(1)
  avaliacao_inep_prova_ampliada_fonte_16                      String?                        @db.Char(1)
  avaliacao_inep_prova_ampliada_fonte_20                      String?                        @db.Char(1)
  avaliacao_inep_prova_ampliada_fonte_24                      String?                        @db.Char(1)
  avaliacao_inep_prova_braile                                 String?                        @db.Char(1)
  avaliacao_inep_nenhum_auxilio                               String?                        @db.Char(1)
  complemento_rg                                              String?                        @db.VarChar(20)
  data_criacao_login                                          DateTime?                      @db.DateTime(0)
  pai_id                                                      Int?
  mae_id                                                      Int?
  responsavel_id                                              Int?
  hash_identidade                                             String?                        @db.VarChar(255)
  situacao_nis                                                String?                        @default("")
  situacao_sus                                                String?                        @default("")
  created_at                                                  DateTime?                      @db.DateTime(0)
  updated_at                                                  DateTime                       @default(now()) @db.Timestamp(0)
  deleted_at                                                  DateTime?                      @db.DateTime(0)
  participa_bpc                                               Int?                           @db.TinyInt
  recebe_bolsa_familia                                        Int?                           @db.TinyInt
  valor_bolsa_familia                                         Decimal?                       @db.Decimal(12, 2)
  acesso_redes_sociais                                        Int?                           @db.TinyInt
  redes_sociais                                               String?                        @db.VarChar(255)
  local_acompanhamento                                        String?                        @db.VarChar(255)
  possui_dificuldade_locomocao                                Int?                           @db.TinyInt
  desc_dificuldade_locomocao                                  String?                        @db.VarChar(255)
  justificativa_falta_documentacao                            Int?
  pais_endereco_id                                            Int?
  localizacao_diferenciada                                    Int?
  avaliacao_inep_prova_ampliada_fonte_18                      Int?                           @db.TinyInt
  cd_audio_deficiente_visual                                  Int?                           @db.TinyInt
  prova_lingua_portuguesa_segunda_lingua                      Int?                           @db.TinyInt
  prova_video_libras                                          Int?                           @db.TinyInt
  ensino_sistema_braile                                       Int?                           @db.TinyInt
  ensino_recursos_optico                                      Int?                           @db.TinyInt
  estrategia_processo_mental                                  Int?                           @db.TinyInt
  orientacao_e_mobilidade                                     Int?                           @db.TinyInt
  ensino_libra                                                Int?                           @db.TinyInt
  ensino_css                                                  Int?                           @db.TinyInt
  estrategia_enriquecimento_curricular                        Int?                           @db.TinyInt
  ensino_uso_soroban                                          Int?                           @db.TinyInt
  ensino_informatica_acessivel                                Int?                           @db.TinyInt
  ensino_modalidade_escrita                                   Int?                           @db.TinyInt
  estrategias_autonomia_ambiente_escolar                      Int?                           @db.TinyInt
  modalidades_ensino                                          Int?
  status_pre_matricula                                        Boolean                        @default(false)
  ano_pre_matricula                                           String?                        @db.VarChar(6)
  pais_residencia_id                                          Int?
  sabatista                                                   Int?                           @db.TinyInt
  escola                                                      escola?                        @relation(fields: [escola_id], references: [id], onUpdate: SetNull, map: "aluno_fk_escola")
  pessoas_aluno_mae_idTopessoas                               pessoas?                       @relation("aluno_mae_idTopessoas", fields: [mae_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "aluno_fk_mae")
  pessoas_aluno_pai_idTopessoas                               pessoas?                       @relation("aluno_pai_idTopessoas", fields: [pai_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "aluno_fk_pai")
  pessoas_aluno_responsavel_idTopessoas                       pessoas?                       @relation("aluno_responsavel_idTopessoas", fields: [responsavel_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "aluno_fk_responsavel")
  tipo_moradia                                                tipo_moradia?                  @relation(fields: [moradia_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "aluno_fk_tipo_moradia")
  aluno_tipo_responsavel                                      aluno_tipo_responsavel?        @relation(fields: [tipo_responsavel_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "aluno_fk_tipo_responsavel")
  aluno_afastamento                                           aluno_afastamento[]
  aluno_escola                                                aluno_escola[]
  aluno_prontuario_imc                                        aluno_prontuario_imc[]
  aluno_prontuario_odontologia                                aluno_prontuario_odontologia[]
  aluno_prontuario_saude                                      aluno_prontuario_saude[]
  aluno_tipo_acompanhamento                                   aluno_tipo_acompanhamento[]
  aluno_tipo_assistencia                                      aluno_tipo_assistencia[]
  aluno_tipo_dificuldade                                      aluno_tipo_dificuldade[]
  aluno_tipo_saneamento                                       aluno_tipo_saneamento[]
  biblioteca_emprestimo                                       biblioteca_emprestimo[]
  casos                                                       casos[]
  certificado_emissao_pessoas                                 certificado_emissao_pessoas[]
  comunicado_destinos                                         comunicado_destinos[]
  cr_registro_semestral                                       cr_registro_semestral[]
  desistencia_aluno                                           desistencia_aluno[]
  desligamento_aluno                                          desligamento_aluno[]
  dispensa_disciplina                                         dispensa_disciplina[]
  emprestimo                                                  emprestimo[]
  historico                                                   historico[]
  log                                                         log[]
  matricula                                                   matricula[]
  motivo_falta_aluno                                          motivo_falta_aluno[]
  ocorrencia_aluno_historico                                  ocorrencia_aluno_historico[]
  orientacao_familiar                                         orientacao_familiar[]
  pege_ead_resposta_do_aluno                                  pege_ead_resposta_do_aluno[]
  pege_sms_sms                                                pege_sms_sms[]
  pege_vacinacao_vacinacao                                    pege_vacinacao_vacinacao[]
  pp_justificar_falta                                         pp_justificar_falta[]
  pp_naolocalizado                                            pp_naolocalizado[]
  programa_social                                             programa_social[]
  rota_aluno                                                  rota_aluno[]
  tipos_deficiencia_aluno                                     tipos_deficiencia_aluno[]

  @@index([escola_id], map: "aluno_fk_escola")
  @@index([moradia_id], map: "aluno_fk_tipo_moradia")
  @@index([tipo_responsavel_id], map: "aluno_fk_tipo_responsavel")
  @@index([mae_id], map: "mae_id")
  @@index([pai_id], map: "pai_id")
  @@index([responsavel_id], map: "responsavel_id")
}

model aluno_afastamento {
  id                       Int                                         @id @default(autoincrement()) @db.UnsignedInt
  pp_motivo_id             Int                                         @default(0)
  aluno_id                 Int                                         @default(0)
  turma_disciplina_id      Int?
  data_inicial             DateTime                                    @db.Date
  data_final               DateTime                                    @db.Date
  qtd_dias                 Int                                         @default(0)
  lancamento_direto_faltas aluno_afastamento_lancamento_direto_faltas? @default(N)
  descricao                String                                      @db.Text
  documento                String?                                     @db.VarChar(200)
  created_at               DateTime                                    @db.DateTime(0)
  updated_at               DateTime                                    @db.DateTime(0)
  deleted_at               DateTime?                                   @db.DateTime(0)
  aluno                    aluno                                       @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "aluno_afastamento_FK_aluno")
  pp_motivo                pp_motivo                                   @relation(fields: [pp_motivo_id], references: [id], onUpdate: Restrict, map: "aluno_afastamento_FK_pp_motivo")
  turma_disciplina         turma_disciplina?                           @relation(fields: [turma_disciplina_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "aluno_afastamento_FK_turma_disciplina")

  @@index([aluno_id], map: "aluno_afastamento_FK_aluno")
  @@index([pp_motivo_id], map: "aluno_afastamento_FK_pp_motivo")
  @@index([turma_disciplina_id], map: "aluno_afastamento_FK_turma_disciplina")
}

model aluno_comunicado {
  id          Int       @id @default(autoincrement())
  escola_id   Int
  comunicado  String    @db.Text
  data_inicio DateTime  @db.Date
  data_fim    DateTime? @db.Date
  created_at  DateTime? @db.DateTime(0)
  deleted_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  escola      escola    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "aluno_comunicado_FK_escola")

  @@index([escola_id], map: "escola_id")
}

model aluno_diagnostico {
  id                      Int                       @id @default(autoincrement())
  matricula_id            Int
  turma_id                Int
  turma_disciplina_id     Int
  servidor_id             Int
  created_at              DateTime?                 @db.DateTime(0)
  updated_at              DateTime?                 @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  matricula               matricula                 @relation(fields: [matricula_id], references: [id], onUpdate: Restrict, map: "FK_aluno_diagnostico_matricula_id")
  servidor                servidor                  @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "FK_aluno_diagnostico_servidor_id")
  turma_disciplina        turma_disciplina          @relation(fields: [turma_disciplina_id], references: [id], onUpdate: Restrict, map: "FK_aluno_diagnostico_turma_disciplina_id")
  turma                   turma                     @relation(fields: [turma_id], references: [id], onUpdate: Restrict, map: "FK_aluno_diagnostico_turma_id")
  aluno_diagnostico_temas aluno_diagnostico_temas[]

  @@index([matricula_id], map: "FK_aluno_diagnostico_matricula_id")
  @@index([servidor_id], map: "FK_aluno_diagnostico_servidor_id")
  @@index([turma_disciplina_id], map: "FK_aluno_diagnostico_turma_disciplina_id")
  @@index([turma_id], map: "FK_aluno_diagnostico_turma_id")
}

model aluno_diagnostico_temas {
  id                        Int                       @id @default(autoincrement())
  aluno_diagnostico_id      Int
  tema_id                   Int
  periodo                   Int
  valor_tema_id             Int
  created_at                DateTime?                 @db.DateTime(0)
  updated_at                DateTime?                 @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                 @db.DateTime(0)
  aluno_diagnostico         aluno_diagnostico         @relation(fields: [aluno_diagnostico_id], references: [id], onUpdate: Restrict, map: "FK_aluno_diagnostico_temas_aluno_diagnostico_id")
  temas_diagnostico         temas_diagnostico         @relation(fields: [tema_id], references: [id], onUpdate: Restrict, map: "FK_aluno_diagnostico_temas_tema_id")
  valores_temas_diagnostico valores_temas_diagnostico @relation(fields: [valor_tema_id], references: [id], onUpdate: Restrict, map: "FK_aluno_diagnostico_valor_tema_id")

  @@index([aluno_diagnostico_id], map: "FK_aluno_diagnostico_temas_aluno_diagnostico_id")
  @@index([tema_id], map: "FK_aluno_diagnostico_temas_tema_id")
  @@index([valor_tema_id], map: "FK_aluno_diagnostico_valor_tema_id")
}

model aluno_escola {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  aluno_id   Int
  escola_id  Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  aluno      aluno     @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "FK_aluno_escola_aluno_id")
  escola     escola    @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "FK_aluno_escola_escola_id")

  @@index([aluno_id], map: "FK_aluno_escola_aluno_id")
  @@index([escola_id], map: "FK_aluno_escola_escola_id")
}

model aluno_planejamento_AEE_experiencias_objetivos {
  id                              Int                             @id @default(autoincrement())
  planejamento_id                 Int
  objetivo_id                     Int
  codigo_objetivo                 String?                         @db.VarChar(15)
  created_at                      DateTime?                       @db.DateTime(0)
  updated_at                      DateTime?                       @default(now()) @db.Timestamp(0)
  deleted_at                      DateTime?                       @db.DateTime(0)
  campos_experiencias_objetivos   campos_experiencias_objetivos   @relation(fields: [objetivo_id], references: [id], onUpdate: Restrict, map: "FK_aluno_planejamento_AEE_experiencias_objetivos_objetivo_id")
  aluno_planejamento_infantil_AEE aluno_planejamento_infantil_AEE @relation(fields: [planejamento_id], references: [id], onUpdate: Restrict, map: "FK_aluno_planejamento_AEE_experiencias_objetivos_planejamento_id")

  @@index([objetivo_id], map: "FK_aluno_planejamento_AEE_experiencias_objetivos_objetivo_id")
  @@index([planejamento_id], map: "FK_aluno_planejamento_AEE_experiencias_objetivos_planejamento_id")
}

model aluno_planejamento_infantil_AEE {
  id                                            Int                                             @id @default(autoincrement())
  turma_id                                      Int
  servidor_id                                   Int?
  matricula_id                                  Int
  ano_letivo_id                                 Int
  escola_id                                     Int
  tipo_periodo_planejamento                     String
  arquivo_url                                   String?                                         @db.VarChar(255)
  periodo                                       String                                          @db.VarChar(50)
  grupo_etario                                  String?                                         @db.Text
  nome_cuidador                                 String?                                         @db.Text
  historia_aluno                                String?                                         @db.Text
  capacidades                                   String?                                         @db.Text
  interesse                                     String?                                         @db.Text
  necessidades                                  String?                                         @db.Text
  recursos                                      String?                                         @db.Text
  ementa                                        String?                                         @db.Text
  metas_prazos                                  String?                                         @db.Text
  profissionais_envolvidos                      String?                                         @db.Text
  atividades_diferenciadas                      String?                                         @db.Text
  procedimento_metodologico                     String?                                         @db.Text
  metodo_avaliacao                              String?                                         @db.Text
  referencias                                   String?                                         @db.Text
  cadastrado_por                                String?                                         @db.VarChar(25)
  gestor_id                                     Int?
  data_validacao                                DateTime?                                       @db.DateTime(0)
  usuario_id_validacao                          Int?
  created_at                                    DateTime?                                       @db.DateTime(0)
  updated_at                                    DateTime?                                       @default(now()) @db.Timestamp(0)
  deleted_at                                    DateTime?                                       @db.DateTime(0)
  aluno_planejamento_AEE_experiencias_objetivos aluno_planejamento_AEE_experiencias_objetivos[]
  ano_letivo                                    ano_letivo                                      @relation(fields: [ano_letivo_id], references: [id], onUpdate: Restrict, map: "FK_aluno_planejamento_infantil_AEE_ano_letivo_id")
  escola                                        escola                                          @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "FK_aluno_planejamento_infantil_AEE_escola_id")
  matricula                                     matricula                                       @relation(fields: [matricula_id], references: [id], onUpdate: Restrict, map: "FK_aluno_planejamento_infantil_AEE_matricula_id")
  servidor                                      servidor?                                       @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_aluno_planejamento_infantil_AEE_servidor_id")
  turma                                         turma                                           @relation(fields: [turma_id], references: [id], onUpdate: Restrict, map: "FK_aluno_planejamento_infantil_AEE_turma_id")
  aluno_planejamento_infantil_AEE_acoes         aluno_planejamento_infantil_AEE_acoes[]
  comentarios_planejamento_aee                  comentarios_planejamento_aee[]

  @@index([ano_letivo_id], map: "FK_aluno_planejamento_infantil_AEE_ano_letivo_id")
  @@index([escola_id], map: "FK_aluno_planejamento_infantil_AEE_escola_id")
  @@index([matricula_id], map: "FK_aluno_planejamento_infantil_AEE_matricula_id")
  @@index([servidor_id], map: "FK_aluno_planejamento_infantil_AEE_servidor_id")
  @@index([turma_id], map: "FK_aluno_planejamento_infantil_AEE_turma_id")
}

model aluno_planejamento_infantil_AEE_acoes {
  id                                           Int                                       @id @default(autoincrement())
  aluno_planejamento_infantil_AEE_id           Int
  acoes_adaptacoes_necessarias_para_o_aluno_id Int
  created_at                                   DateTime?                                 @db.DateTime(0)
  updated_at                                   DateTime                                  @default(now()) @db.Timestamp(0)
  deleted_at                                   DateTime?                                 @db.DateTime(0)
  acoes_adaptacoes_necessarias_para_o_aluno    acoes_adaptacoes_necessarias_para_o_aluno @relation(fields: [acoes_adaptacoes_necessarias_para_o_aluno_id], references: [id], onUpdate: Restrict, map: "fk_aluno_planejamento_infantil_AEE_acoes_acoes")
  aluno_planejamento_infantil_AEE              aluno_planejamento_infantil_AEE           @relation(fields: [aluno_planejamento_infantil_AEE_id], references: [id], onUpdate: Restrict, map: "fk_aluno_planejamento_infantil_AEE_acoes_planejamento")

  @@index([acoes_adaptacoes_necessarias_para_o_aluno_id], map: "fk_aluno_planejamento_infantil_AEE_acoes_acoes")
  @@index([aluno_planejamento_infantil_AEE_id], map: "fk_aluno_planejamento_infantil_AEE_acoes_planejamento")
}

model aluno_projeto_didatico {
  id                  Int               @id @default(autoincrement())
  matricula_id        Int?
  projeto_didatico_id Int?
  created             DateTime          @db.DateTime(0)
  status              Boolean
  created_at          DateTime?         @db.DateTime(0)
  updated_at          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  matricula           matricula?        @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_aluno_projeto_didatico_matricula_id")
  projeto_didatico    projeto_didatico? @relation(fields: [projeto_didatico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_aluno_projeto_didatico_projeto_id")

  @@index([matricula_id], map: "FK_aluno_projeto_didatico_matricula_id")
  @@index([projeto_didatico_id], map: "FK_aluno_projeto_didatico_projeto_id")
}

model aluno_prontuario_imc {
  id             Int                                  @id @default(autoincrement())
  aluno_id       Int
  uid            String?                              @db.VarChar(50)
  latitude       Float?
  longitude      Float?
  peso           Decimal                              @db.Decimal(5, 2)
  altura         Decimal                              @db.Decimal(5, 2)
  imc            Decimal                              @db.Decimal(5, 2)
  observacao     String                               @db.Text
  status         Int
  data           DateTime?                            @db.DateTime(0)
  cadastrado_por aluno_prontuario_imc_cadastrado_por?
  created        DateTime                             @db.DateTime(0)
  created_at     DateTime?                            @db.DateTime(0)
  updated_at     DateTime                             @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?                            @db.DateTime(0)
  aluno          aluno                                @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "aluno_prontuario_imc_fk_aluno")

  @@index([aluno_id], map: "id_usuario")
}

model aluno_prontuario_odontologia {
  id                                  Int                                 @id @default(autoincrement())
  aluno_id                            Int
  escovacao                           Int
  aplicacao_fluor                     Int
  avaliacao_codigo                    Int
  status                              Int
  data                                DateTime?                           @db.DateTime(0)
  created                             DateTime                            @db.DateTime(0)
  observacao                          String                              @db.Text
  created_at                          DateTime?                           @db.DateTime(0)
  updated_at                          DateTime                            @default(now()) @db.Timestamp(0)
  deleted_at                          DateTime?                           @db.DateTime(0)
  aluno                               aluno                               @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "aluno_prontuario_odontologia_fk_aluno")
  aluno_prontuario_odontologia_codigo aluno_prontuario_odontologia_codigo @relation(fields: [avaliacao_codigo], references: [id], onUpdate: Restrict, map: "aluno_prontuario_odontologia_ibfk_1")

  @@index([avaliacao_codigo], map: "avaliacao_codigo")
  @@index([aluno_id], map: "id_usuario")
}

model aluno_prontuario_odontologia_codigo {
  id                           Int                            @id @default(autoincrement())
  nome                         String                         @db.Text
  codigo                       String                         @db.VarChar(155)
  created_at                   DateTime?                      @db.DateTime(0)
  updated_at                   DateTime                       @default(now()) @db.Timestamp(0)
  deleted_at                   DateTime?                      @db.DateTime(0)
  aluno_prontuario_odontologia aluno_prontuario_odontologia[]
}

model aluno_prontuario_saude {
  id                     Int       @id @default(autoincrement())
  aluno_id               Int
  imunizacao_tipo        String    @db.VarChar(50)
  pressao_arterial       String    @db.VarChar(10)
  encaminhamento_doencas String    @db.Text
  status                 Int
  data                   DateTime? @db.DateTime(0)
  created                DateTime  @db.DateTime(0)
  created_at             DateTime? @db.DateTime(0)
  updated_at             DateTime  @default(now()) @db.Timestamp(0)
  deleted_at             DateTime? @db.DateTime(0)
  aluno                  aluno     @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "aluno_prontuario_saude_fk_aluno")

  @@index([aluno_id], map: "id_usuario")
}

model aluno_recuperacao_de_senha_erro {
  id                           Int       @id @default(autoincrement())
  nome_do_aluno_da_tentativa   String    @db.VarChar(150)
  numero_de_tentativas         String?   @default("3") @db.Char(1)
  numero_de_tentativas_erradas String    @db.Char(1)
  ip                           String    @db.VarChar(50)
  created_at                   DateTime  @db.DateTime(0)
  updated_at                   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                   DateTime? @db.DateTime(0)
}

model aluno_tipo_acompanhamento {
  id                     Int                 @id @default(autoincrement())
  aluno_id               Int
  tipo_acompanhamento_id Int
  created_at             DateTime?           @db.DateTime(0)
  updated_at             DateTime            @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?           @db.DateTime(0)
  aluno                  aluno               @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "aluno_tipo_acompanhamento_ibfk_1")
  tipo_acompanhamento    tipo_acompanhamento @relation(fields: [tipo_acompanhamento_id], references: [id], onUpdate: Restrict, map: "aluno_tipo_acompanhamento_ibfk_2")

  @@index([aluno_id], map: "aluno_tipo_acompanhamento_fk_aluno")
  @@index([tipo_acompanhamento_id], map: "aluno_tipo_acompanhamento_fk_tipo_acompanhamento")
}

model aluno_tipo_assistencia {
  id                  Int              @id @default(autoincrement())
  aluno_id            Int
  tipo_assistencia_id Int
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  aluno               aluno            @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "aluno_tipo_assistencia_ibfk_1")
  tipo_assistencia    tipo_assistencia @relation(fields: [tipo_assistencia_id], references: [id], onUpdate: Restrict, map: "aluno_tipo_assistencia_ibfk_2")

  @@index([aluno_id], map: "aluno_tipo_assistencia_fk_aluno")
  @@index([tipo_assistencia_id], map: "aluno_tipo_assistencia_fk_tipo_assistencia")
}

model aluno_tipo_dificuldade {
  id                  Int              @unique(map: "id") @default(autoincrement())
  aluno_id            Int
  tipo_dificuldade_id Int
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  aluno               aluno            @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "aluno_tipo_dificuldade_ibfk_1")
  tipo_dificuldade    tipo_dificuldade @relation(fields: [tipo_dificuldade_id], references: [id], onUpdate: Restrict, map: "aluno_tipo_dificuldade_ibfk_2")

  @@index([aluno_id], map: "aluno_tipo_dificuldade_fk_aluno")
  @@index([tipo_dificuldade_id], map: "aluno_tipo_dificuldade_fk_tipo_dificuldade")
}

model aluno_tipo_responsavel {
  id               Int       @id @default(autoincrement()) @db.UnsignedInt
  tipo_responsavel String    @db.VarChar(50)
  created_at       DateTime  @db.DateTime(0)
  updated_at       DateTime  @default(now()) @db.Timestamp(0)
  deleted_at       DateTime? @db.DateTime(0)
  aluno            aluno[]
}

model aluno_tipo_saneamento {
  id                 Int             @id @default(autoincrement())
  aluno_id           Int
  tipo_saneamento_id Int
  created_at         DateTime?       @db.DateTime(0)
  updated_at         DateTime        @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?       @db.DateTime(0)
  aluno              aluno           @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "aluno_tipo_saneamento_ibfk_1")
  tipo_saneamento    tipo_saneamento @relation(fields: [tipo_saneamento_id], references: [id], onUpdate: Restrict, map: "aluno_tipo_saneamento_ibfk_2")

  @@index([aluno_id], map: "aluno_tipo_saneamento_fk_aluno")
  @@index([tipo_saneamento_id], map: "aluno_tipo_saneamento_fk_tipo_saneamento")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ano {
  id                            Int                           @id @default(autoincrement())
  nivel_ensino_mec_id           Int
  ordem                         Int?
  ciclo_id                      Int?
  codigo                        String?                       @db.Char(20)
  nome                          String?                       @db.VarChar(50)
  individual_escola             String?                       @db.Char(1)
  created                       DateTime?                     @db.DateTime(0)
  status                        Boolean?                      @default(true)
  idade_correta                 Int?
  obrigatoriedade_transferencia Boolean?                      @default(false)
  created_at                    DateTime?                     @db.DateTime(0)
  updated_at                    DateTime                      @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime?                     @db.DateTime(0)
  alinhamento                   alinhamento[]
  ciclo                         ciclo?                        @relation(fields: [ciclo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "ano_fk_ciclo")
  nivel_ensino_mec              nivel_ensino_mec              @relation(fields: [nivel_ensino_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ano_nivel_ensino_mec1")
  ano_escola                    ano_escola[]
  cbc_eixo                      cbc_eixo[]
  cfe_ano                       cfe_ano[]
  disciplina_ano                disciplina_ano[]
  historico_ano                 historico_ano[]
  matricula                     matricula[]
  nucleo_anos                   nucleo_anos[]
  plano_curricular_ano          plano_curricular_ano[]
  servidor_cargo_escola_etapa   servidor_cargo_escola_etapa[]
  simulado                      simulado[]
  turma                         turma[]
  turma_ano                     turma_ano[]
  turma_conferencia             turma_conferencia[]

  @@index([ciclo_id], map: "ano_fk_ciclo")
  @@index([nivel_ensino_mec_id], map: "fk_ano_nivel_ensino_mec1")
}

model ano_escola {
  id            Int         @id @default(autoincrement())
  escola_id     Int
  ano_letivo_id Int?
  ano_id        Int
  created_at    DateTime?   @db.DateTime(0)
  updated_at    DateTime    @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?   @db.DateTime(0)
  ano           ano         @relation(fields: [ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ano_escola_ano1")
  ano_letivo    ano_letivo? @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ano_escola_ano_letivo1")
  escola        escola      @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ano_escola_escola1")

  @@index([ano_id], map: "fk_ano_escola_ano1")
  @@index([ano_letivo_id], map: "fk_ano_escola_ano_letivo1")
  @@index([escola_id], map: "fk_ano_escola_escola1")
}

model ano_letivo {
  id                                                                             Int                               @id @default(autoincrement())
  escola_id                                                                      Int?
  identificacao                                                                  String?                           @db.VarChar(50)
  data_inicio_matricula                                                          DateTime?                         @db.Date
  data_fim_matricula                                                             DateTime?                         @db.Date
  data_inicio_aulas                                                              DateTime?                         @db.Date
  data_fim_primeiro_semestre                                                     DateTime?                         @db.Date
  data_inicio_segundo_semestre                                                   DateTime?                         @db.Date
  data_fim_aulas                                                                 DateTime?                         @db.Date
  situacao                                                                       String?                           @db.Char(20)
  data_inicio_eja1                                                               DateTime?                         @db.Date
  data_fim_eja1                                                                  DateTime?                         @db.Date
  data_inicio_eja2                                                               DateTime?                         @db.Date
  data_fim_eja2                                                                  DateTime?                         @db.Date
  created                                                                        DateTime?                         @db.DateTime(0)
  status                                                                         String?                           @db.Char(1)
  created_at                                                                     DateTime?                         @db.DateTime(0)
  updated_at                                                                     DateTime                          @default(now()) @db.Timestamp(0)
  deleted_at                                                                     DateTime?                         @db.DateTime(0)
  acompanhamento_planos                                                          acompanhamento_planos[]
  aluno_planejamento_infantil_AEE                                                aluno_planejamento_infantil_AEE[]
  ano_escola                                                                     ano_escola[]
  escola                                                                         escola?                           @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ano_letivo_escola1")
  calendario_escolar                                                             calendario_escolar[]
  cfe_anoletivo                                                                  cfe_anoletivo[]
  cr                                                                             cr[]
  desistencia_aluno                                                              desistencia_aluno[]
  desligamento_aluno                                                             desligamento_aluno[]
  disciplinas_escola                                                             disciplinas_escola[]
  dispensa_disciplina                                                            dispensa_disciplina[]
  escola_situacao_ano                                                            escola_situacao_ano[]
  formulario_turma_ano                                                           formulario_turma_ano[]
  modalidade_ensino_escola                                                       modalidade_ensino_escola[]
  nivel_ensino_escola                                                            nivel_ensino_escola[]
  ocorrencia_aluno                                                               ocorrencia_aluno[]
  pp_prazo                                                                       pp_prazo[]
  servidor_ferias                                                                servidor_ferias[]
  tipos_ensino_escola                                                            tipos_ensino_escola[]
  turma                                                                          turma[]
  turma_planejamento                                                             turma_planejamento[]
  turma_planejamento_infantil                                                    turma_planejamento_infantil[]
  turma_planejamento_objetivo_turma_planejamento_objetivo_ano_letivoToano_letivo turma_planejamento_objetivo[]     @relation("turma_planejamento_objetivo_ano_letivoToano_letivo")

  @@index([escola_id, identificacao], map: "fk_ano_letivo_escola1")
}

model api_alteracao {
  id                  BigInt                 @id @default(autoincrement())
  escola_id           Int?                   @db.UnsignedInt
  aluno_id            Int?                   @db.UnsignedInt
  servidor_id         Int?                   @db.UnsignedInt
  matricula_id        Int?                   @db.UnsignedInt
  turma_id            Int?                   @db.UnsignedInt
  disciplina_mec_id   Int?                   @db.UnsignedInt
  turma_disciplina_id Int?                   @db.UnsignedInt
  aula_id             Int?                   @db.UnsignedInt
  falta_id            Int?                   @db.UnsignedInt
  nota_id             Int?                   @db.UnsignedInt
  horario_id          Int?                   @db.UnsignedInt
  avaliacao_id        Int?
  aula                Int?
  campos              String?                @db.Text
  status              api_alteracao_status
  entidade            api_alteracao_entidade
  data_evento         DateTime?              @db.DateTime(0)
  timestamp_evento    Int?
  created_at          DateTime?              @db.DateTime(0)
  updated_at          DateTime               @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?              @db.DateTime(0)

  @@index([aluno_id], map: "aluno_id")
  @@index([aula_id], map: "aula_id")
  @@index([entidade, data_evento, status], map: "entidade")
  @@index([matricula_id], map: "matricula_id")
}

model api_dispositivo {
  id                            Int                        @id @default(autoincrement()) @db.UnsignedInt
  professor_id                  Int?                       @db.UnsignedInt
  uid                           String                     @db.VarChar(255)
  dispositivo                   String?                    @db.Text
  versao_api                    String?                    @default("1") @db.VarChar(5)
  observacao                    String?                    @db.VarChar(50)
  habilitado_em                 DateTime                   @db.DateTime(0)
  latitude_habilitado           Float?
  longitude_habilitado          Float?
  numero_sincronizacao_total    Int                        @default(0)
  numero_sincronizacao_parcial  Int                        @default(0)
  numero_sincronizacao_servidor Int                        @default(0)
  habilitado                    api_dispositivo_habilitado @default(S)
  ultima_sincronizacao_total    DateTime?                  @db.DateTime(0)
  ultima_sincronizacao_parcial  DateTime?                  @db.DateTime(0)
  ultima_sincronizacao_servidor DateTime?                  @db.DateTime(0)
  created_at                    DateTime?                  @db.DateTime(0)
  updated_at                    DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime?                  @db.DateTime(0)
}

model api_falta_aluno_envio {
  id                     Int                                @id @default(autoincrement()) @db.UnsignedInt
  api_falta_aluno_sms_id Int                                @db.UnsignedInt
  mensagem_modelo_id     Int                                @db.UnsignedInt
  destinatario           api_falta_aluno_envio_destinatario
  numero                 String                             @db.VarChar(50)
  tentativa_de_envio_em  DateTime?                          @db.DateTime(0)
  error_code             Int?
  error_message          String?                            @db.VarChar(10)
  codigo_rastreio        String?                            @db.VarChar(10)
  created_at             DateTime                           @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at             DateTime                           @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at             DateTime?                          @db.Timestamp(0)
}

model api_falta_aluno_sms {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  falta_aluno_id Int       @db.UnsignedInt
  matricula_id   Int       @db.UnsignedInt
  aula_id        Int       @db.UnsignedInt
  created_at     DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at     DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at     DateTime? @db.Timestamp(0)
}

model api_log_alertas {
  id            Int      @id @default(autoincrement()) @db.UnsignedInt
  professor_id  Int?     @db.UnsignedInt
  alerta        String   @db.VarChar(50)
  onde          String   @db.VarChar(50)
  entidade      String   @db.VarChar(50)
  identificador String   @db.VarChar(50)
  json          String   @db.VarChar(400)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model api_log_chamada {
  id                     Int                          @id @default(autoincrement()) @db.UnsignedInt
  chave_requisicao       String                       @db.VarChar(255)
  api_dispositivo_id     Int                          @db.UnsignedInt
  versao_api             String?                      @default("1") @db.VarChar(5)
  professor_id           Int
  ambiente               String                       @db.VarChar(255)
  tipo_chamada           api_log_chamada_tipo_chamada
  json_entrada           String?                      @db.LongText
  json_saida             String?                      @db.LongText
  informacao_extra       String?                      @db.Text
  latitude               Float?
  longitude              Float?
  timestamp_dispositivo  String?                      @db.VarChar(50)
  datetime_dispositivo   DateTime?                    @db.DateTime(0)
  datetime_dos_dados_de  DateTime?                    @db.DateTime(0)
  datetime_dos_dados_ate DateTime?                    @db.DateTime(0)
  created_at             DateTime                     @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at             DateTime                     @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
}

model api_log_erro {
  id                 Int      @id @default(autoincrement()) @db.UnsignedInt
  chave_requisicao   String   @db.VarChar(255)
  tipo_erro_id       Int      @db.UnsignedInt
  api_dispositivo_id Int?     @db.UnsignedInt
  professor_id       Int?     @db.UnsignedInt
  chamada_id         Int?     @db.UnsignedInt
  ambiente           String   @db.VarChar(255)
  json               String?  @db.LongText
  erro               String   @db.LongText
  created_at         DateTime @default(now()) @db.Timestamp(0)
  updated_at         DateTime @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
}

model api_mensagem_modelo {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  mensagem   String    @db.VarChar(255)
  created_at DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
}

model api_sms {
  id                                                       Int                  @id @default(autoincrement()) @db.UnsignedInt
  api_sms_tipo_id                                          Int                  @db.UnsignedInt
  created_at                                               DateTime             @db.DateTime(0)
  updated_at                                               DateTime             @default(now()) @db.Timestamp(0)
  deleted_at                                               DateTime?            @db.DateTime(0)
  api_sms_tipo                                             api_sms_tipo         @relation(fields: [api_sms_tipo_id], references: [id], onUpdate: Restrict, map: "fk_api_sms_api_sms_tipo")
  api_sms_envio                                            api_sms_envio[]
  api_sms_falta_api_sms_falta_api_sms_mesclado_idToapi_sms api_sms_falta[]      @relation("api_sms_falta_api_sms_mesclado_idToapi_sms")
  api_sms_falta_api_sms_falta_api_sms_idToapi_sms          api_sms_falta[]      @relation("api_sms_falta_api_sms_idToapi_sms")
  api_sms_ocorrencia                                       api_sms_ocorrencia[]

  @@index([api_sms_tipo_id], map: "fk_api_sms_api_sms_tipo")
}

model api_sms_destinatario_tipo {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  descricao     String          @db.VarChar(50)
  created_at    DateTime        @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?       @db.DateTime(0)
  api_sms_envio api_sms_envio[]
}

model api_sms_envio {
  id                           Int                       @id @default(autoincrement()) @db.UnsignedInt
  api_sms_id                   Int                       @db.UnsignedInt
  api_sms_destinatario_tipo_id Int                       @db.UnsignedInt
  api_sms_envio_status_id      Int                       @db.UnsignedInt
  numero                       String                    @db.VarChar(50)
  mensagem                     String                    @db.VarChar(140)
  envio_em                     DateTime?                 @db.DateTime(0)
  envio_resposta               String?                   @db.VarChar(50)
  envio_resultado              String?                   @db.VarChar(50)
  envio_id                     String?                   @db.VarChar(50)
  created_at                   DateTime                  @db.DateTime(0)
  updated_at                   DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at                   DateTime?                 @db.DateTime(0)
  api_sms                      api_sms                   @relation(fields: [api_sms_id], references: [id], onUpdate: Restrict, map: "fk_api_sms_envio_api_sms")
  api_sms_destinatario_tipo    api_sms_destinatario_tipo @relation(fields: [api_sms_destinatario_tipo_id], references: [id], onUpdate: Restrict, map: "fk_api_sms_envio_api_sms_destinatario_tipo")
  api_sms_envio_status         api_sms_envio_status      @relation(fields: [api_sms_envio_status_id], references: [id], onUpdate: Restrict, map: "fk_api_sms_envio_api_sms_envio_status")

  @@index([api_sms_id], map: "fk_api_sms_envio_api_sms")
  @@index([api_sms_destinatario_tipo_id], map: "fk_api_sms_envio_api_sms_destinatario_tipo")
  @@index([api_sms_envio_status_id], map: "fk_api_sms_envio_api_sms_envio_status")
}

model api_sms_envio_status {
  id            Int             @id @default(autoincrement()) @db.UnsignedInt
  descricao     String          @db.VarChar(50)
  created_at    DateTime        @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?       @db.DateTime(0)
  api_sms_envio api_sms_envio[]
}

model api_sms_falta {
  id                                                 Int       @id @default(autoincrement()) @db.UnsignedInt
  api_sms_id                                         Int       @db.UnsignedInt
  api_sms_mesclado_id                                Int?      @db.UnsignedInt
  falta_aluno_id                                     Int
  matricula_id                                       Int
  aula_id                                            Int
  created_at                                         DateTime  @db.DateTime(0)
  updated_at                                         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                                         DateTime? @db.DateTime(0)
  api_sms_api_sms_falta_api_sms_mesclado_idToapi_sms api_sms?  @relation("api_sms_falta_api_sms_mesclado_idToapi_sms", fields: [api_sms_mesclado_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_api_sms_falta_api_mesclado_sms")
  api_sms_api_sms_falta_api_sms_idToapi_sms          api_sms   @relation("api_sms_falta_api_sms_idToapi_sms", fields: [api_sms_id], references: [id], onUpdate: Restrict, map: "fk_api_sms_falta_api_sms")
  aula                                               aula      @relation(fields: [aula_id], references: [id], onUpdate: Restrict, map: "fk_api_sms_falta_aula")
  matricula                                          matricula @relation(fields: [matricula_id], references: [id], onUpdate: Restrict, map: "fk_api_sms_falta_matricula")

  @@index([api_sms_id], map: "api_sms_id")
  @@index([api_sms_mesclado_id], map: "api_sms_mesclado_id")
  @@index([aula_id], map: "fk_api_sms_falta_aula")
  @@index([falta_aluno_id], map: "fk_api_sms_falta_falta_aluno")
  @@index([matricula_id], map: "fk_api_sms_falta_matricula")
}

model api_sms_ocorrencia {
  id               Int              @id @default(autoincrement()) @db.UnsignedInt
  api_sms_id       Int              @db.UnsignedInt
  ocorrencia_id    Int
  matricula_id     Int
  created_at       DateTime         @db.DateTime(0)
  updated_at       DateTime         @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?        @db.DateTime(0)
  api_sms          api_sms          @relation(fields: [api_sms_id], references: [id], onUpdate: Restrict, map: "fk_sms_ocorrencia_api_sms")
  matricula        matricula        @relation(fields: [matricula_id], references: [id], onUpdate: Restrict, map: "fk_sms_ocorrencia_matricula")
  ocorrencia_aluno ocorrencia_aluno @relation(fields: [ocorrencia_id], references: [id], onUpdate: Restrict, map: "fk_sms_ocorrencia_ocorrencia")

  @@index([api_sms_id], map: "fk_sms_ocorrencia_api_sms")
  @@index([matricula_id], map: "fk_sms_ocorrencia_matricula")
  @@index([ocorrencia_id], map: "fk_sms_ocorrencia_ocorrencia")
}

model api_sms_tipo {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  descricao  String    @db.VarChar(50)
  created_at DateTime  @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  api_sms    api_sms[]
}

model api_tipo_erro {
  id   Int    @id @default(autoincrement())
  tipo String @db.VarChar(50)
}

model aplicativos {
  id             Int              @id @default(autoincrement())
  nome           String           @db.VarChar(50)
  created_at     DateTime         @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  aviso_destinos aviso_destinos[]
}

model area_pos_graduacao {
  id         Int        @id @default(autoincrement())
  cod_geral  String?    @db.VarChar(2)
  area_geral String?    @db.VarChar(100)
  created_at DateTime?  @default(now()) @db.DateTime(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.DateTime(0)
  formacao   formacao[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model arquivo_campo {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  arquivo_tipo_id          Int                        @db.UnsignedInt
  nome                     String                     @db.VarChar(30)
  busca                    Boolean                    @default(false)
  tipo_dado                String                     @default("2")
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  arquivo_tipo             arquivo_tipo               @relation(fields: [arquivo_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_arquivo_campo_tipo")
  arquivo_campo_referencia arquivo_campo_referencia[]
  arquivo_valor            arquivo_valor[]

  @@index([arquivo_tipo_id], map: "fk_arquivo_campo_tipo")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model arquivo_campo_referencia {
  id                       Int           @id @default(autoincrement()) @db.UnsignedInt
  classificacao_id         Int           @db.UnsignedInt
  arquivo_campo_id         Int           @db.UnsignedInt
  campo_referencia         String        @db.VarChar(50)
  tabela_chave_estrangeira String?       @db.VarChar(50)
  campo_chave_estrangeira  String?       @db.VarChar(50)
  created_at               DateTime?     @db.DateTime(0)
  updated_at               DateTime      @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?     @db.DateTime(0)
  arquivo_campo            arquivo_campo @relation(fields: [arquivo_campo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_arquivo_referencia_arquivo_campo")
  classificacao            classificacao @relation(fields: [classificacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_arquivo_referencia_classificacao")

  @@index([arquivo_campo_id], map: "fk_arquivo_referencia_arquivo_campo")
  @@index([classificacao_id], map: "fk_arquivo_referencia_classificacao")
}

model arquivo_documento {
  id                       Int                   @id @default(autoincrement()) @db.UnsignedInt
  classificacao_arquivo_id Int                   @db.UnsignedInt
  arquivo                  String                @db.VarChar(30)
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  classificacao_arquivo    classificacao_arquivo @relation(fields: [classificacao_arquivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_arquivo_documento_classificacao")

  @@index([classificacao_arquivo_id], map: "fk_arquivo_documento_classificacao")
}

model arquivo_tipo {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  nome                  String?                 @db.VarChar(30)
  created               DateTime?               @db.DateTime(0)
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  arquivo_campo         arquivo_campo[]
  classificacao_arquivo classificacao_arquivo[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model arquivo_valor {
  id                       Int                   @id @default(autoincrement()) @db.UnsignedInt
  arquivo_campo_id         Int                   @db.UnsignedInt
  classificacao_arquivo_id Int                   @db.UnsignedInt
  valor                    String                @db.TinyText
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  arquivo_campo            arquivo_campo         @relation(fields: [arquivo_campo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_arquivo_valor_campo")
  classificacao_arquivo    classificacao_arquivo @relation(fields: [classificacao_arquivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_arquivo_valor_classificacao")

  @@index([arquivo_campo_id], map: "fk_arquivo_valor_campo")
  @@index([classificacao_arquivo_id], map: "fk_arquivo_valor_classificacao")
}

model assunto_fale_conosco {
  id           Int            @id @default(autoincrement())
  assunto      String         @db.VarChar(80)
  email        String         @db.VarChar(500)
  created_at   DateTime?      @db.DateTime(0)
  updated_at   DateTime       @default(now()) @db.Timestamp(0)
  deleted_at   DateTime?      @db.DateTime(0)
  fale_conosco fale_conosco[]
}

model ata_escola {
  id                 Int                  @id @default(autoincrement())
  ata_ordem_id       Int?
  escola_id          Int?
  titulo             String?              @db.VarChar(200)
  conteudo           String?              @db.Text
  data_hora_reuniao  DateTime?            @db.DateTime(0)
  created            DateTime?            @db.DateTime(0)
  status             Boolean?             @default(true)
  created_at         DateTime?            @db.DateTime(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?            @db.DateTime(0)
  ata_ordem          ata_ordem?           @relation(fields: [ata_ordem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ata_escola_fk_ata_ordem")
  escola             escola?              @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ata_escola_fk_escola")
  ata_escola_arquivo ata_escola_arquivo[]
  ata_escola_membro  ata_escola_membro[]

  @@index([ata_ordem_id], map: "ata_escola_fk_ata_ordem")
  @@index([escola_id], map: "ata_escola_fk_escola")
}

model ata_escola_arquivo {
  id            Int         @id @default(autoincrement())
  ata_escola_id Int?
  nome_arquivo  String?     @db.VarChar(200)
  created       DateTime?   @db.DateTime(0)
  status        Boolean?    @default(true)
  created_at    DateTime?   @db.DateTime(0)
  updated_at    DateTime    @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?   @db.DateTime(0)
  ata_escola    ata_escola? @relation(fields: [ata_escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ata_escola_arquivo_fk_ata_escola")

  @@index([ata_escola_id], map: "ata_escola_arquivo_fk_ata_escola")
}

model ata_escola_membro {
  id                             Int         @id @default(autoincrement())
  ata_escola_id                  Int?
  conselho_escolar_composicao_id Int?
  created_at                     DateTime?   @db.DateTime(0)
  updated_at                     DateTime    @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?   @db.DateTime(0)
  ata_escola                     ata_escola? @relation(fields: [ata_escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ata_escola_membro_fk_ata_escola")

  @@index([ata_escola_id], map: "ata_escola_membro_fk_ata_escola")
  @@index([conselho_escolar_composicao_id], map: "ata_escola_membro_fk_conselho_escolar_composicao")
}

model ata_ordem {
  id         Int          @id @default(autoincrement())
  descricao  String?      @db.Text
  created    DateTime?    @db.DateTime(0)
  status     Boolean?
  created_at DateTime?    @db.DateTime(0)
  updated_at DateTime     @default(now()) @db.Timestamp(0)
  deleted_at DateTime?    @db.DateTime(0)
  ata_escola ata_escola[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ata_reuniao {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  escola_id             Int?
  pauta                 String                  @db.VarChar(200)
  data_agendamento      DateTime                @db.Date
  data_reuniao          DateTime                @db.Date
  situacao              ata_reuniao_situacao    @default(AG)
  descricao             String?                 @db.Text
  created_at            DateTime                @db.DateTime(0)
  updated_at            DateTime                @db.DateTime(0)
  deleted_at            DateTime?               @db.DateTime(0)
  escola                escola?                 @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "ata_reuniao_FK_escola")
  ata_reuniao_conselho  ata_reuniao_conselho[]
  ata_reuniao_documento ata_reuniao_documento[]

  @@index([escola_id], map: "ata_reuniao_FK_escola")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ata_reuniao_conselho {
  id                Int                                     @id @default(autoincrement()) @db.UnsignedInt
  ata_reuniao_id    Int                                     @db.UnsignedInt
  pessoa_id         Int?                                    @db.UnsignedInt
  tipo_participante ata_reuniao_conselho_tipo_participante?
  created_at        DateTime                                @db.DateTime(0)
  updated_at        DateTime                                @db.DateTime(0)
  deleted_at        DateTime?                               @db.DateTime(0)
  ata_reuniao       ata_reuniao                             @relation(fields: [ata_reuniao_id], references: [id], onUpdate: Restrict, map: "ata_reuniao_conselho_FK_ata_reuniao")

  @@index([ata_reuniao_id], map: "ata_reuniao_conselho_FK_ata_reuniao")
}

model ata_reuniao_documento {
  id                            Int                             @id @default(autoincrement()) @db.UnsignedInt
  ata_reuniao_id                Int                             @db.UnsignedInt
  nome_documento                String                          @db.VarChar(200)
  descricao                     String?                         @db.Text
  created_at                    DateTime                        @db.DateTime(0)
  updated_at                    DateTime                        @db.DateTime(0)
  deleted_at                    DateTime?                       @db.DateTime(0)
  ata_reuniao                   ata_reuniao                     @relation(fields: [ata_reuniao_id], references: [id], onUpdate: Restrict, map: "ata_reuniao_documento_FK_ata_reuniao")
  ata_reuniao_documento_arquivo ata_reuniao_documento_arquivo[]

  @@index([ata_reuniao_id], map: "ata_reuniao_documento_FK_ata_reuniao")
}

model ata_reuniao_documento_arquivo {
  id                       Int                   @id @default(autoincrement()) @db.UnsignedInt
  ata_reuniao_documento_id Int                   @db.UnsignedInt
  nome_arquivo             String                @db.VarChar(200)
  nome_original_arquivo    String                @db.VarChar(200)
  created_at               DateTime              @db.DateTime(0)
  updated_at               DateTime              @db.DateTime(0)
  deleted_at               DateTime?             @db.DateTime(0)
  ata_reuniao_documento    ata_reuniao_documento @relation(fields: [ata_reuniao_documento_id], references: [id], onUpdate: Restrict, map: "ata_reuniao_documento_arquivo_FK_ata_reuniao_documento")

  @@index([ata_reuniao_documento_id], map: "ata_reuniao_documento_arquivo_FK_ata_reuniao_documento")
}

model atendimento_social {
  id                        Int       @id @default(autoincrement())
  aluno_id                  Int
  servidor_id               Int
  sintese_tecnica           String?   @db.VarChar(2000)
  data_criacao              DateTime? @db.Date
  created_at                DateTime? @db.DateTime(0)
  updated_at                DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                DateTime? @db.DateTime(0)
  responsavel_id            Int?
  nome_responsavel          String?   @db.VarChar(255)
  endereco                  String?   @db.VarChar(255)
  quant_adultos             Int?      @db.TinyInt
  quant_criancas            Int?      @db.TinyInt
  quant_idosos              Int?      @db.TinyInt
  renda_valor               Decimal?  @db.Decimal(12, 2)
  tipo_renda                String?   @db.VarChar(255)
  participa_programa_social Int?      @db.TinyInt
  quais_programa_social     String?   @db.VarChar(255)
  se_taipa_palha            Int?      @db.TinyInt
  se_taipa_telha            Int?      @db.TinyInt
  se_tijolo_palha           Int?      @db.TinyInt
  se_tijolo_telha           Int?      @db.TinyInt
  se_alvenaria              Int?      @db.TinyInt
  se_propria                Int?      @db.TinyInt
  se_alugada                Int?      @db.TinyInt
  se_cedida                 Int?      @db.TinyInt
  se_agregado               Int?      @db.TinyInt
  se_arrendada              Int?      @db.TinyInt
  se_invasao                Int?      @db.TinyInt
  se_outros                 String?   @db.VarChar(255)
  piso_chao_batido          Int?      @db.TinyInt
  piso_cimento              Int?      @db.TinyInt
  piso_ceramica             Int?      @db.TinyInt
  piso_outros               String?   @db.VarChar(255)
  sp_cras                   Int?      @db.TinyInt
  sp_asfaltamento           Int?      @db.TinyInt
  sp_posto                  Int?      @db.TinyInt
  sp_escola                 Int?      @db.TinyInt
  sp_outros                 String?   @db.VarChar(255)
  aa_encanada               Int?      @db.TinyInt
  aa_comunitaria            Int?      @db.TinyInt
  aa_cacimba                Int?      @db.TinyInt
  aa_poco                   Int?      @db.TinyInt
  aa_outros                 String?   @db.VarChar(255)
  ta_fervida                Int?      @db.TinyInt
  ta_filtrada               Int?      @db.TinyInt
  ta_coada                  Int?      @db.TinyInt
  ta_sem                    Int?      @db.TinyInt
  ta_outros                 String?   @db.VarChar(255)
  es_rede                   Int?      @db.TinyInt
  es_septica                Int?      @db.TinyInt
  es_vala                   Int?      @db.TinyInt
  es_rio                    Int?      @db.TinyInt
  es_rudimentar             Int?      @db.TinyInt
  es_outros                 String?   @db.VarChar(255)
  lixo_coletado             Int?      @db.TinyInt
  lixo_queimado             Int?      @db.TinyInt
  lixo_enterrado            Int?      @db.TinyInt
  lixo_terreno              Int?      @db.TinyInt
  lixo_rio                  Int?      @db.TinyInt
  lixo_outros               String?   @db.VarChar(255)
  tem_energia               Int?      @db.TinyInt
  iluminacao_outros         String?   @db.VarChar(255)
  possui_problemas          Int?      @db.TinyInt
  quais_problemas           String?   @db.VarChar(255)
  possui_dependencias       Int?      @db.TinyInt
  quais_dependencias        String?   @db.VarChar(255)
  possui_violencias         Int?      @db.TinyInt
  quais_violencias          String?   @db.VarChar(255)
  obs_composicao            String?   @db.VarChar(255)
}

model atendimento_social_anexos {
  id                    Int       @id @default(autoincrement())
  atendimento_social_id Int
  url_arquivo           String?   @db.VarChar(255)
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
  tipo                  Int?      @db.TinyInt
  nome_original         String?   @db.VarChar(255)
}

model atividades_permanentes {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(100)
  status     Int?      @default(1) @db.TinyInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model atualizar_documentos_escola {
  id         Int       @id @default(autoincrement())
  escola_id  Int?
  tipo       String?
  nome       String?   @db.VarChar(50)
  descricao  String?   @db.Text
  arquivo    String?   @db.VarChar(50)
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  escola     escola?   @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_documentoescola_escola")

  @@index([escola_id], map: "fk_documentoescola_escola")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model aula {
  id                                Int                                 @id @default(autoincrement())
  servidor_id                       Int?
  usuario_id                        Int?                                @db.UnsignedInt
  turma_disciplina_id               Int?
  horario_id                        Int?
  turma_id                          Int?
  tipo_aula                         aula_tipo_aula?                     @default(Normal)
  uid                               String?                             @db.VarChar(50)
  data_aula                         DateTime?                           @db.Date
  hora_inicio                       DateTime?                           @db.Time(0)
  hora_fim                          DateTime?                           @db.Time(0)
  qtd_aula                          Int?                                @default(1)
  atividade                         String?                             @db.Text
  dificuldade                       String?                             @db.Text
  avanco                            String?                             @db.Text
  atividade_recuperacao             String?                             @db.Text
  forma_trabalho                    aula_forma_trabalho?
  justificativa_falta_horario       String?                             @db.TinyText
  eixo                              String?                             @db.Text
  capacidade                        String?                             @db.Text
  objetivo                          String?                             @db.Text
  desenvolvimento                   String?                             @db.Text
  avaliacao                         String?                             @db.Text
  created_plano                     DateTime?                           @db.DateTime(0)
  cadastrado_por                    aula_cadastrado_por?
  latitude                          Float?
  longitude                         Float?
  nao_presencial                    String?                             @default("0")
  usuario_id_validacao              Int?
  data_validacao                    DateTime?                           @db.DateTime(0)
  created_at                        DateTime?                           @db.DateTime(0)
  data_cadastro_mobile              DateTime?                           @db.DateTime(0)
  updated_at                        DateTime                            @default(now()) @db.Timestamp(0)
  deleted_at                        DateTime?                           @db.DateTime(0)
  horario_id_fim                    Int?
  aula_presencial                   Int?                                @default(0) @db.TinyInt
  aula_hibrida                      Int?                                @default(0) @db.TinyInt
  api_sms_falta                     api_sms_falta[]
  turma                             turma?                              @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "aula_FK_turma")
  horario                           horario?                            @relation(fields: [horario_id], references: [id], onUpdate: SetNull, map: "fk_aula_horario")
  turma_disciplina                  turma_disciplina?                   @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_aula_turma_disciplina1")
  aula_anexo                        aula_anexo[]
  aula_disciplina                   aula_disciplina[]
  aula_pcn_capacidade               aula_pcn_capacidade[]
  cbc_habilidade_aula               cbc_habilidade_aula[]
  comentarios_aula_gestor_professor comentarios_aula_gestor_professor[]
  pege_ead_anexosdoalunonaaula      pege_ead_anexosdoalunonaaula[]
  pege_ead_atividade                pege_ead_atividade[]
  pege_ead_comentarionaaula         pege_ead_comentarionaaula[]

  @@index([turma_id], map: "aula_FK_turma")
  @@index([data_aula], map: "data_aula")
  @@index([horario_id], map: "fk_aula_horario")
  @@index([turma_disciplina_id], map: "fk_aula_turma_disciplina1")
}

model aula_anexo {
  id         Int       @id @default(autoincrement())
  aula_id    Int?
  url        String?   @db.VarChar(255)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  aula       aula?     @relation(fields: [aula_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "aula_anexo_fk_aula_id")

  @@index([aula_id], map: "aula_id")
  @@index([id], map: "id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model aula_disciplina {
  id                  Int                             @id @default(autoincrement())
  servidor_id         Int?
  usuario_id          Int?
  aula_id             Int
  turma_disciplina_id Int
  horario_id          Int?
  forma_trabalho      aula_disciplina_forma_trabalho?
  cadastrado_por      aula_disciplina_cadastrado_por?
  created             DateTime                        @db.DateTime(0)
  status              Int                             @default(1)
  created_at          DateTime?                       @db.DateTime(0)
  updated_at          DateTime                        @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?                       @db.DateTime(0)
  aula                aula                            @relation(fields: [aula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "aula_disciplina_fk_aula")
  horario             horario?                        @relation(fields: [horario_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "aula_disciplina_fk_horario")
  turma_disciplina    turma_disciplina                @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "aula_disciplina_fk_turma_disciplina")
  aula_horarios       aula_horarios[]

  @@index([aula_id], map: "aula_id")
  @@index([horario_id], map: "horario_id")
  @@index([id], map: "id")
  @@index([turma_disciplina_id], map: "turma_disciplina_id")
}

model aula_horarios {
  id                 Int             @id @default(autoincrement())
  horario_id         Int?
  hora_inicio        DateTime?       @db.Time(0)
  aula_disciplina_id Int
  hora_fim           DateTime?       @db.Time(0)
  created_at         DateTime?       @db.DateTime(0)
  updated_at         DateTime?       @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?       @db.DateTime(0)
  aula_disciplina    aula_disciplina @relation(fields: [aula_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_aula_horarios_aula_disciplina_id")
  horario            horario?        @relation(fields: [horario_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_aula_horarios_horario_id")

  @@index([horario_id], map: "FK_aula_horarios_horario_id")
  @@index([aula_disciplina_id], map: "Fk_aula_disciplina_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model aula_pcn_capacidade {
  id                Int             @id @default(autoincrement())
  servidor_id       Int?
  usuario_id        Int?
  pcn_capacidade_id Int?
  aula_id           Int?
  created_at        DateTime?       @db.DateTime(0)
  updated_at        DateTime        @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?       @db.DateTime(0)
  aula              aula?           @relation(fields: [aula_id], references: [id], onUpdate: SetNull, map: "fk_aula_aula_pcn_capacidade")
  pcn_capacidade    pcn_capacidade? @relation(fields: [pcn_capacidade_id], references: [id], onUpdate: SetNull, map: "fk_pcn_capacidade_aula_pcn_capacidade")

  @@index([aula_id], map: "fk_aula_aula_pcn_capacidade")
  @@index([pcn_capacidade_id], map: "fk_pcn_capacidade_aula_pcn_capacidade")
}

model aula_visualizacao {
  id              Int       @id @default(autoincrement())
  aula_id         Int
  matricula_id    Int
  horario_entrada DateTime? @db.DateTime(0)
  horario_saida   DateTime? @db.DateTime(0)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime  @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @db.DateTime(0)
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique(map: "name") @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]
}

model auth_group_permissions {
  id              Int             @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onUpdate: Restrict, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onUpdate: Restrict, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([permission_id], map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
}

model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onUpdate: Restrict, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.DateTime(6)
  is_superuser               Boolean
  username                   String                       @unique(map: "username") @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.DateTime(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]
}

model auth_user_groups {
  id         Int        @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onUpdate: Restrict, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
}

model auth_user_user_permissions {
  id              Int             @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onUpdate: Restrict, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
}

model autor {
  id           Int            @id @unique(map: "id_UNIQUE") @default(autoincrement())
  nome         String?        @db.VarChar(255)
  descricao    String?        @db.Text
  created      DateTime?      @db.DateTime(0)
  status       String?        @db.VarChar(1)
  created_at   DateTime?      @db.DateTime(0)
  updated_at   DateTime       @default(now()) @db.Timestamp(0)
  deleted_at   DateTime?      @db.DateTime(0)
  acervo_autor acervo_autor[]
}

model avaliacao {
  id                   Int                    @id @default(autoincrement())
  escola_id            Int?
  disciplina_mec_id    Int
  nome                 String?                @db.VarChar(50)
  descricao            String?                @db.Text
  created              DateTime?              @db.DateTime(0)
  status               Boolean                @default(true)
  created_at           DateTime?              @db.DateTime(0)
  updated_at           DateTime               @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?              @db.DateTime(0)
  disciplinas_mec      disciplinas_mec        @relation(fields: [disciplina_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacao_disciplinamec")
  escola               escola?                @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacao_escolar")
  avaliacao_lancamento avaliacao_lancamento[]
  avaliacao_questao    avaliacao_questao[]

  @@index([created], map: "created")
  @@index([disciplina_mec_id], map: "fk_avaliacao_disciplinamec")
  @@index([escola_id], map: "fk_avaliacao_escolar")
}

model avaliacao_lancamento {
  id                        Int                         @id @default(autoincrement())
  avaliacao_id              Int
  turma_disciplina_id       Int
  anotacao                  String?                     @db.Text
  forma_avaliacao           String?
  nota_maxima               Decimal?                    @db.Decimal(4, 2)
  nota_media                Decimal?                    @db.Decimal(4, 2)
  data_aplicacao            DateTime?                   @db.Date
  created                   DateTime?                   @db.DateTime(0)
  status                    Boolean                     @default(true)
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.DateTime(0)
  avaliacao                 avaliacao                   @relation(fields: [avaliacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacaolancamento_avaliacao")
  turma_disciplina          turma_disciplina            @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacaolancamento_turmadisciplina")
  avaliacao_lancamento_nota avaliacao_lancamento_nota[]

  @@index([avaliacao_id], map: "fk_avaliacaolancamento_avaliacao")
  @@index([turma_disciplina_id], map: "fk_avaliacaolancamento_turmadisciplina")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model avaliacao_lancamento_nota {
  id                      Int                  @id @default(autoincrement())
  avaliacao_lancamento_id Int
  matricula_id            Int
  conceito_id             Int?
  valor                   Decimal?             @db.Decimal(4, 2)
  aluno_faltou            Int?                 @default(0)
  descricao               String?              @db.TinyText
  created                 DateTime?            @db.DateTime(0)
  created_at              DateTime?            @db.DateTime(0)
  updated_at              DateTime             @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?            @db.DateTime(0)
  conceito                conceito?            @relation(fields: [conceito_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacaonota_conceito")
  avaliacao_lancamento    avaliacao_lancamento @relation(fields: [avaliacao_lancamento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacaonota_lancamento")
  matricula               matricula            @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacaonota_matricula")

  @@index([conceito_id], map: "fk_avaliacaonota_conceito")
  @@index([avaliacao_lancamento_id], map: "fk_avaliacaonota_lancamento")
  @@index([matricula_id], map: "fk_avaliacaonota_matricula")
}

model avaliacao_lancamento_tipo {
  id                                   Int                                    @id @default(autoincrement())
  nome                                 String?                                @db.VarChar(40)
  descricao                            String?                                @db.TinyText
  status                               Boolean?                               @default(true)
  created                              DateTime?                              @db.DateTime(0)
  created_at                           DateTime?                              @db.DateTime(0)
  updated_at                           DateTime                               @default(now()) @db.Timestamp(0)
  deleted_at                           DateTime?                              @db.DateTime(0)
  avaliacao_lancamento_tipo_desativado avaliacao_lancamento_tipo_desativado[]
}

model avaliacao_lancamento_tipo_desativado {
  id                           Int                        @id @default(autoincrement())
  avaliacao_lancamento_tipo_id Int?
  escola_id                    Int?
  created_at                   DateTime?                  @db.DateTime(0)
  updated_at                   DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at                   DateTime?                  @db.DateTime(0)
  escola                       escola?                    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacaolancamentotipodesativado_escola")
  avaliacao_lancamento_tipo    avaliacao_lancamento_tipo? @relation(fields: [avaliacao_lancamento_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacaolancamentotipodesativado_tipo")

  @@index([escola_id], map: "fk_avaliacaolancamentotipodesativado_escola")
  @@index([avaliacao_lancamento_tipo_id], map: "fk_avaliacaolancamentotipodesativado_tipo")
}

model avaliacao_questao {
  id           Int       @id @default(autoincrement())
  avaliacao_id Int
  nome         String?   @db.VarChar(50)
  descricao    String?   @db.Text
  created      DateTime? @db.DateTime(0)
  status       Boolean   @default(true)
  created_at   DateTime? @db.DateTime(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.DateTime(0)
  avaliacao    avaliacao @relation(fields: [avaliacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_avaliacaoquestao_avaliacao")

  @@index([avaliacao_id], map: "fk_avaliacaoquestao_avaliacao")
}

model aviso_confirmacoes {
  id                 Int       @id @default(autoincrement()) @db.UnsignedInt
  aviso_documento_id Int       @db.UnsignedInt
  servidor_id        Int       @db.UnsignedInt
  data_confirmacao   DateTime? @db.DateTime(0)
  ip                 String?   @db.VarChar(50)
}

model aviso_destinos {
  id                  Int               @id @default(autoincrement())
  aviso_id            Int
  aplicativo_id       Int
  dashboard_perfil_id Int?              @db.UnsignedMediumInt
  created_at          DateTime          @db.DateTime(0)
  updated_at          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  aplicativos         aplicativos       @relation(fields: [aplicativo_id], references: [id], onUpdate: Restrict, map: "aviso_destinos_fk_aplicativo")
  avisos              avisos            @relation(fields: [aviso_id], references: [id], onUpdate: Restrict, map: "aviso_destinos_fk_aviso")
  dashboard_perfil    dashboard_perfil? @relation(fields: [dashboard_perfil_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "aviso_destinos_fk_dashboard_perfil")

  @@index([aplicativo_id], map: "aplicativo_id")
  @@index([aviso_id], map: "aviso_id")
  @@index([dashboard_perfil_id], map: "dashboard_perfil_id")
}

model aviso_documentos {
  id    Int    @id @default(autoincrement()) @db.UnsignedInt
  texto String @db.Text
}

model avisos {
  id             Int              @id @default(autoincrement())
  titulo         String?          @db.VarChar(100)
  aviso          String?          @db.Text
  imagem         String?          @db.VarChar(100)
  data_inicio    DateTime         @db.Date
  data_fim       DateTime         @db.Date
  status         String?          @db.Char(1)
  created_at     DateTime         @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  aviso_destinos aviso_destinos[]
}

model bairro_municipio {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(50)
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model batepapo {
  id                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  de_id              Int                  @db.UnsignedInt
  de_type            String               @db.VarChar(50)
  de_nome            String               @db.VarChar(255)
  para_id            Int                  @db.UnsignedInt
  para_type          String               @db.VarChar(50)
  para_nome          String               @db.VarChar(255)
  created_at         DateTime             @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at         DateTime             @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at         DateTime?            @db.Timestamp(0)
  batepapo_mensagens batepapo_mensagens[]
}

model batepapo_mensagens {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  batepapo_id Int       @db.UnsignedInt
  de_id       Int       @db.UnsignedInt
  mensagem    String    @db.VarChar(500)
  created_at  DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at  DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at  DateTime? @db.Timestamp(0)
  batepapo    batepapo  @relation(fields: [batepapo_id], references: [id], onUpdate: Restrict, map: "FK_batepapo_mensagens_batepapo_id")

  @@index([batepapo_id], map: "FK_batepapo_mensagens_batepapo_id")
}

model batepapo_professor {
  id         Int       @id @default(autoincrement())
  de_id      Int
  de_type    String    @db.VarChar(50)
  de_nome    String    @db.VarChar(255)
  para_id    Int
  para_type  String    @db.VarChar(50)
  para_nome  String    @db.VarChar(255)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model batepapo_professor_mensagens {
  id                    Int       @id @default(autoincrement())
  batepapo_professor_id Int
  de_id                 Int
  mensagem              String    @db.VarChar(500)
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
}

model beneficio {
  id                       Int                   @id @default(autoincrement())
  servidor_cargo_escola_id Int
  beneficio_tipo_id        Int                   @default(1) @db.TinyInt
  beneficio_situacao_id    Int                   @default(1) @db.TinyInt
  protocolo_id             Int
  status                   Boolean
  data_solicitacao         DateTime?             @db.DateTime(0)
  data_alteracao           DateTime?             @db.DateTime(0)
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  beneficio_situacao       beneficio_situacao    @relation(fields: [beneficio_situacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_beneficio_beneficio_situacao")
  beneficio_tipo           beneficio_tipo        @relation(fields: [beneficio_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_beneficio_beneficio_tipo")
  servidor_cargo_escola    servidor_cargo_escola @relation(fields: [servidor_cargo_escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_beneficio_servidor_cargo_escola")

  @@index([beneficio_situacao_id], map: "FK_beneficio_beneficio_situacao")
  @@index([beneficio_tipo_id], map: "FK_beneficio_beneficio_tipo")
  @@index([servidor_cargo_escola_id], map: "FK_beneficio_servidor_cargo_escola")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model beneficio_situacao {
  id            Int         @id @default(autoincrement()) @db.TinyInt
  nome          String      @db.VarChar(20)
  cor           String      @db.VarChar(6)
  fonte         String      @db.VarChar(6)
  gera_portaria Int
  nivel_atual   Int
  proximo_nivel String?     @db.VarChar(50)
  created_at    DateTime?   @db.DateTime(0)
  updated_at    DateTime    @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?   @db.DateTime(0)
  beneficio     beneficio[]
}

model beneficio_tipo {
  id         Int         @id @default(autoincrement()) @db.TinyInt
  nome       String      @db.VarChar(50)
  status     Int
  created    DateTime    @db.DateTime(0)
  created_at DateTime?   @db.DateTime(0)
  updated_at DateTime    @default(now()) @db.Timestamp(0)
  deleted_at DateTime?   @db.DateTime(0)
  beneficio  beneficio[]
}

model biblioteca_acervo {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  nome                     String                     @db.VarChar(255)
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  biblioteca_acervo_autor  biblioteca_acervo_autor[]
  biblioteca_acervo_edicao biblioteca_acervo_edicao[]
}

model biblioteca_acervo_autor {
  id                Int               @id @default(autoincrement()) @db.UnsignedInt
  acervo_id         Int               @db.UnsignedInt
  autor_id          Int               @db.UnsignedInt
  biblioteca_acervo biblioteca_acervo @relation(fields: [acervo_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_acervo_autor_acervo_id")
  biblioteca_autor  biblioteca_autor  @relation(fields: [autor_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_acervo_autor_autor_id")

  @@index([acervo_id], map: "FK_biblioteca_acervo_autor_acervo_id")
  @@index([autor_id], map: "FK_biblioteca_acervo_autor_autor_id")
}

model biblioteca_acervo_edicao {
  id                     Int                    @id @default(autoincrement()) @db.UnsignedInt
  acervo_id              Int                    @db.UnsignedInt
  tipo_acervo_id         Int                    @db.UnsignedInt
  editora_id             Int                    @db.UnsignedInt
  edicao                 String?                @db.VarChar(50)
  observacao             String?                @db.Text
  informacoes_de_isbn    String?                @db.VarChar(100)
  ano_publicacao         Int                    @db.UnsignedSmallInt
  created_at             DateTime               @db.DateTime(0)
  updated_at             DateTime               @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?              @db.DateTime(0)
  biblioteca_editora     biblioteca_editora     @relation(fields: [editora_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_acervo_editora_id")
  biblioteca_acervo      biblioteca_acervo      @relation(fields: [acervo_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_acervo_id")
  biblioteca_tipo_acervo biblioteca_tipo_acervo @relation(fields: [tipo_acervo_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_acervo_tipo_acervo_id")
  biblioteca_exemplar    biblioteca_exemplar[]

  @@index([editora_id], map: "FK_biblioteca_acervo_editora_id")
  @@index([acervo_id], map: "FK_biblioteca_acervo_id")
  @@index([tipo_acervo_id], map: "FK_biblioteca_acervo_tipo_acervo_id")
}

model biblioteca_autor {
  id                      Int                       @id @default(autoincrement()) @db.UnsignedInt
  autor                   String                    @db.VarChar(255)
  created_at              DateTime                  @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  biblioteca_acervo_autor biblioteca_acervo_autor[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model biblioteca_configuracao {
  id           Int       @id @default(autoincrement())
  configuracao String?   @db.VarChar(255)
  chave        String?   @db.VarChar(50)
  valor        Int?
  created_at   DateTime? @db.DateTime(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.DateTime(0)
}

model biblioteca_descricao_fisica {
  id                                    Int                                     @id @default(autoincrement())
  produto                               String?                                 @db.VarChar(450)
  quantitativo                          Int?
  observacao                            String?                                 @db.VarChar(450)
  escola_id                             Int
  created_at                            DateTime?                               @db.DateTime(0)
  updated_at                            DateTime                                @default(now()) @db.Timestamp(0)
  deleted_at                            DateTime?                               @db.DateTime(0)
  escola                                escola                                  @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_biblioteca_descricao_fisica_escola")
  biblioteca_estrutura_descricao_fisica biblioteca_estrutura_descricao_fisica[]

  @@index([escola_id], map: "fk_biblioteca_descricao_fisica_escolaidx")
}

model biblioteca_editora {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  editora                  String                     @db.VarChar(255)
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  biblioteca_acervo_edicao biblioteca_acervo_edicao[]
}

model biblioteca_emprestimo {
  id                      Int                                 @id @default(autoincrement()) @db.UnsignedInt
  exemplar_id             Int                                 @db.UnsignedInt
  aluno_id                Int
  servidor_id             Int
  data_reserva            DateTime?                           @db.DateTime(0)
  data_limite_reserva     DateTime?                           @db.DateTime(0)
  data_emprestimo         DateTime?                           @db.DateTime(0)
  data_prevista_devolucao DateTime?                           @db.DateTime(0)
  data_devolucao          DateTime?                           @db.DateTime(0)
  foi_devolvido           biblioteca_emprestimo_foi_devolvido
  motivo_nao_devolucao    String?                             @db.VarChar(50)
  created_at              DateTime                            @db.DateTime(0)
  updated_at              DateTime                            @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                           @db.DateTime(0)
  aluno                   aluno                               @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_emprestimo_aluno_id")
  biblioteca_exemplar     biblioteca_exemplar                 @relation(fields: [exemplar_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_emprestimo_exemplar_id")
  servidor                servidor                            @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_emprestimo_servidor_id")

  @@index([aluno_id], map: "FK_biblioteca_emprestimo_aluno_id")
  @@index([exemplar_id], map: "FK_biblioteca_emprestimo_exemplar_id")
  @@index([servidor_id], map: "FK_biblioteca_emprestimo_servidor_id")
}

model biblioteca_estrutura {
  id                                                              Int                                     @id @default(autoincrement())
  status                                                          Int?
  patrono                                                         String?                                 @db.VarChar(450)
  projeto_leitura                                                 String?                                 @db.VarChar(450)
  anotacao                                                        String?                                 @db.VarChar(450)
  escola_id                                                       Int
  responsavel_servidor_id                                         Int?
  auxiliar_servidor_id                                            Int?
  situacao                                                        String?                                 @db.VarChar(450)
  created_at                                                      DateTime?                               @db.DateTime(0)
  updated_at                                                      DateTime                                @default(now()) @db.Timestamp(0)
  deleted_at                                                      DateTime?                               @db.DateTime(0)
  servidor_biblioteca_estrutura_auxiliar_servidor_idToservidor    servidor?                               @relation("biblioteca_estrutura_auxiliar_servidor_idToservidor", fields: [auxiliar_servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auxiliar_servidor_id_fk_servidor")
  escola                                                          escola                                  @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_biblioteca_estrutura_escola")
  servidor_biblioteca_estrutura_responsavel_servidor_idToservidor servidor?                               @relation("biblioteca_estrutura_responsavel_servidor_idToservidor", fields: [responsavel_servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "responsavel_servidor_id_fk_servidor")
  biblioteca_estrutura_descricao_fisica                           biblioteca_estrutura_descricao_fisica[]

  @@index([auxiliar_servidor_id], map: "auxiliar_servidor_id_fk_servidor")
  @@index([escola_id], map: "fk_biblioteca_estrutura_escolaidx")
  @@index([responsavel_servidor_id], map: "responsavel_servidor_id_fk_servidor")
}

model biblioteca_estrutura_descricao_fisica {
  id                             Int                         @id @default(autoincrement())
  biblioteca_estrutura_id        Int
  biblioteca_descricao_fisica_id Int
  created_at                     DateTime?                   @db.DateTime(0)
  updated_at                     DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                   @db.DateTime(0)
  biblioteca_estrutura           biblioteca_estrutura        @relation(fields: [biblioteca_estrutura_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_biblioteca_estrutura_has_biblioteca_descricao_fisica1_bibl1")
  biblioteca_descricao_fisica    biblioteca_descricao_fisica @relation(fields: [biblioteca_descricao_fisica_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_biblioteca_estrutura_has_biblioteca_descricao_fisica1_bibl2")

  @@index([biblioteca_descricao_fisica_id], map: "fk_biblioteca_estrutura_has_biblioteca_descricao_fisica1_bi_idx")
  @@index([biblioteca_estrutura_id], map: "fk_biblioteca_estrutura_has_biblioteca_descricao_fisica1_bi_idx1")
}

model biblioteca_exemplar {
  id                           Int                                     @id @default(autoincrement()) @db.UnsignedInt
  acervo_edicao_id             Int                                     @db.UnsignedInt
  exemplar_situacao_id         Int                                     @db.UnsignedInt
  escola_id                    Int
  identificacao                String                                  @db.VarChar(50)
  localizacao                  String                                  @db.VarChar(50)
  situacao_emprestimo          biblioteca_exemplar_situacao_emprestimo
  cativo                       biblioteca_exemplar_cativo
  created_at                   DateTime                                @db.DateTime(0)
  updated_at                   DateTime                                @default(now()) @db.Timestamp(0)
  deleted_at                   DateTime?                               @db.DateTime(0)
  biblioteca_emprestimo        biblioteca_emprestimo[]
  biblioteca_acervo_edicao     biblioteca_acervo_edicao                @relation(fields: [acervo_edicao_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_exemplar_acervo_edicao_id")
  escola                       escola                                  @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_exemplar_escola_id")
  biblioteca_exemplar_situacao biblioteca_exemplar_situacao            @relation(fields: [exemplar_situacao_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_exemplar_exemplar_situacao_id")

  @@index([acervo_edicao_id], map: "FK_biblioteca_exemplar_acervo_edicao_id")
  @@index([escola_id], map: "FK_biblioteca_exemplar_escola_id")
  @@index([exemplar_situacao_id], map: "FK_biblioteca_exemplar_exemplar_situacao_id")
}

model biblioteca_exemplar_situacao {
  id                  Int                   @id @default(autoincrement()) @db.UnsignedInt
  situacao            String                @db.VarChar(50)
  created_at          DateTime              @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  biblioteca_exemplar biblioteca_exemplar[]
}

model biblioteca_tipo_acervo {
  id                         Int                        @id @default(autoincrement()) @db.UnsignedInt
  tipo_publicacao_id         Int                        @db.UnsignedInt
  tipo_acervo                String                     @db.VarChar(255)
  descricao                  String                     @db.Text
  created_at                 DateTime                   @db.DateTime(0)
  updated_at                 DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime?                  @db.DateTime(0)
  biblioteca_acervo_edicao   biblioteca_acervo_edicao[]
  biblioteca_tipo_publicacao biblioteca_tipo_publicacao @relation(fields: [tipo_publicacao_id], references: [id], onUpdate: Restrict, map: "FK_biblioteca_tipo_acervo_tipo_publicacao_id")

  @@index([tipo_publicacao_id], map: "FK_biblioteca_tipo_acervo_tipo_publicacao_id")
}

model biblioteca_tipo_publicacao {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  tipo_publicacao        String                   @db.VarChar(255)
  descricao              String                   @db.Text
  created_at             DateTime                 @db.DateTime(0)
  updated_at             DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?                @db.DateTime(0)
  biblioteca_tipo_acervo biblioteca_tipo_acervo[]
}

model bloqueio_edicao {
  id                 Int       @id @default(autoincrement())
  nome_tabela        String    @db.VarChar(100)
  registro_id        Int
  ultima_atualizacao DateTime  @db.DateTime(0)
  usuario_id         Int
  created_at         DateTime? @db.DateTime(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.DateTime(0)
}

model cadastro_mac {
  id                                    Int       @id @default(autoincrement())
  endereco_mac                          String    @db.VarChar(80)
  nomeusuario_mvf_g                     String    @db.VarChar(100)
  ultimoacessousuario_mvf_g             String    @db.VarChar(40)
  configuracao_municipio_nome_municipio String    @db.VarChar(100)
  confm_estado                          String    @db.VarChar(30)
  cpf                                   String    @db.VarChar(20)
  idusuario_mvf_g                       Int
  status                                Int
  created                               DateTime? @db.DateTime(0)
  created_at                            DateTime? @db.DateTime(0)
  updated_at                            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                            DateTime? @db.DateTime(0)
}

model cadastro_rapido_aluno {
  id              BigInt    @id @default(autoincrement())
  nome            String    @db.VarChar(150)
  sexo            String    @db.VarChar(3)
  data_nascimento DateTime? @db.Date
  nome_mae        String?   @db.VarChar(100)
  cidade          String?   @db.VarChar(100)
  created_at      DateTime? @db.DateTime(6)
  updated_at      DateTime  @db.DateTime(6)
  deleted_at      DateTime? @db.DateTime(6)
}

model caixa_escolar {
  id                   Int                    @id @default(autoincrement())
  nome                 String                 @db.VarChar(200)
  cnpj                 String                 @db.VarChar(50)
  conta_bancaria_id    Int
  created_at           DateTime?              @db.DateTime(0)
  updated_at           DateTime               @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?              @db.DateTime(0)
  contas_bancaria      contas_bancaria        @relation(fields: [conta_bancaria_id], references: [id], onUpdate: Restrict, map: "caixa_escolar_FK_contas_bancaria")
  caixa_escolar_escola caixa_escolar_escola[]
  caixa_escolar_membro caixa_escolar_membro[]
  despesa              despesa[]
  recurso_entrada      recurso_entrada[]

  @@index([conta_bancaria_id], map: "caixa_escolar_FK_contas_bancaria")
}

model caixa_escolar_composicao {
  id                              Int                               @id @default(autoincrement()) @db.UnsignedInt
  nome                            String                            @default("0") @db.VarChar(200)
  created_at                      DateTime                          @db.DateTime(0)
  updated_at                      DateTime                          @db.DateTime(0)
  deleted_at                      DateTime?                         @db.DateTime(0)
  caixa_escolar_composicao_funcao caixa_escolar_composicao_funcao[]
}

model caixa_escolar_composicao_funcao {
  id                          Int                      @id @default(autoincrement()) @db.UnsignedInt
  caixa_escolar_composicao_id Int                      @db.UnsignedInt
  nome                        String                   @db.VarChar(200)
  created_at                  DateTime                 @db.DateTime(0)
  updated_at                  DateTime                 @db.DateTime(0)
  deleted_at                  DateTime?                @db.DateTime(0)
  caixa_escolar_composicao    caixa_escolar_composicao @relation(fields: [caixa_escolar_composicao_id], references: [id], onUpdate: Restrict, map: "caixa_escolar_composicao_funcao_FK_caixa_escolar_composicao")
  caixa_escolar_membro        caixa_escolar_membro[]

  @@index([caixa_escolar_composicao_id], map: "caixa_escolar_composicao_funcao_FK_caixa_escolar_composicao")
}

model caixa_escolar_escola {
  id               Int           @id @default(autoincrement()) @db.UnsignedInt
  escola_id        Int           @default(0)
  caixa_escolar_id Int           @default(0)
  created_at       DateTime      @db.DateTime(0)
  updated_at       DateTime      @db.DateTime(0)
  deleted_at       DateTime?     @db.DateTime(0)
  caixa_escolar    caixa_escolar @relation(fields: [caixa_escolar_id], references: [id], onUpdate: Restrict, map: "caixa_escolar_escola_FK_caixa_escolar")
  escola           escola        @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "caixa_escolar_escola_FK_escola")

  @@index([caixa_escolar_id], map: "caixa_escolar_escola_FK_caixa_escolar")
  @@index([escola_id], map: "caixa_escolar_escola_FK_escola")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model caixa_escolar_membro {
  id                                 Int                             @id @default(autoincrement()) @db.UnsignedInt
  caixa_escolar_id                   Int
  caixa_escolar_composicao_funcao_id Int                             @db.UnsignedInt
  membro_id                          Int
  tipo_membro                        String
  created_at                         DateTime                        @db.DateTime(0)
  updated_at                         DateTime                        @db.DateTime(0)
  deleted_at                         DateTime?                       @db.DateTime(0)
  caixa_escolar                      caixa_escolar                   @relation(fields: [caixa_escolar_id], references: [id], onUpdate: Restrict, map: "caixa_escolar_membro_fk_caixa_escola")
  caixa_escolar_composicao_funcao    caixa_escolar_composicao_funcao @relation(fields: [caixa_escolar_composicao_funcao_id], references: [id], onUpdate: Restrict, map: "caixa_escolar_membro_fk_caixa_escolar_composicao_funcao")

  @@index([caixa_escolar_id], map: "caixa_escolar_membro_fk_caixa_escola")
  @@index([caixa_escolar_composicao_funcao_id], map: "caixa_escolar_membro_fk_caixa_escolar_composicao_funcao")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model calendario_categoria {
  id                        Int                                      @id @default(autoincrement())
  escola_id                 Int?
  simbolo                   String?                                  @db.VarChar(10)
  descricao                 String?                                  @db.VarChar(50)
  cor                       String?                                  @db.VarChar(7)
  pode_haver_aula           Boolean?                                 @default(false)
  exibir_no_cadastro        calendario_categoria_exibir_no_cadastro? @default(SIM)
  created_at                DateTime?                                @db.DateTime(0)
  updated_at                DateTime                                 @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                                @db.DateTime(0)
  escola                    escola?                                  @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_calendariocategoria_escola")
  calendario_escolar_evento calendario_escolar_evento[]

  @@index([escola_id], map: "fk_calendariocategoria_escola")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model calendario_escolar {
  id                             Int                              @id @default(autoincrement())
  calendario_escolar_tipo_id     Int                              @default(1)
  ano_letivo_id                  Int?
  escola_id                      Int?
  ano                            Int?
  dia_semana_letivo              String?                          @db.VarChar(20)
  updated                        DateTime?                        @db.DateTime(0)
  created                        DateTime?                        @db.DateTime(0)
  created_at                     DateTime?                        @db.DateTime(0)
  updated_at                     DateTime                         @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                        @db.DateTime(0)
  calendario_escolar_tipo        calendario_escolar_tipo          @relation(fields: [calendario_escolar_tipo_id], references: [id], onUpdate: Restrict, map: "FK_calendario_escolar_tipo_id")
  ano_letivo                     ano_letivo?                      @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_calendario_anoletivo")
  escola                         escola?                          @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_calendario_escola")
  calendario_escolar_dias_letivo calendario_escolar_dias_letivo[]
  calendario_escolar_evento      calendario_escolar_evento[]

  @@index([calendario_escolar_tipo_id], map: "FK_calendario_escolar_tipo_id")
  @@index([created], map: "created")
  @@index([ano_letivo_id], map: "fk_calendario_anoletivo")
  @@index([escola_id], map: "fk_calendario_escola")
  @@index([updated], map: "updated")
}

model calendario_escolar_dias_letivo {
  id                    Int                 @id @default(autoincrement())
  calendario_escolar_id Int?
  data                  DateTime?           @db.Date
  created_at            DateTime?           @db.DateTime(0)
  updated_at            DateTime            @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?           @db.DateTime(0)
  calendario_escolar    calendario_escolar? @relation(fields: [calendario_escolar_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_calendario_escola_id_calendario_escolar_id")

  @@index([calendario_escolar_id], map: "FK_calendario_escolar_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model calendario_escolar_evento {
  id                      Int                   @id @default(autoincrement())
  calendario_categoria_id Int?
  calendario_escolar_id   Int?
  escola_id               Int?
  turma_id                Int?
  descricao               String?               @db.VarChar(255)
  data_inicio             DateTime?             @db.DateTime(0)
  data_fim                DateTime?             @db.DateTime(0)
  created                 DateTime?             @db.DateTime(0)
  created_at              DateTime?             @db.DateTime(0)
  updated_at              DateTime              @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?             @db.DateTime(0)
  escola                  escola?               @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "calendario_escola_evento_fk_escola")
  calendario_escolar      calendario_escolar?   @relation(fields: [calendario_escolar_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_evento_calendario")
  calendario_categoria    calendario_categoria? @relation(fields: [calendario_categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_evento_categoria")
  turma                   turma?                @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_evento_turma")

  @@index([escola_id], map: "calendario_escola_evento_fk_escola")
  @@index([created], map: "created")
  @@index([data_fim], map: "data_fim")
  @@index([data_inicio], map: "data_inicio")
  @@index([calendario_categoria_id], map: "fk_calendario_categoria")
  @@index([calendario_escolar_id], map: "fk_evento_calendario")
  @@index([turma_id], map: "fk_evento_turma")
}

model calendario_escolar_tipo {
  id                 Int                            @id @default(autoincrement())
  ciclo_grupo_id     Int?
  nome               String                         @db.VarChar(50)
  status             calendario_escolar_tipo_status
  created_at         DateTime?                      @db.DateTime(0)
  updated_at         DateTime                       @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?                      @db.DateTime(0)
  calendario_escolar calendario_escolar[]
  ciclo_grupo        ciclo_grupo?                   @relation(fields: [ciclo_grupo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_calendario_escola_tipo_ciclo_grupo_id")

  @@index([ciclo_grupo_id], map: "FK_calendario_escola_tipo_ciclo_grupo_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model calendario_feriado_padrao {
  id          Int       @id @default(autoincrement())
  data        DateTime? @db.Date
  descricao   String?   @db.VarChar(50)
  obrigatorio Boolean?  @default(false)
  repetir     Boolean?  @default(false)
  modalidade  String?
  created     DateTime? @db.DateTime(0)
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)

  @@index([created], map: "created")
  @@index([data], map: "data")
}

model calendario_turma {
  id          Int       @id @default(autoincrement())
  turma_id    Int?
  escola_id   Int?
  data_evento DateTime? @db.Date
  evento      String?   @db.Text
  created     DateTime? @db.DateTime(0)
  status      Int?      @db.TinyInt
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
}

model campanha {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(100)
  data_incio DateTime? @db.Date
  data_fim   DateTime? @db.Date
  created    String?   @db.VarChar(100)
  status     String?   @db.VarChar(100)
}

model campanha_confirmacao {
  id               Int       @id @default(autoincrement())
  campanha_id      Int?
  cpf              String?   @db.Text
  data_confirmacao DateTime? @db.Date
  created          DateTime? @db.Date
  status           String?   @db.VarChar(50)

  @@index([campanha_id], map: "campanha_id")
}

model campos_competencias_especificas_disciplinas {
  id                    Int       @id @default(autoincrement())
  codigo_disciplina     String    @db.VarChar(80)
  descricao_competencia String?   @db.VarChar(1000)
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
}

model campos_experiencias_objetivos {
  id                                            Int                                             @id @default(autoincrement())
  codigo_disciplina                             String                                          @db.VarChar(80)
  grupo_etario_id                               Int
  codigo_objetivo                               String                                          @db.VarChar(15)
  descricao_objetivo                            String?                                         @db.VarChar(255)
  created_at                                    DateTime?                                       @db.DateTime(0)
  updated_at                                    DateTime                                        @default(now()) @db.Timestamp(0)
  deleted_at                                    DateTime?                                       @db.DateTime(0)
  aluno_planejamento_AEE_experiencias_objetivos aluno_planejamento_AEE_experiencias_objetivos[]
}

model campos_habilidades_disciplinas_anos {
  id                   Int       @id @default(autoincrement())
  codigo_disciplina    String    @db.VarChar(80)
  ano_id               Int?
  codigo_habilidade    String    @db.VarChar(15)
  descricao_habilidade String?   @db.VarChar(3000)
  created_at           DateTime? @db.DateTime(0)
  updated_at           DateTime  @default(now()) @db.Timestamp(0)
  deleted_at           DateTime? @db.DateTime(0)
}

model campos_unidades_tematicas_disciplinas {
  id                         Int       @id @default(autoincrement())
  codigo_disciplina          String    @db.VarChar(80)
  descricao_unidade_tematica String?   @db.VarChar(255)
  created_at                 DateTime? @db.DateTime(0)
  updated_at                 DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime? @db.DateTime(0)
}

model cardapio {
  id                                            Int       @id @default(autoincrement())
  data_inicio                                   DateTime  @db.Date
  data_fim                                      DateTime  @db.Date
  dia_semana                                    Int
  refeicao_manha_id                             Int
  refeicao_tarde_id                             Int
  refeicao_noite_id                             Int
  qtd_refeicao_manha                            Int?
  qtd_refeicao_tarde                            Int?
  qtd_refeicao_noite                            Int?
  escola_id                                     Int
  ano_letivo_id                                 Int
  created                                       DateTime? @db.DateTime(0)
  status                                        String?   @db.Char(1)
  created_at                                    DateTime? @db.DateTime(0)
  updated_at                                    DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                                    DateTime? @db.DateTime(0)
  escola                                        escola    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cardapio_escola1")
  refeicao_cardapio_refeicao_manha_idTorefeicao refeicao  @relation("cardapio_refeicao_manha_idTorefeicao", fields: [refeicao_manha_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cardapio_refeicao_manha1")
  refeicao_cardapio_refeicao_noite_idTorefeicao refeicao  @relation("cardapio_refeicao_noite_idTorefeicao", fields: [refeicao_noite_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cardapio_refeicao_noite1")
  refeicao_cardapio_refeicao_tarde_idTorefeicao refeicao  @relation("cardapio_refeicao_tarde_idTorefeicao", fields: [refeicao_tarde_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cardapio_refeicao_tarde1")

  @@index([escola_id], map: "fk_cardapio_escola1")
  @@index([refeicao_manha_id], map: "fk_cardapio_refeicao_manha1")
  @@index([refeicao_noite_id], map: "fk_cardapio_refeicao_noite1")
  @@index([refeicao_tarde_id], map: "fk_cardapio_refeicao_tarde1")
}

model cargos_escola {
  id            Int        @id @default(autoincrement())
  escola_id     Int
  cargos_mec_id Int
  created_at    DateTime?  @db.DateTime(0)
  updated_at    DateTime   @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?  @db.DateTime(0)
  cargos_mec    cargos_mec @relation(fields: [cargos_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cargos_escola_cargos_mec1")
  escola        escola     @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_cargos_escola_escola1")

  @@index([cargos_mec_id], map: "fk_cargos_escola_cargos_mec1")
  @@index([escola_id], map: "fk_cargos_escola_escola1")
}

model cargos_mec {
  id                       Int                        @id @default(autoincrement())
  codigo                   String?                    @db.Char(20)
  nome                     String?                    @db.VarChar(60)
  individual_escola        String?                    @db.Char(1)
  created                  DateTime?                  @db.DateTime(0)
  status                   String?                    @db.Char(1)
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  cargos_escola            cargos_escola[]
  parametro_calculo        parametro_calculo[]
  quadro_vagas_escola      quadro_vagas_escola[]
  remanejamento            remanejamento[]
  servidor_cargo_escola    servidor_cargo_escola[]
  servidor_cargo_matricula servidor_cargo_matricula[]
  servidor_funcao_escola   servidor_funcao_escola[]
  verbas_cargo             verbas_cargo[]
}

model carteira_estudantil {
  id         Int       @id @default(autoincrement())
  escola_id  Int?
  aluno_id   Int?
  turma      String?   @db.VarChar(20)
  turno      String?   @db.VarChar(20)
  matricula  String?   @db.VarChar(20)
  foto       String?   @db.VarChar(20)
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model cartorio {
  id         Int       @id
  codigo     String?   @db.Char(5)
  nome       String?   @db.VarChar(70)
  municipio  String?   @db.Char(8)
  uf         String?   @db.Char(3)
  serventia  String?   @db.VarChar(7)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model casos {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  aluno_id              Int
  queixa                String                  @db.Text
  providencia           String?                 @db.Text
  data_caso             DateTime                @db.Date
  created_at            DateTime                @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  aluno                 aluno                   @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "FK_casos_aluno_id")
  casos_acompanhamentos casos_acompanhamentos[]
  casos_servidor        casos_servidor[]

  @@index([aluno_id], map: "FK_casos_aluno_id")
}

model casos_acompanhamentos {
  id                  Int       @id @default(autoincrement()) @db.UnsignedInt
  caso_id             Int       @db.UnsignedInt
  descricao           String    @db.Text
  data_acompanhamento DateTime  @db.Date
  created_at          DateTime  @db.DateTime(0)
  updated_at          DateTime  @default(now()) @db.Timestamp(0)
  deleted_at          DateTime? @db.Timestamp(0)
  casos               casos     @relation(fields: [caso_id], references: [id], onUpdate: Restrict, map: "casos_acompanhamentos_FK_casos")

  @@index([caso_id], map: "casos_acompanhamentos_FK_casos")
}

model casos_servidor {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  servidor_id Int       @default(1)
  casos_id    Int       @default(1) @db.UnsignedInt
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  casos       casos     @relation(fields: [casos_id], references: [id], onUpdate: Restrict, map: "casos_servidor_FK_casos")
  servidor    servidor  @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "casos_servidor_FK_servidor")

  @@index([casos_id], map: "casos_servidor_FK_casos")
  @@index([servidor_id], map: "casos_servidor_FK_servidor")
}

model categoria_ensino {
  id                  Int                   @id @default(autoincrement())
  sigla               String                @db.VarChar(10)
  nome                String                @db.VarChar(50)
  status              Boolean               @default(false)
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime?             @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  configuracao_escola configuracao_escola[]
}

model categoria_escola_privada {
  id                  Int                   @id
  nome                String?               @db.VarChar(80)
  status              String?               @db.Char(1)
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  configuracao_escola configuracao_escola[]
}

model cbc_eixo {
  id                Int              @id @default(autoincrement())
  disciplina_mec_id Int
  ciclo_id          Int
  nome              String           @db.VarChar(100)
  ordem             Int              @db.TinyInt
  ano_id            Int?
  created_at        DateTime?        @db.DateTime(0)
  updated_at        DateTime         @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?        @db.DateTime(0)
  disciplinas_mec   disciplinas_mec  @relation(fields: [disciplina_mec_id], references: [id], onUpdate: Restrict, map: "FK1_cbc_eixo_disciplina_mec_id")
  ciclo             ciclo            @relation(fields: [ciclo_id], references: [id], onUpdate: Restrict, map: "FK2_cbc_eixo_ciclo_id")
  ano               ano?             @relation(fields: [ano_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK3_cbc_eixo_ano_id")
  cbc_habilidade    cbc_habilidade[]
  cbc_tema          cbc_tema[]

  @@index([disciplina_mec_id], map: "FK1_cbc_eixo_disciplina_mec_id")
  @@index([ciclo_id], map: "FK2_cbc_eixo_ciclo_id")
  @@index([ano_id], map: "FK3_cbc_eixo_ano_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cbc_habilidade {
  id                  Int                   @id @default(autoincrement())
  topico_id           Int?
  eixo_id             Int?
  nome                String                @db.VarChar(400)
  ordem               Int
  ativo               String                @default("S")
  removido            String                @default("N")
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  cbc_eixo            cbc_eixo?             @relation(fields: [eixo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_cbc_habilidade_eixo_id")
  cbc_topico          cbc_topico?           @relation(fields: [topico_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_cbc_habilidade_topico_id")
  cbc_habilidade_aula cbc_habilidade_aula[]

  @@index([eixo_id], map: "fk_cbc_habilidade_eixo_id")
  @@index([topico_id], map: "fk_cbc_habilidade_topico_id_idx")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cbc_habilidade_aula {
  id                Int            @id @default(autoincrement())
  servidor_id       Int?
  usuario_id        Int?
  cbc_habilidade_id Int
  aula_id           Int
  created_at        DateTime?      @db.DateTime(0)
  updated_at        DateTime       @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?      @db.DateTime(0)
  aula              aula           @relation(fields: [aula_id], references: [id], onUpdate: Restrict, map: "FK_cbc_habilidade_aula_aula_id")
  cbc_habilidade    cbc_habilidade @relation(fields: [cbc_habilidade_id], references: [id], onUpdate: Restrict, map: "FK_cbc_habilidade_aula_habilidade_id")

  @@index([cbc_habilidade_id], map: "FK_cbc_habilidade_cbc_habilidade_id")
  @@index([aula_id], map: "FK_cbc_habilidade_disciplinas_mec_id")
}

model cbc_tema {
  id         Int          @id @default(autoincrement())
  eixo_id    Int
  nome       String       @db.VarChar(255)
  ordem      Int
  ativo      String       @default("S")
  removido   String       @default("N")
  created_at DateTime?    @db.DateTime(0)
  updated_at DateTime     @default(now()) @db.Timestamp(0)
  deleted_at DateTime?    @db.DateTime(0)
  cbc_eixo   cbc_eixo     @relation(fields: [eixo_id], references: [id], onUpdate: Restrict, map: "fk_cbc_tema_1")
  cbc_topico cbc_topico[]

  @@index([eixo_id], map: "fk_cbc_tema_1_idx")
}

model cbc_topico {
  id             Int              @id @default(autoincrement())
  tema_id        Int?
  nome           String           @db.VarChar(300)
  obrigatorio    String
  numero         Int
  ativo          String?          @default("S")
  removido       String?          @default("N")
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  cbc_habilidade cbc_habilidade[]
  cbc_tema       cbc_tema?        @relation(fields: [tema_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_cbc_topico__tema_id")

  @@index([tema_id], map: "fk_cbc_topico__tema_id_idx")
}

model ced {
  id          Int       @id @default(autoincrement())
  descricao   String?   @db.VarChar(80)
  escola_id   Int?
  servidor_id Int?
  aluno_id    Int?
  created     DateTime? @db.DateTime(0)
  status      String?   @db.Char(1)
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
}

model centro_custo {
  id               Int                @id @default(autoincrement())
  escola_id        Int?
  nome             String?            @db.VarChar(50)
  descricao        String?            @db.TinyText
  created_at       DateTime?          @db.DateTime(0)
  updated_at       DateTime           @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?          @db.DateTime(0)
  escola           escola?            @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_cc_escola")
  finan_lancamento finan_lancamento[]

  @@index([escola_id], map: "fk_cc_escola")
}

model certificado_categoria {
  id                    Int                  @id @default(autoincrement()) @db.UnsignedInt
  descricao             String?              @db.VarChar(255)
  grupo_usuario_tipo_id Int?                 @db.UnsignedSmallInt
  created_at            DateTime?            @db.DateTime(0)
  updated_at            DateTime             @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at            DateTime?            @db.DateTime(0)
  grupo_usuarios_tipo   grupo_usuarios_tipo? @relation(fields: [grupo_usuario_tipo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "certificado_categoria_FK_grupo_usuario_tipo")
  certificado_modelo    certificado_modelo[]

  @@index([grupo_usuario_tipo_id], map: "certificado_categoria_grupo_usuario_tipo")
}

model certificado_categoria_cargos {
  id                       Int       @id @default(autoincrement())
  cargos_mec_id            Int
  certificado_categoria_id Int       @db.UnsignedInt
  created_at               DateTime? @db.DateTime(0)
  updated_at               DateTime  @default(now()) @db.Timestamp(0)
  deleted_at               DateTime? @db.DateTime(0)

  @@index([cargos_mec_id], map: "fk_cargos_mec_id_certificado_categoria_cargos")
  @@index([certificado_categoria_id], map: "fk_certificado_categoria_id_certificado_categoria_cargos")
}

model certificado_categoria_funcoes {
  id                       Int       @id @default(autoincrement())
  funcoes_mec_id           Int
  certificado_categoria_id Int       @db.UnsignedInt
  created_at               DateTime? @db.DateTime(0)
  updated_at               DateTime  @default(now()) @db.Timestamp(0)
  deleted_at               DateTime? @db.DateTime(0)

  @@index([certificado_categoria_id], map: "fk_certificado_categoria_id_certificado_categoria_funcoes")
  @@index([funcoes_mec_id], map: "fk_funcoes_mec_id_certificado_categoria_funcoes")
}

model certificado_emissao {
  id                          Int                           @id @default(autoincrement()) @db.UnsignedInt
  certificado_modelo_id       Int?                          @db.UnsignedInt
  data_emissao                DateTime?                     @db.DateTime(0)
  carga_horaria               Float?
  periodo_inicio              DateTime?                     @db.DateTime(0)
  periodo_fim                 DateTime?                     @db.DateTime(0)
  created_at                  DateTime?                     @db.DateTime(0)
  updated_at                  DateTime                      @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at                  DateTime?                     @db.DateTime(0)
  certificado_modelo          certificado_modelo?           @relation(fields: [certificado_modelo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "emissao_fk_modelo")
  certificado_emissao_pessoas certificado_emissao_pessoas[]

  @@index([certificado_modelo_id], map: "emissao_fk_modelo")
}

model certificado_emissao_pessoas {
  id                     Int                  @id @default(autoincrement()) @db.UnsignedInt
  certificado_emissao_id Int?                 @db.UnsignedInt
  servidor_id            Int?
  aluno_id               Int?
  created_at             DateTime?            @db.DateTime(0)
  updated_at             DateTime             @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at             DateTime?            @db.DateTime(0)
  aluno                  aluno?               @relation(fields: [aluno_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "emissao_pessoas_FK_aluno")
  certificado_emissao    certificado_emissao? @relation(fields: [certificado_emissao_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "emissao_pessoas_fk_emissao")
  servidor               servidor?            @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "emissao_pessoas_fk_servidor")

  @@index([aluno_id], map: "emissao_pessoas_FK_aluno")
  @@index([certificado_emissao_id], map: "emissao_pessoas_fk_emissao")
  @@index([servidor_id], map: "emissao_pessoas_fk_servidor")
}

model certificado_modelo {
  id                       Int                    @id @default(autoincrement()) @db.UnsignedInt
  certificado_categoria_id Int?                   @db.UnsignedInt
  descricao                String?                @db.VarChar(255)
  template                 String?                @db.VarChar(255)
  created_at               DateTime?              @db.DateTime(0)
  updated_at               DateTime               @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at               DateTime?              @db.DateTime(0)
  certificado_emissao      certificado_emissao[]
  certificado_categoria    certificado_categoria? @relation(fields: [certificado_categoria_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "modelo_fk_categoria")

  @@index([certificado_categoria_id], map: "modelo_fk_categoria")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cf_ano {
  id                  Int               @id @default(autoincrement())
  cfe_anoletivo_id    Int
  cfa_periodo_tipo_id Int?
  tipo_falta          String?
  qtd_nota            Int?
  arredondar_media    Boolean?          @default(false)
  created             DateTime          @db.DateTime(0)
  status              Boolean           @default(true)
  created_at          DateTime?         @db.DateTime(0)
  updated_at          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  cfa_periodo_tipo    cfa_periodo_tipo? @relation(fields: [cfa_periodo_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cf_ano_fk_cfa_periodo_tipo")
  cfe_anoletivo       cfe_anoletivo     @relation(fields: [cfe_anoletivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cf_ano_fk_cfe_anoletivo")
  cfe_ano             cfe_ano[]

  @@index([cfa_periodo_tipo_id], map: "cfa_periodo_tipo_id")
  @@index([cfe_anoletivo_id], map: "cfe_anoletivo_id")
}

model cf_nota {
  id               Int           @id @default(autoincrement())
  cfa_nota_tipo_id Int
  valor_min        String?       @db.VarChar(50)
  valor_max        String?       @db.VarChar(50)
  media            String?       @db.VarChar(50)
  created          DateTime      @db.DateTime(0)
  status           Boolean       @default(true)
  created_at       DateTime?     @db.DateTime(0)
  updated_at       DateTime      @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?     @db.DateTime(0)
  cfa_nota_tipo    cfa_nota_tipo @relation(fields: [cfa_nota_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cf_nota_fk_cfa_nota_tipo")
  cfe_nota         cfe_nota[]

  @@index([cfa_nota_tipo_id], map: "cfa_nota_tipo_id")
}

model cf_periodo {
  id              Int           @id @default(autoincrement())
  cfa_periodo_id  Int
  data_inicio     DateTime?     @db.Date
  data_fim        DateTime?     @db.Date
  data_fechamento DateTime?     @db.Date
  created         DateTime?     @db.Date
  status          Boolean       @default(true)
  created_at      DateTime?     @db.DateTime(0)
  updated_at      DateTime      @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?     @db.DateTime(0)
  cfa_periodo     cfa_periodo   @relation(fields: [cfa_periodo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cf_periodo_fk_cfa_periodo")
  cfe_periodo     cfe_periodo[]

  @@index([cfa_periodo_id], map: "cfa_periodo_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cf_termo {
  id             Int              @id @default(autoincrement())
  nome           String           @db.VarChar(50)
  tipo           String
  condicao_min   Float
  condicao_max   Float
  created        DateTime         @db.DateTime(0)
  status         Boolean          @default(true)
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  cf_termoavanco cf_termoavanco[]
}

model cf_termoavanco {
  id                 Int             @id @default(autoincrement())
  cf_termo_id        Int
  cfe_termoavanco_id Int
  created            DateTime        @db.DateTime(0)
  status             Boolean         @default(true)
  created_at         DateTime?       @db.DateTime(0)
  updated_at         DateTime        @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?       @db.DateTime(0)
  cf_termo           cf_termo        @relation(fields: [cf_termo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cf_termoavanco_fk_cf_termo")
  cfe_termoavanco    cfe_termoavanco @relation(fields: [cfe_termoavanco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cf_termoavanco_fk_cfe_termoavanco")

  @@index([cf_termo_id], map: "cf_termo_id")
  @@index([cfe_termoavanco_id], map: "cfe_termoavanco_id")
}

model cfa_nota_conceito {
  id               Int           @id @default(autoincrement())
  cfa_nota_tipo_id Int
  nome             String        @db.VarChar(50)
  eqv_minimo       Float
  eqv_maximo       Float
  created          DateTime      @db.DateTime(0)
  status           Boolean       @default(true)
  created_at       DateTime?     @db.DateTime(0)
  updated_at       DateTime      @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?     @db.DateTime(0)
  cfa_nota_tipo    cfa_nota_tipo @relation(fields: [cfa_nota_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfa_nota_conceito_fk_cfa_nota_tipo")

  @@index([cfa_nota_tipo_id], map: "cfa_nota_tipo_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cfa_nota_tipo {
  id                Int                 @id @default(autoincrement())
  nome              String              @db.VarChar(50)
  descricao         String              @db.VarChar(300)
  tipo              String
  created           DateTime            @db.DateTime(0)
  status            Boolean             @default(true)
  created_at        DateTime?           @db.DateTime(0)
  updated_at        DateTime            @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?           @db.DateTime(0)
  cf_nota           cf_nota[]
  cfa_nota_conceito cfa_nota_conceito[]
}

model cfa_periodo {
  id                  Int              @id @default(autoincrement())
  cfa_periodo_tipo_id Int
  nome                String           @db.VarChar(100)
  created             DateTime         @db.DateTime(0)
  status              Boolean          @default(true)
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  cf_periodo          cf_periodo[]
  cfa_periodo_tipo    cfa_periodo_tipo @relation(fields: [cfa_periodo_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfa_periodo_fk_cfa_periodo_tipo")

  @@index([cfa_periodo_tipo_id], map: "cfa_periodo_tipo_id")
}

model cfa_periodo_tipo {
  id          Int           @id @default(autoincrement())
  nome        String        @db.VarChar(100)
  created     DateTime      @db.DateTime(0)
  status      Boolean       @default(true)
  created_at  DateTime?     @db.DateTime(0)
  updated_at  DateTime      @default(now()) @db.Timestamp(0)
  deleted_at  DateTime?     @db.DateTime(0)
  cf_ano      cf_ano[]
  cfa_periodo cfa_periodo[]
}

model cfe_ano {
  id                 Int              @id @default(autoincrement())
  cf_ano_id          Int?
  ano_id             Int?
  cfe_termoavanco_id Int?
  created            DateTime         @db.DateTime(0)
  status             Boolean          @default(true)
  created_at         DateTime?        @db.DateTime(0)
  updated_at         DateTime         @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?        @db.DateTime(0)
  ano                ano?             @relation(fields: [ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfe_ano_fk_ano")
  cf_ano             cf_ano?          @relation(fields: [cf_ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfe_ano_fk_cf_ano")
  cfe_termoavanco    cfe_termoavanco? @relation(fields: [cfe_termoavanco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfe_ano_fk_cfe_termoavanco")
  cfe_nota           cfe_nota[]
  cfe_periodo        cfe_periodo[]

  @@index([cf_ano_id], map: "cf_ano_id")
  @@index([ano_id], map: "cfe_ano_fk_ano")
  @@index([cfe_termoavanco_id], map: "cfe_termoavanco_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cfe_anoletivo {
  id                     Int        @id @default(autoincrement())
  escola_id              Int?
  ano_letivo_id          Int
  prazo_justificar_falta Int?
  intervalo_min_aula     Int?
  intervalo_max_aula     Int?
  created                DateTime   @db.DateTime(0)
  status                 Boolean    @default(true)
  created_at             DateTime?  @db.DateTime(0)
  updated_at             DateTime   @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?  @db.DateTime(0)
  cf_ano                 cf_ano[]
  ano_letivo             ano_letivo @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfe_anoletivo_fk_ano_letivo")
  escola                 escola?    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfe_anoletivo_fk_escola")

  @@index([ano_letivo_id], map: "ano_letivo_id")
  @@index([escola_id], map: "escola_id")
}

model cfe_nota {
  id         Int       @id @default(autoincrement())
  cfe_ano_id Int
  cf_nota_id Int
  created    DateTime  @db.DateTime(0)
  status     Boolean   @default(true)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  cf_nota    cf_nota   @relation(fields: [cf_nota_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfe_nota_fk_cf_nota")
  cfe_ano    cfe_ano   @relation(fields: [cfe_ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfe_nota_fk_cfe_ano")

  @@index([cf_nota_id], map: "cf_nota_id")
  @@index([cfe_ano_id], map: "cfe_ano_id")
}

model cfe_periodo {
  id                 Int              @id @default(autoincrement())
  cfe_ano_id         Int
  cf_periodo_id      Int
  cfe_termoavanco_id Int?
  created            DateTime         @db.DateTime(0)
  status             Boolean          @default(true)
  created_at         DateTime?        @db.DateTime(0)
  updated_at         DateTime         @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?        @db.DateTime(0)
  cf_periodo         cf_periodo       @relation(fields: [cf_periodo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfe_periodo_fk_cf_periodo")
  cfe_ano            cfe_ano          @relation(fields: [cfe_ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfe_periodo_fk_cfe_ano")
  cfe_termoavanco    cfe_termoavanco? @relation(fields: [cfe_termoavanco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cfe_periodo_fk_cfe_termoavanco")

  @@index([cf_periodo_id], map: "cf_periodo_id")
  @@index([cfe_ano_id], map: "cfe_ano_id")
  @@index([cfe_termoavanco_id], map: "cfe_termoavanco_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cfe_termoavanco {
  id             Int              @id @default(autoincrement())
  nome           String           @db.VarChar(100)
  tipo           String
  created        DateTime         @db.DateTime(0)
  status         Boolean          @default(true)
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  cf_termoavanco cf_termoavanco[]
  cfe_ano        cfe_ano[]
  cfe_periodo    cfe_periodo[]
}

model chaves {
  id         Int       @id @db.UnsignedInt
  numero     Int       @db.UnsignedInt
  chave      String    @db.VarChar(50)
  qtd        Int       @db.UnsignedInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model ciclo {
  id                                      Int                                       @id @default(autoincrement())
  ciclo_grupo_id                          Int?
  nome                                    String                                    @db.VarChar(50)
  descricao                               String                                    @db.VarChar(80)
  codigo                                  String                                    @db.VarChar(20)
  tipo_aula                               ciclo_tipo_aula?
  tipo_avaliacao_id                       Int?                                      @db.UnsignedInt
  tipo_professor_id                       Int?
  idade_inicial                           Int?                                      @db.TinyInt
  ordem_codigo                            String?                                   @db.VarChar(1)
  idade_final                             Int?                                      @db.TinyInt
  created                                 DateTime?                                 @db.DateTime(0)
  status                                  Boolean                                   @default(true)
  created_at                              DateTime?                                 @db.DateTime(0)
  updated_at                              DateTime                                  @default(now()) @db.Timestamp(0)
  deleted_at                              DateTime?                                 @db.DateTime(0)
  ano                                     ano[]
  cbc_eixo                                cbc_eixo[]
  ciclo_grupo                             ciclo_grupo?                              @relation(fields: [ciclo_grupo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_ciclo_escola_grupo_id")
  tipo_avaliacao                          tipo_avaliacao?                           @relation(fields: [tipo_avaliacao_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_ciclo_tipo_avaliacao_id")
  tipo_professor                          tipo_professor?                           @relation(fields: [tipo_professor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_ciclo_tipo_professor_id")
  ciclo_escola                            ciclo_escola[]
  configuracao_academica_formulario       configuracao_academica_formulario[]
  escola_quadro_vagas_ciclo_disciplina    escola_quadro_vagas_ciclo_disciplina[]
  historico_ano                           historico_ano[]
  plano_curricular_ciclo                  plano_curricular_ciclo[]
  professor_quadro_vagas_ciclo_disciplina professor_quadro_vagas_ciclo_disciplina[]

  @@index([ciclo_grupo_id], map: "FK_ciclo_escola_grupo_id")
  @@index([tipo_avaliacao_id], map: "FK_ciclo_tipo_avaliacao_id")
  @@index([tipo_professor_id], map: "FK_ciclo_tipo_professor_id")
}

model ciclo_escola {
  id         Int       @id @default(autoincrement())
  escola_id  Int
  ciclo_id   Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  ciclo      ciclo     @relation(fields: [ciclo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ciclo_escola_ano1")
  escola     escola    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ciclo_escola_escola1")

  @@index([ciclo_id], map: "fk_ciclo_escola_ano1")
  @@index([escola_id], map: "fk_ciclo_escola_escola1")
}

model ciclo_grupo {
  id                      Int                       @id @default(autoincrement())
  nome                    String                    @db.VarChar(50)
  status                  ciclo_grupo_status
  created_at              DateTime?                 @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  calendario_escolar_tipo calendario_escolar_tipo[]
  ciclo                   ciclo[]
}

model cidade {
  id                         Int                          @id @default(autoincrement())
  nome                       String?                      @db.VarChar(50)
  cep_inicial                String?                      @db.Char(10)
  cep_final                  String?                      @db.Char(10)
  ddd_1                      String?                      @db.Char(2)
  ddd_2                      String?                      @db.Char(2)
  codigo                     String?                      @db.Char(9)
  estado_id                  String?                      @db.Char(3)
  status                     String?                      @db.Char(1)
  created_at                 DateTime?                    @db.DateTime(0)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime?                    @db.DateTime(0)
  distrito                   distrito[]
  editora                    editora[]
  fornecedor                 fornecedor[]
  fornecedor_financeiro      fornecedor_financeiro[]
  historico_ano              historico_ano[]
  orgao_regional_ensino      orgao_regional_ensino[]
  pc_ata_reuniao             pc_ata_reuniao[]
  pessoa                     pessoa[]
  pessoas                    pessoas[]
  regiao_municipio           regiao_municipio[]
  registro_escolar_municipio registro_escolar_municipio[]
  secretaria_educacao        secretaria_educacao[]
}

model classe_professor {
  id         Int       @id @default(autoincrement())
  classe     String    @db.VarChar(30)
  ordem      Boolean
  created_at DateTime  @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model classe_professor_servidor_cargo_escola {
  id                       Int       @id @default(autoincrement())
  servidor_cargo_escola_id Int
  classe_professor_id      Int
  data_mudanca             DateTime  @db.Date
  created_at               DateTime  @db.DateTime(0)
  updated_at               DateTime  @default(now()) @db.Timestamp(0)
  deleted_at               DateTime? @db.DateTime(0)

  @@index([classe_professor_id], map: "classe_professor_servidor_cargo_escola_FK_classe_professor")
  @@index([servidor_cargo_escola_id], map: "classe_professor_servidor_cargo_escola_FK_servidor_cargo_escola")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model classificacao {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  classificacao_pai_id     Int?                       @db.UnsignedInt
  nome                     String?                    @db.VarChar(50)
  prefixo                  String?                    @db.VarChar(30)
  tabela                   String?                    @db.VarChar(30)
  status                   Boolean?                   @default(true)
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  arquivo_campo_referencia arquivo_campo_referencia[]
  classificacao            classificacao?             @relation("classificacaoToclassificacao", fields: [classificacao_pai_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_classificacao_pai")
  other_classificacao      classificacao[]            @relation("classificacaoToclassificacao")
  classificacao_arquivo    classificacao_arquivo[]

  @@index([classificacao_pai_id], map: "fk_classificacao_pai")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model classificacao_arquivo {
  id                  Int                 @id @default(autoincrement()) @db.UnsignedInt
  classificacao_id    Int?                @db.UnsignedInt
  entidade_id         Int?                @db.UnsignedInt
  arquivo_tipo_id     Int?                @db.UnsignedInt
  chave_classificacao String?             @db.VarChar(30)
  chave_entidade      String?             @db.VarChar(30)
  nome                String?             @db.VarChar(50)
  created             DateTime?           @db.DateTime(0)
  created_at          DateTime?           @db.DateTime(0)
  updated_at          DateTime            @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?           @db.DateTime(0)
  arquivo_documento   arquivo_documento[]
  arquivo_valor       arquivo_valor[]
  classificacao       classificacao?      @relation(fields: [classificacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_classificacao_arquivo_classificacao")
  entidade            entidade?           @relation(fields: [entidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_classificacao_arquivo_entidade")
  arquivo_tipo        arquivo_tipo?       @relation(fields: [arquivo_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_classificacao_arquivo_tipo")

  @@index([chave_classificacao], map: "chave_classificacao")
  @@index([chave_entidade], map: "chave_entidade")
  @@index([classificacao_id], map: "fk_classificacao_arquivo_classificacao")
  @@index([entidade_id], map: "fk_classificacao_arquivo_entidade")
  @@index([arquivo_tipo_id], map: "fk_classificacao_arquivo_tipo")
}

model comentarios_aula_gestor_professor {
  id          Int       @id @default(autoincrement())
  servidor_id Int?
  aula_id     Int?
  mensagem    String?   @db.Text
  created_at  DateTime  @default(now()) @db.DateTime(0)
  update_at   DateTime? @default(now()) @db.DateTime(0)
  deleted_at  DateTime? @db.DateTime(0)
  aula        aula?     @relation(fields: [aula_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_comentario_aula_gestor_professor")
  servidor    servidor? @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_comentarios_servidor_gestor_professor")

  @@index([aula_id], map: "fk_comentario_aula_gestor_professor")
  @@index([servidor_id], map: "fk_comentarios_servidor_gestor_professor")
}

model comentarios_planejamento {
  id                 Int                 @id @default(autoincrement())
  id_servidor        Int?
  id_planejamento    Int?
  conteudo           String?             @db.Text
  created_at         DateTime            @default(now()) @db.DateTime(0)
  updated_at         DateTime?           @db.DateTime(0)
  deleted_at         DateTime?           @db.DateTime(0)
  servidor           servidor?           @relation(fields: [id_servidor], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_comentarios_planejamento_servidor_id")
  turma_planejamento turma_planejamento? @relation(fields: [id_planejamento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_comentarios_planejamento_turma_planejamento")

  @@index([id_servidor], map: "fk_comentarios_planejamento_servidor_id")
  @@index([id_planejamento], map: "fk_comentarios_planejamento_turma_planejamento")
}

model comentarios_planejamento_aee {
  id                              Int                             @id @default(autoincrement())
  planejamento_id                 Int
  servidor_id                     Int
  conteudo                        String?                         @db.Text
  created_at                      DateTime?                       @db.DateTime(0)
  updated_at                      DateTime?                       @default(now()) @db.Timestamp(0)
  deleted_at                      DateTime?                       @db.DateTime(0)
  aluno_planejamento_infantil_AEE aluno_planejamento_infantil_AEE @relation(fields: [planejamento_id], references: [id], onUpdate: Restrict, map: "FK_comentarios_planejamento_aee_planejamento_id")
  servidor                        servidor                        @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "FK_comentarios_planejamento_aee_servidor_id")

  @@index([planejamento_id], map: "FK_comentarios_planejamento_aee_planejamento_id")
  @@index([servidor_id], map: "FK_comentarios_planejamento_aee_servidor_id")
}

model competencias_gerais {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(100)
  status     Int?      @default(1) @db.TinyInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model comunicado_destinos {
  id                Int         @id @default(autoincrement()) @db.UnsignedInt
  comunicado_id     Int         @db.UnsignedInt
  aluno_id          Int?
  servidor_id       Int?
  data_visualizacao DateTime?   @db.Date
  created_at        DateTime    @db.DateTime(0)
  updated_at        DateTime    @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?   @db.DateTime(0)
  aluno             aluno?      @relation(fields: [aluno_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "comunicado_destinos_FK_aluno")
  comunicados       comunicados @relation(fields: [comunicado_id], references: [id], onUpdate: Restrict, map: "comunicado_destinos_FK_comunicados")
  servidor          servidor?   @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "comunicado_destinos_FK_servidor")

  @@index([servidor_id], map: "comunicado_destino_FK_serv_cargo_escola")
  @@index([comunicado_id], map: "comunicado_destinos_FK_comunicados")
  @@index([aluno_id], map: "comunicado_destinos_FK_matricula")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model comunicado_filtros {
  id               Int           @id @default(autoincrement()) @db.UnsignedInt
  filtro           String        @db.VarChar(50)
  view_filtro      String?       @db.VarChar(50)
  tipo_view_filtro String?
  created_at       DateTime      @db.DateTime(0)
  updated_at       DateTime      @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?     @db.DateTime(0)
  comunicados      comunicados[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model comunicados {
  id                   Int                   @id @default(autoincrement()) @db.UnsignedInt
  escola_remetente_id  Int?
  comunicado_filtro_id Int                   @db.UnsignedInt
  comunicado           String                @db.Text
  data_final           DateTime?             @db.Date
  filtros              String                @db.Text
  remetente_id         Int
  tipo_remetente       String
  created_at           DateTime              @db.DateTime(0)
  updated_at           DateTime              @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?             @db.DateTime(0)
  comunicado_destinos  comunicado_destinos[]
  comunicado_filtros   comunicado_filtros    @relation(fields: [comunicado_filtro_id], references: [id], onUpdate: Restrict, map: "comunicados_FK_comunicado_filtros")
  escola               escola?               @relation(fields: [escola_remetente_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "comunicados_FK_escola")

  @@index([comunicado_filtro_id], map: "comunicados_FK_comunicado_filtros")
  @@index([escola_remetente_id], map: "comunicados_FK_escola")
}

model comunidade_sugestao {
  id                      Int       @id @default(autoincrement()) @db.UnsignedInt
  comunidade__usuario_id  Int       @db.UnsignedInt
  sugestao                String    @db.Text
  resposta                String?   @db.Text
  respondedor__usuario_id Int?      @db.UnsignedInt
  created_at              DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at              DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at              DateTime? @db.Timestamp(0)
}

model comunidade_usuario {
  id                Int       @id @default(autoincrement()) @db.UnsignedInt
  cpf               String    @db.VarChar(14)
  nascimento        DateTime  @db.Date
  nome              String?   @db.VarChar(150)
  email             String?   @db.VarChar(150)
  telefone          String?   @db.VarChar(15)
  possui_filho_rede Boolean?
  remember_token    String?   @db.VarChar(100)
  created_at        DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at        DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at        DateTime? @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model conceito {
  id                        Int                         @id @default(autoincrement())
  escola_id                 Int?
  conceito                  String                      @db.VarChar(20)
  descricao                 String?                     @db.VarChar(50)
  nota_inicial              Decimal?                    @db.Decimal(4, 2)
  nota_final                Decimal?                    @db.Decimal(4, 2)
  created                   DateTime?                   @db.DateTime(0)
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.DateTime(0)
  avaliacao_lancamento_nota avaliacao_lancamento_nota[]
  escola                    escola?                     @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_conceito_escola")
  conceito_grupo_lista      conceito_grupo_lista[]
  edi_quadro_curricular     edi_quadro_curricular[]

  @@index([escola_id], map: "fk_conceito_escola")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model conceito_grupo {
  id                   Int                    @id @default(autoincrement())
  escola_id            Int?
  nome                 String                 @db.VarChar(30)
  created              DateTime?              @db.DateTime(0)
  created_at           DateTime?              @db.DateTime(0)
  updated_at           DateTime               @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?              @db.DateTime(0)
  escola               escola?                @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_conceitogrupo_escola")
  conceito_grupo_lista conceito_grupo_lista[]

  @@index([created], map: "created")
  @@index([escola_id], map: "fk_conceitogrupo_escola")
}

model conceito_grupo_lista {
  id                Int            @id @default(autoincrement())
  conceito_grupo_id Int
  conceito_id       Int
  created_at        DateTime?      @db.DateTime(0)
  updated_at        DateTime       @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?      @db.DateTime(0)
  conceito          conceito       @relation(fields: [conceito_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_conceitogrupolista_conceito")
  conceito_grupo    conceito_grupo @relation(fields: [conceito_grupo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_conceitogrupolista_conceitogrupo")

  @@index([conceito_id], map: "fk_conceitogrupolista_conceito")
  @@index([conceito_grupo_id], map: "fk_conceitogrupolista_conceitogrupo")
}

model configuracao_academica_formulario {
  id                             Int               @id @default(autoincrement()) @db.UnsignedInt
  ciclo_id                       Int               @default(0)
  formulario_id                  Int               @default(0) @db.UnsignedMediumInt
  ano                            String?           @db.VarChar(50)
  nivel_ensino_mec_id            Int?
  tipo_atividade_complementar_id Int?
  created_at                     DateTime?         @db.DateTime(0)
  updated_at                     DateTime          @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?         @db.DateTime(0)
  ciclo                          ciclo             @relation(fields: [ciclo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "configuracao_academica_formulario_FK1_ciclo")
  formulario                     formulario        @relation(fields: [formulario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "configuracao_academica_formulario_FK1_formulario")
  nivel_ensino_mec               nivel_ensino_mec? @relation(fields: [nivel_ensino_mec_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "configuracao_academica_formulario_FK1_nivel_ensino_mec")

  @@index([ciclo_id], map: "configuracao_academica_formulario_FK1_ciclo")
  @@index([formulario_id], map: "configuracao_academica_formulario_FK1_formulario")
  @@index([nivel_ensino_mec_id], map: "configuracao_academica_formulario_FK1_nivel_ensino_mec")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model configuracao_cliente {
  id                            Int                          @id @default(autoincrement())
  configuracao_cliente_grupo_id Int?                         @db.UnsignedInt
  nome                          String?                      @db.VarChar(100)
  chave                         String?                      @db.VarChar(100)
  descricao                     String?                      @db.VarChar(400)
  valor_padrao                  String?                      @db.VarChar(400)
  created_at                    DateTime?                    @db.DateTime(0)
  updated_at                    DateTime                     @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime?                    @db.DateTime(0)
  configuracao_cliente_grupo    configuracao_cliente_grupo?  @relation(fields: [configuracao_cliente_grupo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "configuracao_cliente_FK_configuracao_cliente_grupo")
  configuracao_cliente_valor    configuracao_cliente_valor[]

  @@index([configuracao_cliente_grupo_id], map: "configuracao_cliente_FK_configuracao_cliente_grupo")
}

model configuracao_cliente_bimestre {
  id                 Int       @id @default(autoincrement()) @db.UnsignedInt
  bimestre           String?
  data_inicio        DateTime? @db.Date
  data_fim           DateTime? @db.Date
  data_fechamento    DateTime? @db.Date
  ano_letivo         String?   @db.VarChar(50)
  fechado_automatico Int?
  created_at         DateTime? @db.DateTime(0)
  updated_at         DateTime? @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.DateTime(0)

  @@index([data_inicio], map: "data_inicio")
  @@index([id], map: "id")
}

model configuracao_cliente_grupo {
  id                   Int                    @id @default(autoincrement()) @db.UnsignedInt
  grupo                String?                @db.VarChar(50)
  created_at           DateTime               @db.DateTime(0)
  updated_at           DateTime               @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?              @db.DateTime(0)
  configuracao_cliente configuracao_cliente[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model configuracao_cliente_valor {
  id                      Int                  @id @default(autoincrement())
  configuracao_cliente_id Int
  descricao               String               @db.VarChar(200)
  numero_configuracao     Int                  @db.TinyInt
  created_at              DateTime?            @db.DateTime(0)
  updated_at              DateTime             @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?            @db.DateTime(0)
  configuracao_cliente    configuracao_cliente @relation(fields: [configuracao_cliente_id], references: [id], onUpdate: Restrict, map: "FK_configuracao_cliente_valor_configuracao_cliente_id")

  @@index([configuracao_cliente_id], map: "FK_configuracao_cliente_valor_configuracao_cliente_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model configuracao_escola {
  id                                                                                                                         Int                                @id @default(autoincrement())
  escola_id                                                                                                                  Int
  escola_anexo_id                                                                                                            Int?
  dependencia_administrativa_id                                                                                              Int?
  situacao_funcionamento_id                                                                                                  Int?
  situacao_funcionamento_historico_id                                                                                        Int?
  categoria_escola_privada_id                                                                                                Int?
  convenio_poder_publico_id                                                                                                  Int?
  pred_pesq                                                                                                                  String?                            @db.VarChar(50)
  status_codificacao                                                                                                         String?                            @db.VarChar(50)
  cod_seec_a                                                                                                                 String?                            @db.VarChar(50)
  cod_seec_b                                                                                                                 String?                            @db.VarChar(50)
  natureza_ocupacao                                                                                                          String?                            @db.VarChar(50)
  natureza_ocupacao_predrio                                                                                                  String?                            @db.VarChar(80)
  entidade_proprietaria_movel                                                                                                String?                            @db.VarChar(50)
  total_salas_aula                                                                                                           Int?
  total_salas_levantada                                                                                                      Int?
  unidade_executora                                                                                                          String?                            @db.VarChar(50)
  situacao_censo                                                                                                             String?                            @db.Char(20)
  identificacao_outras_atividades_predio                                                                                     String?                            @db.VarChar(100)
  docencia                                                                                                                   String?                            @db.Char(1)
  promocao_acesso_informacao                                                                                                 String?                            @db.Char(1)
  apoio_educacional                                                                                                          String?                            @db.Char(1)
  alimentacao                                                                                                                String?                            @db.Char(1)
  saude_e_higiene                                                                                                            String?                            @db.Char(1)
  promocao_convivencia                                                                                                       String?                            @db.Char(1)
  suporte_pedagogico_docencia                                                                                                String?                            @db.Char(1)
  administracao                                                                                                              String?                            @db.Char(1)
  manutencao_conservacao_seguranca                                                                                           String?                            @db.Char(1)
  created                                                                                                                    DateTime?                          @db.DateTime(0)
  status                                                                                                                     String?                            @db.Char(1)
  assentamento                                                                                                               String?                            @db.Char(1)
  mantenedora_escola_privada_empresa                                                                                         String?                            @default("0") @db.Char(1)
  mantenedora_escola_privada_sindicato                                                                                       String?                            @default("0") @db.Char(1)
  mantenedora_escola_privada_ong                                                                                             String?                            @default("0") @db.Char(1)
  mantenedora_escola_privada_sistema_ssso                                                                                    String?                            @default("0") @db.Char(1)
  mantenedora_escola_privada_cnpj_mantenedora_principal                                                                      String?                            @db.VarChar(20)
  mantenedora_escola_privada_cnpj_escola_privada                                                                             String?                            @db.VarChar(20)
  mantenedora_escola_privada_regulamentacao                                                                                  String?
  mantenedora_escola_privada_instituicao_sem_fim_lucrativo                                                                   String?                            @default("0") @db.Char(1)
  local_funcionamento_sala_empresa                                                                                           String?                            @db.Char(1)
  local_funcionamento_predio_escolar                                                                                         String?                            @db.Char(1)
  local_funcionamento_templo_igreja                                                                                          String?                            @db.Char(1)
  local_funcionamento_casa_professor                                                                                         String?                            @db.Char(1)
  local_funcionamento_sala_outra_escola                                                                                      String?                            @db.Char(1)
  local_funcionamento_galpao                                                                                                 String?                            @db.Char(1)
  local_funcionamento_unidade                                                                                                String?                            @db.Char(1)
  local_funcionamento_unidade_socioeducativa                                                                                 String?                            @db.Char(1)
  local_funcionamento_outro                                                                                                  String?                            @db.Char(1)
  local_funcionamento_outro_descricao                                                                                        String?                            @db.VarChar(200)
  forma_ocupacao_predio                                                                                                      String?
  compartilhado_outra_escola                                                                                                 String?                            @db.Char(1)
  inep_escola_compartilhada_1                                                                                                String?                            @db.VarChar(30)
  inep_escola_compartilhada_2                                                                                                String?                            @db.VarChar(30)
  inep_escola_compartilhada_3                                                                                                String?                            @db.VarChar(30)
  inep_escola_compartilhada_4                                                                                                String?                            @db.VarChar(30)
  inep_escola_compartilhada_5                                                                                                String?                            @db.VarChar(30)
  inep_escola_compartilhada_6                                                                                                String?                            @db.VarChar(30)
  agua_consumida                                                                                                             String?
  abastecimento_agua_rede_publica                                                                                            String?                            @db.Char(1)
  abastecimento_agua_poco_artesiano                                                                                          String?                            @db.Char(1)
  abastecimento_agua_cacimba                                                                                                 String?                            @db.Char(1)
  abastecimento_agua_fonte                                                                                                   String?                            @db.Char(1)
  abastecimento_agua_inexistente                                                                                             String?                            @db.Char(1)
  abastecimento_eletrico_rede_publica                                                                                        String?                            @db.Char(1)
  abastecimento_eletrico_gerador                                                                                             String?                            @db.Char(1)
  abastecimento_eletrico_outro                                                                                               String?                            @db.Char(1)
  abastecimento_eletrico_inexistente                                                                                         String?                            @db.Char(1)
  esgoto_sanitario_rede_publica                                                                                              String?                            @db.Char(1)
  esgoto_sanitario_fossa                                                                                                     String?                            @db.Char(1)
  esgoto_sanitario_inexistente                                                                                               String?                            @db.Char(1)
  destinacao_lixo_coleta                                                                                                     String?                            @db.Char(1)
  destinacao_lixo_queima                                                                                                     String?                            @db.Char(1)
  destinacao_lixo_outra_area                                                                                                 String?                            @db.Char(1)
  destinacao_lixo_recicla                                                                                                    String?                            @db.Char(1)
  destinacao_lixo_enterra                                                                                                    String?                            @db.Char(1)
  destinacao_lixo_outro                                                                                                      String?                            @db.Char(1)
  dependencia_sala_diretoria                                                                                                 String?                            @db.Char(1)
  dependencia_sala_professor                                                                                                 String?                            @db.Char(1)
  dependencia_sala_secretaria                                                                                                String?                            @db.Char(1)
  dependencia_laboratorio_informatica                                                                                        String?                            @db.Char(1)
  dependencia_laboratorio_ciencia                                                                                            String?                            @db.Char(1)
  dependencia_sala_aee                                                                                                       String?                            @db.Char(1)
  dependencia_quadra_esporte_coberta                                                                                         String?                            @db.Char(1)
  dependencia_quadra_esporte_descoberta                                                                                      String?                            @db.Char(1)
  dependencia_cozinha                                                                                                        String?                            @db.Char(1)
  dependencia_biblioteca                                                                                                     String?                            @db.Char(1)
  dependencia_sala_leitura                                                                                                   String?                            @db.Char(1)
  dependencia_parque_infantil                                                                                                String?                            @db.Char(1)
  dependencia_bercario                                                                                                       String?                            @db.Char(1)
  dependencia_banheiro_fora                                                                                                  String?                            @db.Char(1)
  dependencia_banheiro_dentro                                                                                                String?                            @db.Char(1)
  dependencia_banheiro_infantil                                                                                              String?                            @db.Char(1)
  dependencia_banheiro_deficiente                                                                                            String?                            @db.Char(1)
  dependencia_vias_deficiente                                                                                                String?                            @db.Char(1)
  dependencia_banheiro_com_chuveiro                                                                                          String?                            @db.Char(1)
  dependencia_refeitorio                                                                                                     String?                            @db.Char(1)
  dependencia_despensa                                                                                                       String?                            @db.Char(1)
  dependencia_almoxerifado                                                                                                   String?                            @db.Char(1)
  dependencia_auditorio                                                                                                      String?                            @db.Char(1)
  dependencia_patio_coberto                                                                                                  String?                            @db.Char(1)
  dependencia_patio_descoberto                                                                                               String?                            @db.Char(1)
  dependencia_alojamento_aluno                                                                                               String?                            @db.Char(1)
  dependencia_alojamento_professor                                                                                           String?                            @db.Char(1)
  dependencia_area_verde                                                                                                     String?                            @db.Char(1)
  dependencia_lavandeira                                                                                                     String?                            @db.Char(1)
  dependencia_nenhuma_das_relacionada                                                                                        String?                            @db.Char(1)
  equipamento_televisao                                                                                                      String?                            @db.Char(4)
  equipamento_videocassete                                                                                                   String?                            @db.Char(4)
  equipamento_dvd                                                                                                            String?                            @db.Char(4)
  equipamento_antena_parabolica                                                                                              String?                            @db.Char(4)
  equipamento_copiadora                                                                                                      String?                            @db.Char(4)
  equipamento_retroprojetor                                                                                                  String?                            @db.Char(4)
  equipamento_impressora                                                                                                     String?                            @db.Char(4)
  equipamento_aparelho_som                                                                                                   String?                            @db.Char(4)
  equipamento_projeto_multimidia                                                                                             String?                            @db.Char(4)
  equipamento_fax                                                                                                            String?                            @db.Char(4)
  equipamento_maquina_filmadora                                                                                              String?                            @db.Char(4)
  equipamento_computador                                                                                                     String?                            @db.Char(4)
  qtd_computadores_escola                                                                                                    Int?
  qtd_computadores_administrativo                                                                                            Int?
  qtd_computadores_uso_aluno                                                                                                 Int?
  acesso_internet                                                                                                            String?                            @db.Char(1)
  banda_larga                                                                                                                String?                            @db.Char(1)
  total_funcionario                                                                                                          Int?
  alimentacao_escolar_aluno                                                                                                  String?                            @db.Char(1)
  aee                                                                                                                        String?
  atividade_complementar                                                                                                     String?
  ensino_fundamental_ciclos                                                                                                  String?                            @db.Char(1)
  localizacao_diferenciada                                                                                                   String?
  material_didatico_diversidade_nao_utiliza                                                                                  String?                            @db.Char(1)
  material_didatico_diversidade_quilombola                                                                                   String?                            @db.Char(1)
  material_didatico_diversidade_indigena                                                                                     String?                            @db.Char(1)
  educacao_indigena                                                                                                          String?                            @db.Char(1)
  lingua_ensino_ministrado_indigena                                                                                          String?                            @db.Char(1)
  lingua_ensino_ministrado_portuguesa                                                                                        String?                            @db.Char(1)
  lingua_indigena_id                                                                                                         Int?
  cede_espaco_brasil_alfabetizado                                                                                            String?                            @db.Char(1)
  aberto_finais_semanda_comunidade                                                                                           String?                            @db.Char(1)
  escola_com_formacao_por_alternancia                                                                                        String?                            @db.VarChar(10)
  dados_construcao                                                                                                           String?                            @db.TinyText
  situacao_predio                                                                                                            String?                            @db.TinyText
  area_terreno                                                                                                               String?                            @db.VarChar(30)
  area_construida                                                                                                            String?                            @db.VarChar(30)
  reforma                                                                                                                    String?                            @db.TinyText
  created_at                                                                                                                 DateTime?                          @db.DateTime(0)
  updated_at                                                                                                                 DateTime                           @default(now()) @db.Timestamp(0)
  deleted_at                                                                                                                 DateTime?                          @db.DateTime(0)
  mantenedora_oscip                                                                                                          Int?                               @db.TinyInt
  regulamentacao_federal                                                                                                     Int?                               @db.TinyInt
  regulamentacao_estadual                                                                                                    Int?                               @db.TinyInt
  regulamentacao_municipal                                                                                                   Int?                               @db.TinyInt
  orgao_escola_publica_vinculada_id                                                                                          Int?
  categoria_ensino_id                                                                                                        Int?
  rede_local_interligacao                                                                                                    Int?
  organizacao_ensino_id                                                                                                      Int?
  esgoto_sanitario_fossa_rudimentar                                                                                          Int?                               @db.TinyInt
  destinacao_lixo_licenciada                                                                                                 Int?                               @db.TinyInt
  tratamento_lixo_separacao                                                                                                  Int?                               @db.TinyInt
  tratamento_lixo_reutilizacao                                                                                               Int?                               @db.TinyInt
  tratamento_lixo_reciclagem                                                                                                 Int?                               @db.TinyInt
  tratamento_lixo_inexistente                                                                                                Int?                               @db.TinyInt
  dependencia_banheiro_funcionarios                                                                                          Int?                               @db.TinyInt
  dependencia_piscina                                                                                                        Int?                               @db.TinyInt
  dependencia_sala_repouso_aluno                                                                                             Int?                               @db.TinyInt
  dependencia_sala_artes                                                                                                     Int?                               @db.TinyInt
  dependencia_sala_musica                                                                                                    Int?                               @db.TinyInt
  dependencia_sala_danca                                                                                                     Int?                               @db.TinyInt
  dependencia_sala_multiuso                                                                                                  Int?                               @db.TinyInt
  dependencia_terreirao                                                                                                      Int?                               @db.TinyInt
  dependencia_criacao_animais                                                                                                Int?                               @db.TinyInt
  acessibilidade_corrimao                                                                                                    Int?                               @db.TinyInt
  acessibilidade_elevador                                                                                                    Int?                               @db.TinyInt
  acessibilidade_pisos_tateis                                                                                                Int?                               @db.TinyInt
  acessibilidade_porta_vao_livre                                                                                             Int?                               @db.TinyInt
  acessibilidade_rampas                                                                                                      Int?                               @db.TinyInt
  acessibilidade_sinalizacao_sonora                                                                                          Int?                               @db.TinyInt
  acessibilidade_sinalizacao_tatil                                                                                           Int?                               @db.TinyInt
  acessibilidade_sinalizacao_visual                                                                                          Int?                               @db.TinyInt
  acessibilidade_nenhum_listado                                                                                              Int?                               @db.TinyInt
  numero_salas_dentro_predio                                                                                                 Int?
  numero_salas_fora_predio                                                                                                   Int?
  numero_salas_climatizadas                                                                                                  Int?
  numero_salas_acessibilidade                                                                                                Int?
  equipamento_impressora_multifuncional                                                                                      Int?
  equipamento_scanner                                                                                                        Int?
  equipamento_lousa_digital                                                                                                  Int?
  qtd_computadores_mesa                                                                                                      Int?
  qtd_computadores_portateis                                                                                                 Int?
  qtd_computadores_tablets                                                                                                   Int?
  acesso_internet_administrativo                                                                                             Int?                               @db.TinyInt
  acesso_internet_ensino                                                                                                     Int?                               @db.TinyInt
  acesso_internet_alunos                                                                                                     Int?                               @db.TinyInt
  acesso_internet_comunidade                                                                                                 Int?                               @db.TinyInt
  acesso_internet_inexistente                                                                                                Int?                               @db.TinyInt
  equipamentos_acesso_internet_da_escola                                                                                     Int?                               @db.TinyInt
  equipamentos_acesso_internet_pessoais                                                                                      Int?                               @db.TinyInt
  total_profissionais_secretaria                                                                                             Int?                               @db.TinyInt
  total_profissionais_servicos_gerais                                                                                        Int?                               @db.TinyInt
  total_profissionais_biblioteca                                                                                             Int?                               @db.TinyInt
  total_profissionais_saude                                                                                                  Int?                               @db.TinyInt
  total_profissionais_coordenador                                                                                            Int?                               @db.TinyInt
  total_profissionais_fonoaudiologo                                                                                          Int?                               @db.TinyInt
  total_profissionais_nutricionista                                                                                          Int?                               @db.TinyInt
  total_profissionais_psicologo                                                                                              Int?                               @db.TinyInt
  total_profissionais_cozinha                                                                                                Int?                               @db.TinyInt
  total_profissionais_apoio_pedagogico                                                                                       Int?                               @db.TinyInt
  total_profissionais_secretario_escolar                                                                                     Int?                               @db.TinyInt
  total_profissionais_seguranca                                                                                              Int?                               @db.TinyInt
  total_profissionais_laboratorio                                                                                            Int?                               @db.TinyInt
  total_orientador_assistente_social                                                                                         Int?                               @db.TinyInt
  total_interprete_libras                                                                                                    Int?                               @db.TinyInt
  instrumentos_acervo_multimidia                                                                                             Int?                               @db.TinyInt
  instrumentos_brinquedos_infantil                                                                                           Int?                               @db.TinyInt
  instrumentos_materiais_cientificos                                                                                         Int?                               @db.TinyInt
  instrumentos_amplificacao_audio                                                                                            Int?                               @db.TinyInt
  instrumentos_musicais_conjunto                                                                                             Int?                               @db.TinyInt
  instrumentos_jogos_educativos                                                                                              Int?                               @db.TinyInt
  instrumentos_atividades_culturais                                                                                          Int?                               @db.TinyInt
  instrumentos_pratica_desportiva                                                                                            Int?                               @db.TinyInt
  instrumentos_educacao_bilingue_surdos                                                                                      Int?                               @db.TinyInt
  instrumentos_pedagogicos_indigenas                                                                                         Int?                               @db.TinyInt
  instrumentos_pedagogicos_etnicos_raciais                                                                                   Int?                               @db.TinyInt
  instrumentos_pedagogicos_campo                                                                                             Int?                               @db.TinyInt
  instrumentos_educacao_profissional                                                                                         Int?                               @db.TinyInt
  instrumentos_nenhum_listado                                                                                                Int?                               @db.TinyInt
  codigo_lingua_indigena_1                                                                                                   String?                            @db.VarChar(5)
  codigo_lingua_indigena_2                                                                                                   String?                            @db.VarChar(5)
  codigo_lingua_indigena_3                                                                                                   String?                            @db.VarChar(5)
  faz_exame_selecao                                                                                                          Int?                               @db.TinyInt
  cotas_ppi                                                                                                                  Int?                               @db.TinyInt
  cotas_renda                                                                                                                Int?                               @db.TinyInt
  cotas_escolas_publicas                                                                                                     Int?                               @db.TinyInt
  cotas_pcd                                                                                                                  Int?                               @db.TinyInt
  cotas_outros_grupos                                                                                                        Int?                               @db.TinyInt
  cotas_sem_reservas                                                                                                         Int?                               @db.TinyInt
  possui_site_redes_sociais                                                                                                  Int?                               @db.TinyInt
  espacos_escola_comunidade                                                                                                  Int?                               @db.TinyInt
  espacos_entorno_atividades                                                                                                 Int?                               @db.TinyInt
  orgao_associacao_pais                                                                                                      Int?                               @db.TinyInt
  orgao_associacao_pais_mestres                                                                                              Int?                               @db.TinyInt
  orgao_conselho_escolar                                                                                                     Int?                               @db.TinyInt
  orgao_gremio_estudantil                                                                                                    Int?                               @db.TinyInt
  orgao_outros                                                                                                               Int?                               @db.TinyInt
  orgao_nao_em_funcionamento                                                                                                 Int?                               @db.TinyInt
  total_gestao_admistrativa_financeira                                                                                       Int?
  situacao_funcionamento_historico_configuracao_escola_situacao_funcionamento_historico_idTosituacao_funcionamento_historico situacao_funcionamento_historico?  @relation("configuracao_escola_situacao_funcionamento_historico_idTosituacao_funcionamento_historico", fields: [situacao_funcionamento_historico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "configuracao_escola_FK_situacao_funcionamento_historico_")
  categoria_ensino                                                                                                           categoria_ensino?                  @relation(fields: [categoria_ensino_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "configuracao_escola_ibfk_1")
  categoria_escola_privada                                                                                                   categoria_escola_privada?          @relation(fields: [categoria_escola_privada_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_categoria_escola_privada")
  escola                                                                                                                     escola                             @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_configuracaoescola_escola")
  convenio_poder_publico                                                                                                     convenio_poder_publico?            @relation(fields: [convenio_poder_publico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_convenio_poder_publico")
  dependencia_administrativa                                                                                                 dependencia_administrativa?        @relation(fields: [dependencia_administrativa_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dependencia_administrativa")
  situacao_funcionamento                                                                                                     situacao_funcionamento?            @relation(fields: [situacao_funcionamento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_situacao_funcionamento")
  situacao_funcionamento_historico_situacao_funcionamento_historico_configuracao_escola_idToconfiguracao_escola              situacao_funcionamento_historico[] @relation("situacao_funcionamento_historico_configuracao_escola_idToconfiguracao_escola")

  @@index([categoria_ensino_id], map: "categoria_ensino_id")
  @@index([situacao_funcionamento_historico_id], map: "configuracao_escola_FK_situacao_funcionamento_historico")
  @@index([categoria_escola_privada_id], map: "fk_categoria_escola_privada")
  @@index([escola_id], map: "fk_configuracao_escola_escola")
  @@index([convenio_poder_publico_id], map: "fk_convenio_poder_publico")
  @@index([dependencia_administrativa_id], map: "fk_dependencia_administrativa")
  @@index([situacao_funcionamento_id], map: "fk_situacao_funcionamento")
}

model configuracao_formulario_pesquisa {
  id            Int       @id @default(autoincrement())
  formulario_id Int       @db.UnsignedMediumInt
  data_inicio   DateTime  @db.Date
  data_fim      DateTime  @db.Date
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime  @default(now()) @db.Timestamp(0)
  deleted_at    DateTime? @db.DateTime(0)

  @@index([formulario_id], map: "configuracao_formulario_pesquisa_FK_formulario")
}

model configuracao_municipio {
  id                                  Int       @id @default(autoincrement())
  nome_municipio                      String?   @db.VarChar(50)
  estado_municipio                    String?   @db.VarChar(50)
  texto_topo                          String?   @db.VarChar(80)
  cidade_id                           Int?
  latitude                            String?   @db.VarChar(30)
  longitude                           String?   @db.VarChar(30)
  data_fundacao_municipio             DateTime? @db.Date
  populacao                           String?   @db.VarChar(20)
  area_territorial_km                 String?   @db.VarChar(20)
  densidade_demografica               String?   @db.VarChar(20)
  gentilico                           String?   @db.VarChar(20)
  informacoes_gerais_municipio        String?   @db.Text
  nome_prefeito                       String?   @db.VarChar(100)
  data_posse_prefeito                 DateTime? @db.Date
  mandato_eletivo_anterior_prefeito   DateTime? @db.Date
  grau_instrucao_prefeito             String?   @db.Text
  nome_secretario_educacao            String?   @db.VarChar(100)
  mandato_eletivo_anterior_secretario DateTime? @db.Date
  grau_instrucao_secretario           String?   @db.Text
  conselho_secretario                 String?   @db.Text
  missoes_oficiais_secretario         String?   @db.Text
  logo_prefeitura                     String?   @db.VarChar(80)
  logo_secretaria                     String?   @db.VarChar(80)
  banner_cidade                       String?   @db.VarChar(80)
  linha1_header                       String    @db.VarChar(200)
  linha2_header                       String    @db.VarChar(200)
  linha3_header                       String    @db.VarChar(200)
  linha4_header                       String    @db.VarChar(200)
  linha1_rodape                       String    @db.VarChar(200)
  linha2_rodape                       String    @db.VarChar(200)
  linha3_rodape                       String    @db.VarChar(200)
  created                             DateTime? @db.DateTime(0)
  status                              String?   @db.Char(1)
  created_at                          DateTime? @db.DateTime(0)
  updated_at                          DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                          DateTime? @db.DateTime(0)
  lei_municipal_identidade_estudantil String?   @db.VarChar(12)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model conselho_escolar {
  id                             Int                             @id @default(autoincrement())
  categoria_id                   Int?
  escola_id                      Int?
  membro_id                      Int?
  tipo_membro                    String?
  created                        DateTime?                       @db.DateTime(0)
  status                         Int?                            @default(1) @db.TinyInt
  created_at                     DateTime?                       @db.DateTime(0)
  updated_at                     DateTime                        @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                       @db.DateTime(0)
  conselho_escolar_categoria_mec conselho_escolar_categoria_mec? @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cons_escolar_cat_mec_FK_cons_escolar")
  escola                         escola?                         @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "conselho_escolar_FK_escolar")

  @@index([categoria_id], map: "cons_escolar_cat_mec_FK_cons_escolar")
  @@index([escola_id], map: "conselho_escolar_FK_escolar")
}

model conselho_escolar_categoria_mec {
  id                Int                @id @default(autoincrement())
  codigo            String?            @db.VarChar(25)
  nome              String?            @db.VarChar(50)
  descricao         String             @db.Text
  individual_escola String?            @db.Char(1)
  created           DateTime           @db.DateTime(0)
  status            String?            @db.Char(1)
  created_at        DateTime?          @db.DateTime(0)
  updated_at        DateTime           @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?          @db.DateTime(0)
  conselho_escolar  conselho_escolar[]
}

model conta_bancaria_tipo {
  id              Int               @id @default(autoincrement())
  nome            String?           @db.VarChar(200)
  descricao       String?           @db.Text
  created         DateTime?         @db.DateTime(0)
  status          Boolean           @default(true)
  created_at      DateTime?         @db.DateTime(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.DateTime(0)
  contas_bancaria contas_bancaria[]
}

model contas_a_pagar_parcela {
  id              Int       @id @default(autoincrement())
  forma_pagamento String?   @db.Char(30)
  entrada_id      Int?
  escola_id       Int?
  data_vencimento DateTime? @db.Date
  parcela         Int?
  valor_parcela   Decimal?  @db.Decimal(10, 0)
  valor_pago      Decimal?  @db.Decimal(10, 0)
  situacao        String?
  data_pagamento  DateTime? @db.Date
  data_baixa      DateTime? @db.DateTime(0)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime  @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @db.DateTime(0)
}

model contas_bancaria {
  id                         Int                         @id @default(autoincrement())
  escola_id                  Int?
  nome                       String?                     @db.VarChar(50)
  instituicoes_financeira_id Int?
  banco                      String?                     @db.VarChar(50)
  nome_titular               String?                     @db.VarChar(70)
  agencia                    String?                     @db.Char(10)
  conta                      String?                     @db.Char(15)
  cpf_cnpj                   String?                     @db.VarChar(30)
  tipo_documento             String?
  descricao                  String?                     @db.Text
  saldo_inicial              Decimal?                    @db.Decimal(10, 3)
  saldo_atual                Decimal?                    @db.Decimal(10, 3)
  recurso_id                 Int?
  conta_bancaria_tipo_id     Int?
  created                    DateTime?                   @db.DateTime(0)
  status                     Int?                        @db.TinyInt
  created_at                 DateTime?                   @db.DateTime(0)
  updated_at                 DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime?                   @db.DateTime(0)
  caixa_escolar              caixa_escolar[]
  conta_bancaria_tipo        conta_bancaria_tipo?        @relation(fields: [conta_bancaria_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "contas_bancaria_fk_conta_bancaria_tipo")
  escola                     escola?                     @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "contas_bancaria_fk_escola")
  recurso                    recurso?                    @relation(fields: [recurso_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "contas_bancaria_fk_recurso")
  contas_bancaria_mes_saldo  contas_bancaria_mes_saldo[]
  despesa                    despesa[]
  escola_fatura              escola_fatura[]
  finan_lancamento_parcela   finan_lancamento_parcela[]

  @@index([conta_bancaria_tipo_id], map: "contas_bancaria_fk_conta_bancaria_tipo")
  @@index([escola_id], map: "contas_bancaria_fk_escola")
  @@index([recurso_id], map: "contas_bancaria_fk_recurso")
}

model contas_bancaria_mes_saldo {
  id                Int              @id @default(autoincrement())
  conta_bancaria_id Int?
  valor             Float?
  data_referencia   DateTime?        @db.Date
  created           DateTime?        @db.DateTime(0)
  status            Boolean?         @default(true)
  created_at        DateTime?        @db.DateTime(0)
  updated_at        DateTime         @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?        @db.DateTime(0)
  contas_bancaria   contas_bancaria? @relation(fields: [conta_bancaria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "contas_bancaria_saldo_ini_FK_contas_bancaria")

  @@index([conta_bancaria_id], map: "contas_bancaria_saldo_ini_FK_contas_bancaria")
}

model convenio_poder_publico {
  id                  Int                   @id
  nome                String?               @db.VarChar(80)
  status              String?               @db.Char(1)
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  configuracao_escola configuracao_escola[]
}

model convocatorias_visita_domiciliar {
  id                    Int       @id @default(autoincrement())
  aluno_id              Int
  servidor_id           Int
  data_visita_escola    DateTime? @db.Date
  horario_visita_escola DateTime? @db.Time(0)
  data_criacao          DateTime? @db.Date
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
  nome_responsavel      String?   @db.VarChar(255)
  responsavel_id        Int?
}

model coordenador_disciplinas {
  id                        Int                     @id @default(autoincrement())
  coordenador_nucleo_ano_id Int
  disciplina_mec_id         Int
  created_at                DateTime                @db.DateTime(0)
  updated_at                DateTime                @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?               @db.DateTime(0)
  coordenador_nucleo_anos   coordenador_nucleo_anos @relation(fields: [coordenador_nucleo_ano_id], references: [id], onUpdate: Restrict, map: "coordenador_disciplinas_fk_coordenador_nucleo_ano")
  disciplinas_mec           disciplinas_mec         @relation(fields: [disciplina_mec_id], references: [id], onUpdate: Restrict, map: "coordenador_disciplinas_fk_disciplina_mec")

  @@index([coordenador_nucleo_ano_id], map: "coordenador_nucleo_ano_id")
  @@index([disciplina_mec_id], map: "disciplina_mec_id")
}

model coordenador_escolas {
  id             Int           @id @default(autoincrement())
  coordenador_id Int
  escola_id      Int
  created_at     DateTime      @db.DateTime(0)
  updated_at     DateTime      @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?     @db.DateTime(0)
  coordenadores  coordenadores @relation(fields: [coordenador_id], references: [id], onUpdate: Restrict, map: "coordenador_escolas_FK_coordenador")
  escola         escola        @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "coordenador_escolas_FK_escola")

  @@index([coordenador_id], map: "coordenador_id")
  @@index([escola_id], map: "escola_id")
}

model coordenador_nucleo_anos {
  id                      Int                       @id @default(autoincrement())
  coordenador_id          Int
  nucleo_ano_id           Int
  created_at              DateTime                  @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  coordenador_disciplinas coordenador_disciplinas[]
  coordenadores           coordenadores             @relation(fields: [coordenador_id], references: [id], onUpdate: Restrict, map: "coordenador_nucleo_anos_fk_coordenador")
  nucleo_anos             nucleo_anos               @relation(fields: [nucleo_ano_id], references: [id], onUpdate: Restrict, map: "coordenador_nucleo_anos_fk_nucleo_ano")

  @@index([coordenador_id], map: "coordenador_id")
  @@index([nucleo_ano_id], map: "nucleo_ano_id")
}

model coordenadores {
  id                      Int                       @id @default(autoincrement())
  servidor_id             Int
  periodo_de              DateTime                  @db.Date
  periodo_ate             DateTime?                 @db.Date
  created_at              DateTime                  @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  coordenador_escolas     coordenador_escolas[]
  coordenador_nucleo_anos coordenador_nucleo_anos[]
  servidor                servidor                  @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "coordenadores_FK_servidor_id")

  @@index([servidor_id], map: "coordenadores_FK_servidor_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cr {
  id                                   Int                                    @id @default(autoincrement())
  escola_id                            Int?
  turma_id                             Int?
  ano_letivo_id                        Int?
  created                              DateTime?                              @db.DateTime(0)
  status                               Boolean?                               @default(true)
  created_at                           DateTime?                              @db.DateTime(0)
  updated_at                           DateTime                               @default(now()) @db.Timestamp(0)
  deleted_at                           DateTime?                              @db.DateTime(0)
  ano_letivo                           ano_letivo?                            @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_FK_ano_letivo")
  turma                                turma?                                 @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_FK_turma")
  escola                               escola?                                @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_fk_escola")
  cr_atividade_desenvolvida            cr_atividade_desenvolvida[]
  cr_atividade_desenvolvida_observacao cr_atividade_desenvolvida_observacao[]
  cr_atividade_pedagogica              cr_atividade_pedagogica[]
  cr_diagnostico                       cr_diagnostico[]
  cr_meta                              cr_meta[]
  cr_registro_plano                    cr_registro_plano[]
  cr_registro_sabere                   cr_registro_sabere[]
  cr_registro_semestral                cr_registro_semestral[]
  cr_relatorio_final_professor         cr_relatorio_final_professor[]

  @@index([ano_letivo_id], map: "cr_FK_ano_letivo")
  @@index([turma_id], map: "cr_FK_turma")
  @@index([escola_id], map: "cr_fk_escola")
}

model cr_atividade_desenvolvida {
  id         Int       @id @default(autoincrement())
  cr_id      Int?
  mes        Int?
  semana     Int?      @db.TinyInt
  conteudo   String?   @db.Text
  created    DateTime? @db.DateTime(0)
  status     Boolean   @default(true)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  cr         cr?       @relation(fields: [cr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_atividade_desenvolvida_FK_cr")

  @@index([cr_id], map: "cr_atividade_desenvolvida_FK_cr")
}

model cr_atividade_desenvolvida_observacao {
  id         Int       @id @default(autoincrement())
  cr_id      Int?      @default(0)
  mes        Int?      @default(0)
  observacao String?   @db.Text
  created    DateTime? @db.DateTime(0)
  status     Boolean?  @default(true)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  cr         cr?       @relation(fields: [cr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_ativ_desenvolvida_observacao_FK_cr")

  @@index([cr_id], map: "cr_ativ_desenvolvida_observacao_FK_cr")
}

model cr_atividade_pedagogica {
  id         Int       @id @default(autoincrement())
  cr_id      Int?
  mes        Int?
  atividade  String?   @db.Text
  status     Boolean   @default(true)
  created    DateTime  @db.DateTime(0)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  cr         cr?       @relation(fields: [cr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_atividade_pedagogica_FK_cr")

  @@index([cr_id], map: "cr_atividade_pedagogica_FK_cr")
}

model cr_diagnostico {
  id         Int       @id @default(autoincrement())
  cr_id      Int?
  texto      String?   @db.Text
  status     Boolean   @default(true)
  created    DateTime? @db.DateTime(0)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  cr         cr?       @relation(fields: [cr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_diagnostico_FK_cr")

  @@index([cr_id], map: "cr_diagnostico_FK_cr")
}

model cr_meta {
  id         Int       @id @default(autoincrement())
  cr_id      Int?
  meta       String?   @db.Text
  created    DateTime? @db.DateTime(0)
  status     Boolean?  @default(true)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  cr         cr?       @relation(fields: [cr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_meta_FK_cr")

  @@index([cr_id], map: "cr_meta_FK_cr")
}

model cr_registro_plano {
  id          Int       @id @default(autoincrement())
  cr_id       Int?      @default(0)
  mes         String?   @default("0") @db.Char(2)
  objetivo    String?   @db.Text
  conteudo    String?   @db.Text
  metodologia String?   @db.Text
  created     DateTime? @db.DateTime(0)
  status      Int?      @default(1) @db.TinyInt
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  cr          cr?       @relation(fields: [cr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_registro_plano_FK_cr")

  @@index([cr_id], map: "cr_registro_plano_FK_cr")
}

model cr_registro_sabere {
  id         Int       @id @default(autoincrement())
  cr_id      Int       @default(0)
  mes        String    @default("0") @db.Char(2)
  crianca    String?   @db.Text
  professor  String?   @db.Text
  status     Int       @default(1) @db.TinyInt
  created    DateTime  @db.DateTime(0)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  cr         cr        @relation(fields: [cr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_registro_saberes_FK_cr")

  @@index([cr_id], map: "cr_registro_saberes_FK_cr")
}

model cr_registro_semestral {
  id              Int       @id @default(autoincrement())
  cr_id           Int?
  semestre        String?   @db.Char(2)
  aluno_id        Int?
  perfil_do_aluno String?   @db.Text
  created         DateTime? @db.DateTime(0)
  status          Boolean?  @default(true)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime  @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @db.DateTime(0)
  aluno           aluno?    @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_registro_semestral_FK_aluno")
  cr              cr?       @relation(fields: [cr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_registro_semestral_FK_cr")

  @@index([aluno_id], map: "cr_registro_semestral_FK_aluno")
  @@index([cr_id], map: "cr_registro_semestral_FK_cr")
}

model cr_relatorio_final_professor {
  id         Int       @id @default(autoincrement())
  cr_id      Int?      @default(0)
  relatorio  String?   @db.Text
  created    DateTime? @db.DateTime(0)
  status     Int?      @db.TinyInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  cr         cr?       @relation(fields: [cr_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cr_relatorio_final_profesor_FK_cr")

  @@index([cr_id], map: "cr_relatorio_final_profesor_FK_cr")
}

model criterio_acesso_cargo {
  id         Int       @id @default(autoincrement())
  descricao  String?   @db.VarChar(255)
  STATUS     Int?      @default(1) @db.TinyInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model curso_educacao_profissional {
  id         Int       @id
  codigo     String?   @db.Char(7)
  nome       String?   @db.VarChar(50)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model curso_superior {
  id             String    @id @default("") @db.VarChar(15)
  cod_ocde       String?   @db.VarChar(6)
  nome           String?   @db.VarChar(80)
  grau_academico String?   @db.VarChar(15)
  status         String?   @db.Char(1)
  codigo_censo   String?   @db.VarChar(15)
  created_at     DateTime? @db.DateTime(0)
  updated_at     DateTime  @default(now()) @db.Timestamp(0)
  deleted_at     DateTime? @db.DateTime(0)
}

model dados_obra {
  id         Int       @id @default(autoincrement())
  acervo_id  Int
  titulo     String?   @db.VarChar(255)
  editora_id Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  acervo     acervo    @relation(fields: [acervo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dados_obra_acervo1")
  editora    editora   @relation(fields: [editora_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dados_obra_editora1")

  @@index([acervo_id], map: "fk_dados_obra_acervo1")
  @@index([editora_id], map: "fk_dados_obra_editora1")
}

model dados_outros {
  id              Int       @id @default(autoincrement())
  acervo_id       Int
  titulo_trabalho String?   @db.VarChar(255)
  ano_publicacao  Int?
  created         DateTime? @db.DateTime(0)
  status          String?   @db.VarChar(1)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime  @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @db.DateTime(0)
  acervo          acervo    @relation(fields: [acervo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dados_outros_acervo1")

  @@index([acervo_id], map: "fk_dados_outros_acervo1")
}

model dados_periodico {
  id                 Int       @id @default(autoincrement())
  acervo_id          Int
  nome_publicacao    String?   @db.VarChar(255)
  ano_mes_referencia String?   @db.VarChar(7)
  edicao             String?   @db.VarChar(50)
  created            DateTime? @db.DateTime(0)
  status             String?   @db.VarChar(1)
  created_at         DateTime? @db.DateTime(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.DateTime(0)
  acervo             acervo    @relation(fields: [acervo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dados_periodico_acervo1")

  @@index([acervo_id], map: "fk_dados_periodico_acervo1")
}

model dashboard_mural {
  id                     Int                      @id @default(autoincrement()) @db.UnsignedInt
  descricao              String?                  @db.VarChar(175)
  type                   String?                  @db.VarChar(75)
  end_date               DateTime?                @db.Date
  created_at             DateTime?                @db.DateTime(0)
  updated_at             DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?                @db.DateTime(0)
  dashboard_mural_perfil dashboard_mural_perfil[]
}

model dashboard_mural_perfil {
  id                  Int              @id @default(autoincrement())
  dashboard_mural_id  Int              @db.UnsignedInt
  dashboard_perfil_id Int              @db.UnsignedMediumInt
  read_date           DateTime?        @db.Date
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  dashboard_mural     dashboard_mural  @relation(fields: [dashboard_mural_id], references: [id], onUpdate: Restrict, map: "dashboard_mural_FK_dashboard_mural_perfil")
  dashboard_perfil    dashboard_perfil @relation(fields: [dashboard_perfil_id], references: [id], onUpdate: Restrict, map: "dashboard_perfil_FK_dashboard_mural_perfil")

  @@index([dashboard_mural_id], map: "dashboard_mural_FK_dashboard_mural_perfil")
  @@index([dashboard_perfil_id], map: "dashboard_perfil_FK_dashboard_mural_perfil")
}

model dashboard_perfil {
  id                        Int                         @id @default(autoincrement()) @db.UnsignedMediumInt
  chave                     String                      @unique(map: "chave") @default("0") @db.VarChar(50)
  descricao                 String                      @default("0") @db.VarChar(100)
  habilitado                dashboard_perfil_habilitado @default(S)
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime?                   @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.DateTime(0)
  aviso_destinos            aviso_destinos[]
  dashboard_mural_perfil    dashboard_mural_perfil[]
  dashboard_servidor_perfil dashboard_servidor_perfil[]
}

model dashboard_servidor_perfil {
  id                  Int               @id @default(autoincrement()) @db.UnsignedMediumInt
  servidor_id         Int?
  dashboard_perfil_id Int?              @db.UnsignedMediumInt
  status              Int               @default(1) @db.TinyInt
  created_at          DateTime?         @db.DateTime(0)
  updated_at          DateTime?         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  dashboard_perfil    dashboard_perfil? @relation(fields: [dashboard_perfil_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "dashboard_perfil_servidor_FK_dashboard_perfil")
  servidor            servidor?         @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "dashboard_perfil_servidor_FK_servidor")

  @@index([dashboard_perfil_id], map: "dashboard_perfil_servidor_FK_dashboard_perfil")
  @@index([servidor_id], map: "dashboard_perfil_servidor_FK_servidor")
}

model declaracao_gerenciavel {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  escola_id  Int?
  nome       String?   @db.VarChar(50)
  cabecalho  String?   @db.Text
  corpo      String?   @db.Text
  rodape     String?   @db.Text
  created    DateTime  @db.DateTime(0)
  status     Boolean   @default(true)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  escola     escola?   @relation(fields: [escola_id], references: [id], onUpdate: SetNull, map: "declaracao_gerenciavel_fk_escola")

  @@index([created], map: "created")
  @@index([escola_id], map: "declaracao_gerenciavel_fk_escola")
}

model dependencia_administrativa {
  id                  Int                   @id
  nome                String?               @db.VarChar(80)
  status              String?               @db.Char(1)
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  configuracao_escola configuracao_escola[]
}

model dependencia_fisica {
  id                        Int                         @id @default(autoincrement())
  codigo                    String?                     @db.Char(5)
  nome                      String?                     @db.VarChar(100)
  created                   DateTime?                   @db.DateTime(0)
  status                    String?                     @db.Char(1)
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.DateTime(0)
  dependencia_fisica_escola dependencia_fisica_escola[]
}

model dependencia_fisica_escola {
  id                    Int                 @id @default(autoincrement())
  escola_id             Int?
  nome                  String?             @db.VarChar(200)
  dependencia_fisica_id Int?
  quantidade            Int?
  created               DateTime?           @db.DateTime(0)
  status                String?             @db.Char(1)
  created_at            DateTime?           @db.DateTime(0)
  updated_at            DateTime            @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?           @db.DateTime(0)
  dependencia_fisica    dependencia_fisica? @relation(fields: [dependencia_fisica_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_dependencia_fisica_escola_dependencia_fisica_id")
  escola                escola?             @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_dependencia_fisica_escola_escola_id")

  @@index([dependencia_fisica_id], map: "FK_dependencia_fisica_escola_dependencia_fisica_id")
  @@index([escola_id], map: "FK_dependencia_fisica_escola_escola_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model desistencia_aluno {
  id               Int         @id @default(autoincrement())
  escola_id        Int?
  aluno_id         Int?
  matricula_id     Int?
  data_desistencia DateTime?   @db.Date
  ano_letivo_id    Int?
  motivo           String?     @db.Text
  situacao         String?
  created_at       DateTime?   @db.DateTime(0)
  updated_at       DateTime    @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?   @db.DateTime(0)
  aluno            aluno?      @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_desistenciaaluno_aluno")
  ano_letivo       ano_letivo? @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_desistenciaaluno_anoletivoid")
  escola           escola?     @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_desistenciaaluno_escola")
  matricula        matricula?  @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_desistenciaaluno_matricula")

  @@index([aluno_id], map: "fk_desistenciaaluno_aluno")
  @@index([ano_letivo_id], map: "fk_desistenciaaluno_anoletivoid")
  @@index([escola_id], map: "fk_desistenciaaluno_escola")
  @@index([matricula_id], map: "fk_desistenciaaluno_matricula")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model desligamento_aluno {
  id                Int         @id @default(autoincrement())
  escola_id         Int?
  aluno_id          Int?
  matricula_id      Int?
  data_desligamento DateTime?   @db.Date
  ano_letivo_id     Int?
  motivo            String?     @db.Text
  situacao          String?
  created_at        DateTime?   @db.DateTime(0)
  updated_at        DateTime    @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?   @db.DateTime(0)
  aluno             aluno?      @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_desligamentoaluno_aluno")
  ano_letivo        ano_letivo? @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_desligamentoaluno_anoletivoid")
  escola            escola?     @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_desligamentoaluno_escola")
  matricula         matricula?  @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_desligamentoaluno_matricula")

  @@index([aluno_id], map: "fk_desligamentoaluno_aluno")
  @@index([ano_letivo_id], map: "fk_desligamentoaluno_anoletivoid")
  @@index([escola_id], map: "fk_desligamentoaluno_escola")
  @@index([matricula_id], map: "fk_desligamentoaluno_matricula")
}

model despesa {
  id                   Int               @id @default(autoincrement())
  escola_id            Int
  caixa_escolar_id     Int?
  tipos_despesa_mec_id Int
  descricao            String            @db.Text
  observacao           String            @db.Text
  valor                Decimal?          @db.Decimal(10, 3)
  data                 DateTime?         @db.Date
  cancelado            Boolean?
  transparencia        Boolean?
  valor_tirado         Decimal?          @db.Decimal(10, 3)
  plano_conta_id       Int?
  contas_bancaria_id   Int?
  created_at           DateTime?         @db.DateTime(0)
  updated_at           DateTime          @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?         @db.DateTime(0)
  caixa_escolar        caixa_escolar?    @relation(fields: [caixa_escolar_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_despesa_caixa_escolar1")
  contas_bancaria      contas_bancaria?  @relation(fields: [contas_bancaria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_despesa_contasbancaria")
  escola               escola            @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_despesa_escola1")
  plano_conta          plano_conta?      @relation(fields: [plano_conta_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_despesa_planoconta")
  tipos_despesa_mec    tipos_despesa_mec @relation(fields: [tipos_despesa_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_despesa_tipos_despesa_mec1")

  @@index([caixa_escolar_id], map: "fk_despesa_caixa_escolar1")
  @@index([contas_bancaria_id], map: "fk_despesa_contasbancaria")
  @@index([escola_id], map: "fk_despesa_escola1")
  @@index([plano_conta_id], map: "fk_despesa_planoconta")
  @@index([tipos_despesa_mec_id], map: "fk_despesa_tipos_despesa_mec1")
}

model diario_chamada {
  id                    Int                                @id @default(autoincrement()) @db.UnsignedInt
  diario_dispositivo_id Int?
  diario_tipo_chamada   diario_chamada_diario_tipo_chamada
  ambiente              String?                            @db.VarChar(150)
  json_entrada          String                             @db.LongText
  json_saida            String                             @db.LongText
  informacao_extra      String?                            @db.VarChar(100)
  token                 String?                            @db.VarChar(100)
  latitude              String?                            @db.VarChar(150)
  longitude             String?                            @db.VarChar(150)
  created_at            DateTime                           @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at            DateTime                           @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at            DateTime?                          @db.Timestamp(0)
  versao                String?                            @db.VarChar(20)
}

model diario_dispositivo {
  id                           Int       @id @default(autoincrement()) @db.UnsignedInt
  servidor_id                  Int?      @db.UnsignedInt
  escola_id                    Int?      @db.UnsignedInt
  serial                       String?   @db.VarChar(255)
  imei                         String?   @db.VarChar(255)
  telefone                     String?   @db.VarChar(255)
  fabricante                   String?   @db.VarChar(255)
  modelo                       String?   @db.VarChar(255)
  ultima_sincronizacao         DateTime  @db.DateTime(0)
  ultima_sincronizacao_recados DateTime? @db.DateTime(0)
  deleted_at                   DateTime? @db.Timestamp(0)
  created_at                   DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at                   DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
}

model diario_escola {
  id                    Int                @id @default(autoincrement()) @db.UnsignedSmallInt
  escola_id             Int
  diario_escola_tipo_id Int                @db.UnsignedSmallInt
  operadora             String?            @db.VarChar(250)
  tombamento            String?            @db.VarChar(250)
  numero_telefone       String?            @db.VarChar(250)
  numero_serie          String?            @db.VarChar(250)
  email                 String?            @db.VarChar(250)
  versao_android        String?            @db.VarChar(250)
  imei                  String?            @db.VarChar(250)
  marca                 String?            @db.VarChar(250)
  modelo                String?            @db.VarChar(250)
  ativo                 Boolean?           @default(true)
  data_entrega          DateTime?          @db.DateTime(0)
  data_devolucao        DateTime?          @db.DateTime(0)
  android_device_id     String?            @db.VarChar(250)
  mac                   String?            @db.VarChar(250)
  unique_id             String?            @db.VarChar(250)
  android_api           Int?
  advertising_id        String?            @db.VarChar(250)
  created_at            DateTime?          @db.DateTime(0)
  updated_at            DateTime?          @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?          @db.DateTime(0)
  diario_escola_tipo    diario_escola_tipo @relation(fields: [diario_escola_tipo_id], references: [id], onUpdate: Restrict, map: "FK_diario_escola_diario_escola_tipo")
  escola                escola             @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_adiario_escola_escola")

  @@index([diario_escola_tipo_id], map: "diario_escola_tipo_id")
  @@index([escola_id], map: "fk_adiario_escola_escola")
}

model diario_escola_tipo {
  id            Int             @id @default(autoincrement()) @db.UnsignedSmallInt
  nome          String?         @db.VarChar(50)
  created_at    DateTime?       @db.DateTime(0)
  updated_at    DateTime?       @db.Timestamp(0)
  deleted_at    DateTime?       @db.DateTime(0)
  diario_escola diario_escola[]
}

model disciplina_ano {
  id                 Int             @id @default(autoincrement()) @db.UnsignedInt
  ano_letivo         String?         @db.Char(5)
  disciplinas_mec_id Int
  ano_id             Int
  created_at         DateTime?       @db.DateTime(0)
  updated_at         DateTime        @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?       @db.DateTime(0)
  ano                ano             @relation(fields: [ano_id], references: [id], onUpdate: Restrict, map: "disciplina_ano_FK_ano")
  disciplinas_mec    disciplinas_mec @relation(fields: [disciplinas_mec_id], references: [id], onUpdate: Restrict, map: "disciplina_ano_FK_disciplinas_mec")

  @@index([ano_id], map: "disciplina_ano_FK_ano")
  @@index([disciplinas_mec_id], map: "disciplina_ano_FK_disciplinas_mec")
}

model disciplinas_escola {
  id                 Int             @id @default(autoincrement())
  escola_id          Int
  ano_letivo_id      Int?
  disciplinas_mec_id Int
  created_at         DateTime?       @db.DateTime(0)
  updated_at         DateTime        @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?       @db.DateTime(0)
  ano_letivo         ano_letivo?     @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_disciplinas_escola_ano_letivo1")
  disciplinas_mec    disciplinas_mec @relation(fields: [disciplinas_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_disciplinas_escola_disciplinas_mec1")
  escola             escola          @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_disciplinas_escola_escola1")

  @@index([ano_letivo_id], map: "fk_disciplinas_escola_ano_letivo1")
  @@index([disciplinas_mec_id], map: "fk_disciplinas_escola_disciplinas_mec1")
  @@index([escola_id], map: "fk_disciplinas_escola_escola1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model disciplinas_mec {
  id                                          Int                                           @id @default(autoincrement())
  codigo                                      String?                                       @db.Char(20)
  codigo_unico                                String?                                       @db.VarChar(50)
  nome                                        String?                                       @db.VarChar(255)
  ordem                                       Int?
  individual_escola                           String?                                       @db.Char(1)
  created                                     DateTime?                                     @db.DateTime(0)
  status                                      Boolean?
  created_at                                  DateTime?                                     @db.DateTime(0)
  updated_at                                  DateTime                                      @default(now()) @db.Timestamp(0)
  deleted_at                                  DateTime?                                     @db.DateTime(0)
  acordo_nea_professor                        acordo_nea_professor[]
  alinhamento                                 alinhamento[]
  avaliacao                                   avaliacao[]
  cbc_eixo                                    cbc_eixo[]
  coordenador_disciplinas                     coordenador_disciplinas[]
  disciplina_ano                              disciplina_ano[]
  disciplinas_escola                          disciplinas_escola[]
  disciplinas_nivel_ensino                    disciplinas_nivel_ensino[]
  disciplinas_servidor                        disciplinas_servidor[]
  escola_quadro_vagas_ciclo_disciplina        escola_quadro_vagas_ciclo_disciplina[]
  falta_aluno_admitido                        falta_aluno_admitido[]
  historico_disciplina                        historico_disciplina[]
  pcn_capacidade                              pcn_capacidade[]
  plano_curricular_ano_disciplina             plano_curricular_ano_disciplina[]
  plano_curricular_ciclo_disciplina           plano_curricular_ciclo_disciplina[]
  professor_quadro_vagas_ciclo_disciplina     professor_quadro_vagas_ciclo_disciplina[]
  quadro_vagas_escola                         quadro_vagas_escola[]
  servidor_cargo_escola_etapa_disciplina      servidor_cargo_escola_etapa_disciplina[]
  turma_disciplina                            turma_disciplina[]
  turma_planejamento_infantil_disciplinas_mec turma_planejamento_infantil_disciplinas_mec[]
}

model disciplinas_nivel_ensino {
  id                  Int              @id @default(autoincrement())
  ano_letivo          Int?
  nivel_ensino_mec_id Int
  disciplinas_mec_id  Int
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  disciplinas_mec     disciplinas_mec  @relation(fields: [disciplinas_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "disciplinas_nivel_ensino_ibfk_2")
  nivel_ensino_mec    nivel_ensino_mec @relation(fields: [nivel_ensino_mec_id], references: [id], onUpdate: Restrict, map: "disciplinas_nivel_ensino_ibfk_3")

  @@index([nivel_ensino_mec_id], map: "disciplinas_nivel_ensino_ibfk_3")
  @@index([ano_letivo], map: "fk_disciplinas_escola_ano_letivo1")
  @@index([disciplinas_mec_id], map: "fk_disciplinas_escola_disciplinas_mec1")
}

model disciplinas_servidor {
  id                 Int             @id @default(autoincrement())
  servidor_id        Int
  disciplinas_mec_id Int
  created_at         DateTime?       @db.DateTime(0)
  updated_at         DateTime        @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?       @db.DateTime(0)
  disciplinas_mec    disciplinas_mec @relation(fields: [disciplinas_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_disciplinas_servidor_disciplinas_mec1")
  servidor           servidor        @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_disciplinas_servidor_servidor1")

  @@index([disciplinas_mec_id], map: "fk_disciplinas_servidor_disciplinas_mec1")
  @@index([servidor_id], map: "fk_disciplinas_servidor_servidor1")
}

model dispensa_disciplina {
  id                  Int               @id @default(autoincrement())
  escola_id           Int?
  ano_letivo_id       Int?
  turma_id            Int?
  turma_disciplina_id Int?
  data_dispensa       DateTime?         @db.Date
  motivo              String?           @db.Text
  aluno_id            Int?
  matricula_id        Int?
  created_at          DateTime?         @db.DateTime(0)
  updated_at          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  aluno               aluno?            @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dispensa_aluno")
  ano_letivo          ano_letivo?       @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dispensa_anoletivo")
  escola              escola?           @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dispensa_escola")
  matricula           matricula?        @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dispensa_matricula")
  turma               turma?            @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dispensa_turma")
  turma_disciplina    turma_disciplina? @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_dispensa_turma_disciplina")

  @@index([aluno_id], map: "fk_dispensa_aluno")
  @@index([ano_letivo_id], map: "fk_dispensa_anoletivo")
  @@index([escola_id], map: "fk_dispensa_escola")
  @@index([matricula_id], map: "fk_dispensa_matricula")
  @@index([turma_id], map: "fk_dispensa_turma")
  @@index([turma_disciplina_id], map: "fk_dispensa_turma_disciplina")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model disponibilidade_servidor {
  id              Int       @id @default(autoincrement())
  escola_id       Int?
  servidor_id     Int?
  disponibilidade String?
  created         DateTime? @db.DateTime(0)
  status          String?   @db.Char(1)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime  @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @db.DateTime(0)
  escola          escola?   @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_disponibilidadeservidor_escola")
  servidor        servidor? @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_disponibilidadeservidor_servidor")

  @@index([escola_id], map: "fk_disponibilidadeservidor_escola")
  @@index([servidor_id], map: "fk_disponibilidadeservidor_servidor")
}

model distribuicao_ponto {
  id         Int       @id @default(autoincrement())
  turma_id   Int?
  escola_id  Int?
  descricao  String?   @db.VarChar(80)
  ponto      Decimal?  @db.Decimal(3, 0)
  created    DateTime? @db.DateTime(0)
  status     Int?      @db.TinyInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  escola     escola?   @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_distribuicaoponto_escola")
  turma      turma?    @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_distribuicaoponto_turma")

  @@index([escola_id], map: "fk_distribuicaoponto_escola")
  @@index([turma_id], map: "fk_distribuicaoponto_turma")
}

model distrito {
  id              Int       @id @default(autoincrement())
  codigo_distrito Int       @default(0)
  cidade_id       Int?
  nome_cidade     String?   @db.VarChar(70)
  nome            String?   @db.VarChar(50)
  status          String?   @db.Char(1)
  estado_id       Int?
  nome_estado     String?   @db.VarChar(70)
  zona_id         Int?
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime  @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @db.DateTime(0)
  cidade          cidade?   @relation(fields: [cidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "distrito_fk_cidade")
  estado          estado?   @relation(fields: [estado_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "distrito_fk_estado")
  zona            zona?     @relation(fields: [zona_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "distrito_fk_zona")

  @@index([cidade_id], map: "distrito_fk_cidade")
  @@index([estado_id], map: "distrito_fk_estado")
  @@index([zona_id], map: "distrito_fk_zona")
}

model distritos_escola {
  id               Int           @id @default(autoincrement())
  escola_id        Int
  distritos_mec_id Int
  created_at       DateTime?     @db.DateTime(0)
  updated_at       DateTime      @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?     @db.DateTime(0)
  distritos_mec    distritos_mec @relation(fields: [distritos_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_distritos_escola_distritos_mec1")
  escola           escola        @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_distritos_escola_escola1")

  @@index([distritos_mec_id], map: "fk_distritos_escola_distritos_mec1")
  @@index([escola_id], map: "fk_distritos_escola_escola1")
}

model distritos_mec {
  id                Int                @id @default(autoincrement())
  codigo            String?            @db.Char(20)
  nome              String?            @db.VarChar(100)
  municipio         String?            @db.VarChar(50)
  uf                String?            @db.Char(5)
  individual_escola String?            @db.Char(1)
  created           DateTime?          @db.DateTime(0)
  status            String?            @db.Char(1)
  created_at        DateTime?          @db.DateTime(0)
  updated_at        DateTime           @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?          @db.DateTime(0)
  distritos_escola  distritos_escola[]
}

model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.DateTime(6)
  object_id           String?              @db.LongText
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.UnsignedSmallInt
  change_message      String               @db.LongText
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      Int      @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.DateTime(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String   @db.LongText
  expire_date  DateTime @db.DateTime(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
}

model edi_acompanhamento {
  id             Int         @id @default(autoincrement())
  matricula_id   Int
  edi_quesito_id Int
  resposta       Boolean?
  created        DateTime?   @db.DateTime(0)
  status         Boolean     @default(true)
  created_at     DateTime?   @db.DateTime(0)
  updated_at     DateTime    @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?   @db.DateTime(0)
  edi_quesito    edi_quesito @relation(fields: [edi_quesito_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "edi_acompanhamento_fk_edi_quesito")
  matricula      matricula   @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "edi_acompanhamento_fk_matricula")

  @@index([edi_quesito_id], map: "edi_quesito_id")
  @@index([matricula_id], map: "matricula_id")
}

model edi_ficha_individual {
  id               Int       @id @default(autoincrement())
  turma_id         Int
  matricula_id     Int
  desempenho_final String?   @db.Text
  created          DateTime? @db.DateTime(0)
  status           Boolean   @default(true)
  created_at       DateTime? @db.DateTime(0)
  updated_at       DateTime  @default(now()) @db.Timestamp(0)
  deleted_at       DateTime? @db.DateTime(0)
  matricula        matricula @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "edi_ficha_individual_fk_matricula")
  turma            turma     @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "edi_ficha_individual_fk_turma")

  @@index([matricula_id], map: "matricula_id")
  @@index([turma_id], map: "turma_id")
}

model edi_quadro_curricular {
  id                  Int              @id @default(autoincrement())
  matricula_id        Int
  turma_disciplina_id Int
  conceito_id         Int?
  created             DateTime?        @db.DateTime(0)
  status              Boolean          @default(true)
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  conceito            conceito?        @relation(fields: [conceito_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "edi_quadro_curricular_fk_conceito")
  matricula           matricula        @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "edi_quadro_curricular_fk_matricula")
  turma_disciplina    turma_disciplina @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "edi_quadro_curricular_fk_turma_disciplina")

  @@index([conceito_id], map: "conceito_id")
  @@index([matricula_id], map: "matricula_id")
  @@index([turma_disciplina_id], map: "turma_disciplina_id")
}

model edi_quesito {
  id                 Int                  @id @default(autoincrement())
  questao            String               @db.VarChar(500)
  created            DateTime?            @db.DateTime(0)
  status             Boolean              @default(true)
  created_at         DateTime?            @db.DateTime(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?            @db.DateTime(0)
  edi_acompanhamento edi_acompanhamento[]
}

model editora {
  id          Int          @id @unique(map: "id_UNIQUE") @default(autoincrement())
  nome        String?      @db.VarChar(255)
  descricao   String?      @db.Text
  cep         String?      @db.VarChar(50)
  endereco    String?      @db.VarChar(255)
  complemento String?      @db.VarChar(255)
  fone        String?      @db.VarChar(50)
  email       String?      @db.VarChar(255)
  site        String?      @db.VarChar(255)
  pais_id     Int
  estado_id   Int
  cidade_id   Int
  created     DateTime?    @db.DateTime(0)
  status      String?      @db.VarChar(1)
  created_at  DateTime?    @db.DateTime(0)
  updated_at  DateTime     @default(now()) @db.Timestamp(0)
  deleted_at  DateTime?    @db.DateTime(0)
  dados_obra  dados_obra[]
  cidade      cidade       @relation(fields: [cidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_editora_cidade1")
  estado      estado       @relation(fields: [estado_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_editora_estado1")
  pais        pais         @relation(fields: [pais_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_editora_pais1")

  @@index([cidade_id], map: "fk_editora_cidade1")
  @@index([estado_id], map: "fk_editora_estado1")
  @@index([pais_id], map: "fk_editora_pais1")
}

model emprestimo {
  id              Int       @id @unique(map: "id_UNIQUE") @default(autoincrement())
  escola_id       Int
  exemplar_id     Int
  aluno_id        Int?
  servidor_id     Int?
  data_emprestimo DateTime? @db.DateTime(0)
  data_prevista   DateTime? @db.DateTime(0)
  data_devolucao  DateTime? @db.DateTime(0)
  created         DateTime? @db.DateTime(0)
  status          String?   @db.VarChar(1)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime  @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @db.DateTime(0)
  aluno           aluno?    @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_emprestimo_aluno1")
  escola          escola    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_emprestimo_escola1")
  exemplar        exemplar  @relation(fields: [exemplar_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_emprestimo_exemplar1")
  servidor        servidor? @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_emprestimo_servidor1")

  @@index([aluno_id], map: "fk_emprestimo_aluno1")
  @@index([escola_id], map: "fk_emprestimo_escola1")
  @@index([exemplar_id], map: "fk_emprestimo_exemplar1")
  @@index([servidor_id], map: "fk_emprestimo_servidor1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model entidade {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedInt
  entidade_pai_id       Int?                    @db.UnsignedInt
  nome                  String?                 @db.VarChar(50)
  prefixo               String?                 @db.VarChar(30)
  tabela                String?                 @db.VarChar(30)
  tipo                  String?
  status                Boolean?                @default(true)
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  classificacao_arquivo classificacao_arquivo[]
  entidade              entidade?               @relation("entidadeToentidade", fields: [entidade_pai_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_entidade_pai")
  other_entidade        entidade[]              @relation("entidadeToentidade")

  @@index([entidade_pai_id], map: "fk_entidade_pai")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model entrada {
  id                       Int               @id @default(autoincrement())
  tipo_entrada_id          Int
  qtd_entrada              Int?
  data_entrada             DateTime?         @db.Date
  qtd_entrou               Int?
  cancelado                Boolean?
  escola_id                Int?
  observacao               String?           @db.Text
  fornecedor_id            Int?
  custo_unitario           Decimal?          @db.Decimal(10, 3)
  custo_total              Decimal?          @db.Decimal(10, 3)
  n_processo               String?           @db.Char(20)
  descricao                String?           @db.Text
  data_licitacao           DateTime?         @db.Date
  num_nota_fiscal_lote     String?           @db.Char(20)
  data_emissao_nota        DateTime?         @db.Date
  data_recuperacao_nota    DateTime?         @db.Date
  valor_nota               Decimal?          @db.Decimal(10, 0)
  dt_vencimento_produto    DateTime?         @db.Date
  dt_fabricacao_produto    DateTime?         @db.Date
  condicao_pagamento       String?
  forma_pagamento          String?
  qtd_parcela              Int?
  agencia_para_deposito    String?           @db.Char(15)
  banco_para_deposito      String?           @db.VarChar(50)
  conta_para_deposito      String?           @db.Char(20)
  nome_conta_para_deposito String?           @db.VarChar(80)
  valor_parcela            Decimal?          @db.Decimal(10, 0)
  data_primeiro_vencimento DateTime?         @db.Date
  dia_vencimento           Int?
  situacao_pagamento       String?
  created_at               DateTime?         @db.DateTime(0)
  updated_at               DateTime          @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?         @db.DateTime(0)
  escola                   escola?           @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_entrada_escola")
  fornecedor               fornecedor?       @relation(fields: [fornecedor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_entrada_fornecedor")
  tipo_entrada             tipo_entrada      @relation(fields: [tipo_entrada_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_entrada_tipo_entrada1")
  entrada_produto          entrada_produto[]

  @@index([escola_id], map: "fk_entrada_escola")
  @@index([fornecedor_id], map: "fk_entrada_fornecedor")
  @@index([tipo_entrada_id], map: "fk_entrada_tipo_entrada1")
}

model entrada_produto {
  id          Int       @id @default(autoincrement())
  entrada_id  Int
  produto_id  Int
  quantidade  Int?
  estoque_id  Int
  valor       Decimal?  @db.Decimal(10, 2)
  valor_total Decimal?  @db.Decimal(10, 2)
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  estoque     estoque   @relation(fields: [estoque_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_entrada_produto_estoque1")
  produto     produto   @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_entrada_produto_produto1")
  entrada     entrada   @relation(fields: [entrada_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_entrada_produto_saida1")

  @@index([entrada_id], map: "fk_entrada_produto_entrada1")
  @@index([estoque_id], map: "fk_entrada_produto_estoque1")
  @@index([produto_id], map: "fk_entrada_produto_produto1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model escola {
  id                                                       Int                                              @id @default(autoincrement())
  servidor_id                                              Int?
  nome                                                     String?                                          @db.VarChar(100)
  endereco                                                 String?                                          @db.VarChar(100)
  complemento                                              String?                                          @db.VarChar(80)
  numero                                                   String?                                          @db.Char(10)
  bairro                                                   String?                                          @db.VarChar(50)
  cidade                                                   String?                                          @db.VarChar(50)
  uf                                                       String?                                          @db.Char(5)
  cep                                                      String?                                          @db.VarChar(50)
  inep                                                     String?                                          @db.VarChar(50)
  cnpj                                                     String?                                          @db.VarChar(50)
  cod_escola                                               String?                                          @db.VarChar(50)
  dep_administrativo                                       String?                                          @db.VarChar(50)
  status_funcionamento                                     String?                                          @db.VarChar(50)
  ato_criacao                                              String?                                          @db.VarChar(50)
  parecer_cee                                              String?                                          @db.VarChar(50)
  parecer_cme                                              String?                                          @db.VarChar(50)
  reconhecimento                                           String?                                          @db.VarChar(100)
  data_inicio_funcionamento                                DateTime?                                        @db.Date
  foto                                                     String?                                          @db.VarChar(60)
  foto_url                                                 String?                                          @db.VarChar(255)
  zona_id                                                  Int?
  polo_id                                                  Int?
  status_censo                                             String?                                          @db.VarChar(50)
  quant_aluno                                              Int?
  quant_prof                                               Int?
  quant_aux                                                Int?
  quant_monitores                                          Int?
  quant_tradut_libras                                      Int?
  telefone                                                 String?                                          @db.VarChar(25)
  email                                                    String?                                          @db.VarChar(50)
  latitude                                                 String?                                          @db.VarChar(100)
  longitude                                                String?                                          @db.VarChar(100)
  cod_estado                                               Int?
  cod_cidade                                               Int?
  ddd                                                      String?                                          @db.Char(5)
  created                                                  DateTime?                                        @db.DateTime(0)
  status                                                   String?                                          @db.Char(1)
  situacao                                                 escola_situacao?                                 @default(ATIVO)
  distrito                                                 String?                                          @db.VarChar(40)
  cidade_id                                                Int?
  estado_id                                                Int?
  distrito_id                                              Int?
  assentamento                                             String?                                          @db.Char(1)
  telefone_publico1                                        String?                                          @db.Char(15)
  telefone_publico2                                        String?                                          @db.Char(15)
  fax                                                      String?                                          @db.Char(15)
  orgao_regional_id                                        String?                                          @db.VarChar(5)
  diretor_nome                                             String?                                          @db.VarChar(80)
  diretor_cpf                                              String?                                          @db.VarChar(30)
  diretor_cargo                                            String?                                          @db.VarChar(40)
  diretor_email                                            String?                                          @db.VarChar(40)
  escola_principal_id                                      Int?
  senha_diario_classe                                      String?                                          @db.VarChar(50)
  unidade_vinculada_educacaobasica_ensinosuperior          String?
  inep_escola_sede                                         String?                                          @db.VarChar(50)
  codigo_ies                                               String?                                          @db.VarChar(50)
  remember_token                                           String?                                          @db.VarChar(255)
  created_at                                               DateTime?                                        @db.DateTime(0)
  updated_at                                               DateTime                                         @default(now()) @db.Timestamp(0)
  deleted_at                                               DateTime?                                        @db.DateTime(0)
  is_teste                                                 Boolean?                                         @default(false)
  acervo                                                   acervo[]
  acesso_servidor_escola                                   acesso_servidor_escola[]
  acordo_nea                                               acordo_nea[]
  almoxarifado_entrada                                     almoxarifado_entrada[]
  almoxarifado_estoque                                     almoxarifado_estoque[]
  almoxarifado_pedido_escola                               almoxarifado_pedido_escola[]
  almoxarifado_saida                                       almoxarifado_saida[]
  aluno                                                    aluno[]
  aluno_comunicado                                         aluno_comunicado[]
  aluno_escola                                             aluno_escola[]
  aluno_planejamento_infantil_AEE                          aluno_planejamento_infantil_AEE[]
  ano_escola                                               ano_escola[]
  ano_letivo                                               ano_letivo[]
  ata_escola                                               ata_escola[]
  ata_reuniao                                              ata_reuniao[]
  atualizar_documentos_escola                              atualizar_documentos_escola[]
  avaliacao                                                avaliacao[]
  avaliacao_lancamento_tipo_desativado                     avaliacao_lancamento_tipo_desativado[]
  biblioteca_descricao_fisica                              biblioteca_descricao_fisica[]
  biblioteca_estrutura                                     biblioteca_estrutura[]
  biblioteca_exemplar                                      biblioteca_exemplar[]
  caixa_escolar_escola                                     caixa_escolar_escola[]
  calendario_categoria                                     calendario_categoria[]
  calendario_escolar                                       calendario_escolar[]
  calendario_escolar_evento                                calendario_escolar_evento[]
  cardapio                                                 cardapio[]
  cargos_escola                                            cargos_escola[]
  centro_custo                                             centro_custo[]
  cfe_anoletivo                                            cfe_anoletivo[]
  ciclo_escola                                             ciclo_escola[]
  comunicados                                              comunicados[]
  conceito                                                 conceito[]
  conceito_grupo                                           conceito_grupo[]
  configuracao_escola                                      configuracao_escola[]
  conselho_escolar                                         conselho_escolar[]
  contas_bancaria                                          contas_bancaria[]
  coordenador_escolas                                      coordenador_escolas[]
  cr                                                       cr[]
  declaracao_gerenciavel                                   declaracao_gerenciavel[]
  dependencia_fisica_escola                                dependencia_fisica_escola[]
  desistencia_aluno                                        desistencia_aluno[]
  desligamento_aluno                                       desligamento_aluno[]
  despesa                                                  despesa[]
  diario_escola                                            diario_escola[]
  disciplinas_escola                                       disciplinas_escola[]
  dispensa_disciplina                                      dispensa_disciplina[]
  disponibilidade_servidor                                 disponibilidade_servidor[]
  distribuicao_ponto                                       distribuicao_ponto[]
  distritos_escola                                         distritos_escola[]
  emprestimo                                               emprestimo[]
  entrada                                                  entrada[]
  servidor                                                 servidor?                                        @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_escola_servidor")
  polo                                                     polo?                                            @relation(fields: [polo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_polo")
  zona                                                     zona?                                            @relation(fields: [zona_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_zona")
  escola_fatura                                            escola_fatura[]
  escola_quadro_vagas                                      escola_quadro_vagas[]
  escola_situacao_ano                                      escola_situacao_ano[]
  escola_turno                                             escola_turno[]
  estoque                                                  estoque[]
  estrutura_fisica                                         estrutura_fisica[]
  evento_escolar                                           evento_escolar[]
  exemplar                                                 exemplar[]
  finan_lancamento                                         finan_lancamento[]
  funcoes_escola                                           funcoes_escola[]
  habilitacoes_escola                                      habilitacoes_escola[]
  historico_ano_historico_ano_escola_cursou_idToescola     historico_ano[]                                  @relation("historico_ano_escola_cursou_idToescola")
  historico_ano_historico_ano_escola_preencheu_idToescola  historico_ano[]                                  @relation("historico_ano_escola_preencheu_idToescola")
  horario                                                  horario[]
  hotsite_noticia                                          hotsite_noticia[]
  layout_estoque_palete                                    layout_estoque_palete[]
  merenda_distribuicao_escola                              merenda_distribuicao_escola[]
  merenda_distribuicao_preparo_quantidade_escola           merenda_distribuicao_preparo_quantidade_escola[]
  modalidade_ensino_escola                                 modalidade_ensino_escola[]
  motivo_falta_aluno                                       motivo_falta_aluno[]
  nivel_ensino_escola                                      nivel_ensino_escola[]
  ocorrencia                                               ocorrencia[]
  ocorrencia_aluno                                         ocorrencia_aluno[]
  ocorrencia_aluno_historico                               ocorrencia_aluno_historico[]
  oficio                                                   oficio[]
  parametro                                                parametro[]
  parametro_calculo                                        parametro_calculo[]
  pc_ata_reuniao                                           pc_ata_reuniao[]
  pege_vacinacao_vacinalocal                               pege_vacinacao_vacinalocal?
  periodo_lancamento                                       periodo_lancamento[]
  ponto_de_parada                                          ponto_de_parada[]
  pp_justificar_falta                                      pp_justificar_falta[]
  pp_naolocalizado_pp_naolocalizado_escola_idToescola      pp_naolocalizado[]                               @relation("pp_naolocalizado_escola_idToescola")
  pp_naolocalizado_pp_naolocalizado_nova_escola_idToescola pp_naolocalizado[]                               @relation("pp_naolocalizado_nova_escola_idToescola")
  pp_prazo                                                 pp_prazo[]
  programa_financiamento_escola                            programa_financiamento_escola[]
  programas_financiamento                                  programas_financiamento[]
  programas_sociais_escola                                 programas_sociais_escola[]
  projeto_didatico                                         projeto_didatico[]
  quadro_vagas_escola                                      quadro_vagas_escola[]
  recurso_entrada                                          recurso_entrada[]
  refeicao                                                 refeicao[]
  refeicao_distribuicao_escola                             refeicao_distribuicao_escola[]
  remanejamento                                            remanejamento[]
  resposta_conferencia_escola                              resposta_conferencia_escola[]
  sala                                                     sala[]
  servidor_atividade_trabalho                              servidor_atividade_trabalho[]
  servidor_cargo_escola                                    servidor_cargo_escola[]
  servidor_desvio_funcao                                   servidor_desvio_funcao[]
  servidor_escola                                          servidor_escola[]
  servidor_ferias                                          servidor_ferias[]
  servidor_funcao_escola                                   servidor_funcao_escola[]
  tipos_bem_escola                                         tipos_bem_escola[]
  tipos_dependencia_escola                                 tipos_dependencia_escola[]
  tipos_despesa_escola                                     tipos_despesa_escola[]
  tipos_ensino_escola                                      tipos_ensino_escola[]
  tipos_frequencia_escola                                  tipos_frequencia_escola[]
  tipos_material_escola                                    tipos_material_escola[]
  turma                                                    turma[]
  turma_conferencia                                        turma_conferencia[]
  turma_planejamento                                       turma_planejamento[]
  turma_planejamento_infantil                              turma_planejamento_infantil[]
  turma_planejamento_objetivo                              turma_planejamento_objetivo[]
  turno                                                    turno[]
  vale_escola                                              vale_escola[]
  verba                                                    verba[]
  verba_servidor                                           verba_servidor[]
  verbas_cargo                                             verbas_cargo[]
  visita_planejamento                                      visita_planejamento[]

  @@index([servidor_id], map: "FK_escola_servidor")
  @@index([zona_id], map: "fk_zona")
  @@index([polo_id], map: "polo_id")
}

model escola_fatura {
  id                       Int                        @id @default(autoincrement())
  escola_id                Int?
  tipo_fatura_id           Int?
  numero_conta             String                     @db.Char(15)
  data_leitura_atual       DateTime?                  @db.Date
  leitura_atual            Int?
  data_emissao             DateTime                   @db.Date
  mes_ano_fatura           String                     @db.Char(7)
  dias_consumo             Int                        @db.UnsignedTinyInt
  consumo_faturado         Decimal?                   @db.Decimal(10, 2)
  data_vencimento          DateTime                   @db.Date
  valor                    Decimal                    @db.Decimal(10, 2)
  data_recebimento_conta   DateTime                   @db.Date
  observacao               String?                    @db.TinyText
  created                  DateTime?                  @db.DateTime(0)
  status                   Boolean                    @default(true)
  conta_bancaria_id        Int?
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  contas_bancaria          contas_bancaria?           @relation(fields: [conta_bancaria_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "escola_fatura_FK_contas_bancaria")
  escola                   escola?                    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "escola_fatura_fk_escola")
  tipo_fatura              tipo_fatura?               @relation(fields: [tipo_fatura_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "escola_fatura_fk_tipo_fatura")
  finan_lancamento_parcela finan_lancamento_parcela[]

  @@index([conta_bancaria_id], map: "escola_fatura_FK_contas_bancaria")
  @@index([escola_id], map: "escola_fatura_fk_escola")
  @@index([tipo_fatura_id], map: "escola_fatura_fk_tipo_fatura")
}

model escola_quadro_vagas {
  id                                   Int                                    @id @default(autoincrement()) @db.UnsignedInt
  escola_id                            Int
  turno_geral_id                       Int?
  quantidade_vagas                     Int                                    @default(0) @db.UnsignedSmallInt
  status                               Int                                    @default(1) @db.UnsignedTinyInt
  ano_letivo                           String?                                @db.VarChar(10)
  created_at                           DateTime?                              @db.DateTime(0)
  updated_at                           DateTime?                              @default(now()) @db.Timestamp(0)
  escola                               escola                                 @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "escola_quadro_vagas_FK_escola")
  escola_quadro_vagas_ciclo_disciplina escola_quadro_vagas_ciclo_disciplina[]

  @@index([escola_id], map: "escola_quadro_vagas_FK_escola")
}

model escola_quadro_vagas_ciclo_disciplina {
  id                     Int                 @id @default(autoincrement())
  escola_quadro_vagas_id Int                 @db.UnsignedInt
  ciclo_id               Int?
  disciplinas_mec_id     Int?
  ciclo                  ciclo?              @relation(fields: [ciclo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "escola_quadro_vagas_ciclo_disciplina_FK_ciclo")
  disciplinas_mec        disciplinas_mec?    @relation(fields: [disciplinas_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "escola_quadro_vagas_ciclo_disciplina_FK_disciplinas_mec")
  escola_quadro_vagas    escola_quadro_vagas @relation(fields: [escola_quadro_vagas_id], references: [id], onUpdate: Restrict, map: "escola_quadro_vagas_ciclo_disciplina_FK_escola_quadro_vagas")

  @@index([ciclo_id], map: "escola_quadro_vagas_ciclo_disciplina_FK_ciclo")
  @@index([disciplinas_mec_id], map: "escola_quadro_vagas_ciclo_disciplina_FK_disciplinas_mec")
  @@index([escola_quadro_vagas_id], map: "escola_quadro_vagas_ciclo_disciplina_FK_escola_quadro_vagas")
}

model escola_situacao_ano {
  id                     Int                     @id @default(autoincrement()) @db.UnsignedInt
  escola_id              Int?
  ano_letivo_id          Int?
  situacao_escola_id     Int?
  created_at             DateTime?               @db.DateTime(0)
  updated_at             DateTime                @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?               @db.DateTime(0)
  ano_letivo             ano_letivo?             @relation(fields: [ano_letivo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK__ano_letivo")
  escola                 escola?                 @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK__escola")
  situacao_funcionamento situacao_funcionamento? @relation(fields: [situacao_escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK__situacao_funcionamento")

  @@index([ano_letivo_id], map: "FK__ano_letivo")
  @@index([escola_id], map: "FK__escola")
  @@index([situacao_escola_id], map: "FK__situacao_funcionamento")
}

model escola_turno {
  id         Int       @id @default(autoincrement())
  escola_id  Int
  turno_id   Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  escola     escola    @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "FK1_escola_turno_escola_id")
  turno      turno     @relation(fields: [turno_id], references: [id], onUpdate: Restrict, map: "FK2_escola_turno_turno_id")

  @@index([escola_id], map: "FK1_escola_turno_escola_id")
  @@index([turno_id], map: "FK2_escola_turno_turno_id")
}

model escolaridade {
  id         Int        @id @default(autoincrement())
  nome       String?    @db.VarChar(50)
  status     Boolean?
  created_at DateTime?  @db.DateTime(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.DateTime(0)
  formacao   formacao[]
}

model estado {
  id                    Int                     @id
  nome                  String?                 @db.VarChar(50)
  sigla                 String?                 @db.Char(4)
  codigo                String?                 @db.Char(2)
  pais_id               String?                 @db.Char(4)
  status                String?                 @db.Char(1)
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  distrito              distrito[]
  editora               editora[]
  fornecedor            fornecedor[]
  fornecedor_financeiro fornecedor_financeiro[]
  orgao_regional_ensino orgao_regional_ensino[]
  pessoa                pessoa[]
  pessoas               pessoas[]
  secretaria_educacao   secretaria_educacao[]
}

model estoque {
  id                       Int                    @id @default(autoincrement())
  produto_id               Int
  escola_id                Int?
  estoque_min              Int?
  estoque_max              Int?
  estoque_inicial          Int?
  qtd_estoque              Int?
  valor_unitario           Decimal?               @db.Decimal(10, 3)
  valor_unitario_medio     Decimal?               @db.Decimal(10, 3)
  created                  DateTime?              @db.DateTime(0)
  status                   String?                @db.Char(1)
  layout_estoque_palete_id Int?
  created_at               DateTime?              @db.DateTime(0)
  updated_at               DateTime               @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?              @db.DateTime(0)
  entrada_produto          entrada_produto[]
  escola                   escola?                @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_estoque_escola")
  layout_estoque_palete    layout_estoque_palete? @relation(fields: [layout_estoque_palete_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_estoque_layoutpalete")
  produto                  produto                @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_estoque_produto1")
  saida                    saida[]
  saida_produto            saida_produto[]

  @@index([escola_id], map: "fk_estoque_escola1")
  @@index([layout_estoque_palete_id], map: "fk_estoque_layoutpalete")
  @@index([produto_id], map: "fk_estoque_produto1")
}

model estrutura_fisica {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  escola_id  Int?
  nome       String?   @db.VarChar(50)
  descricao  String?   @db.TinyText
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  escola     escola?   @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_estruturafisica_escola")

  @@index([escola_id], map: "fk_estruturafisica_escola")
}

model evento_escolar {
  id                 Int            @id @default(autoincrement())
  escola_id          Int
  titulo             String?        @db.VarChar(150)
  descricao          String?        @db.VarChar(300)
  data_evento_inicio DateTime?      @db.DateTime(0)
  data_evento_fim    DateTime?      @db.DateTime(0)
  dia_todo           Boolean?
  created_at         DateTime?      @default(now()) @db.DateTime(0)
  updated_at         DateTime?      @default(now()) @db.DateTime(0)
  deleted_at         DateTime?      @db.DateTime(0)
  escola             escola         @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "evento_escolar_ibfk_1")
  evento_fotos       evento_fotos[]

  @@index([escola_id], map: "escola_id")
}

model evento_fotos {
  id                 Int            @id @default(autoincrement())
  evento_escolar_id  Int
  foto               String         @db.VarChar(225)
  nome_foto_original String?        @db.VarChar(200)
  created_at         DateTime?      @default(now()) @db.DateTime(0)
  updated_at         DateTime?      @default(now()) @db.DateTime(0)
  deleted_at         DateTime?      @db.DateTime(0)
  evento_escolar     evento_escolar @relation(fields: [evento_escolar_id], references: [id], onUpdate: Restrict, map: "evento_fotos_ibfk_1")

  @@index([evento_escolar_id], map: "evento_escolar_id")
}

model exemplar {
  id         Int          @id @unique(map: "id_UNIQUE") @default(autoincrement())
  created    DateTime?    @db.DateTime(0)
  status     String?      @db.VarChar(1)
  escola_id  Int
  acervo_id  Int
  created_at DateTime?    @db.DateTime(0)
  updated_at DateTime     @default(now()) @db.Timestamp(0)
  deleted_at DateTime?    @db.DateTime(0)
  emprestimo emprestimo[]
  acervo     acervo       @relation(fields: [acervo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_exemplar_acervo1")
  escola     escola       @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_exemplar_escola1")

  @@index([acervo_id], map: "fk_exemplar_acervo1")
  @@index([escola_id], map: "fk_exemplar_escola1")
}

model exportacao_educacenso {
  id                   Int       @id @default(autoincrement())
  ano                  String?   @db.Char(5)
  escola_id            Int?
  data_solicitacao     DateTime? @db.DateTime(0)
  data_entrega_arquivo DateTime? @db.DateTime(0)
  arquivo              String?   @db.VarChar(255)
  arquivo_erros        String?   @db.VarChar(255)
  situacao             String?
  created              DateTime? @db.DateTime(0)
  status               String?   @db.Char(1)
  created_at           DateTime? @db.DateTime(0)
  updated_at           DateTime  @default(now()) @db.Timestamp(0)
  deleted_at           DateTime? @db.DateTime(0)
}

model exportacao_projeto_presenca {
  id         Int       @id @default(autoincrement())
  escola_id  Int?
  bimestre   String?
  situacao   String?
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model fale_conosco {
  id                   Int                  @id @default(autoincrement())
  nome                 String?              @db.VarChar(50)
  email                String               @db.VarChar(50)
  assunto_id           Int
  mensagem             String               @db.Text
  created_at           DateTime?            @db.DateTime(0)
  updated_at           DateTime             @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?            @db.DateTime(0)
  assunto_fale_conosco assunto_fale_conosco @relation(fields: [assunto_id], references: [id], onUpdate: Restrict, map: "fale_conosco_FK_assunto_fale_conosco")

  @@index([assunto_id], map: "fale_conosco_FK_assunto_fale_conosco")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model falta_aluno {
  id                      Int                                  @id @default(autoincrement())
  servidor_id             Int?
  usuario_id              Int?
  aula_id                 Int
  matricula_id            Int
  falta_aluno_afastamento falta_aluno_falta_aluno_afastamento? @default(N)
  uid                     String?                              @db.VarChar(50)
  aula                    Int?
  updated_at              DateTime?                            @db.DateTime(0)
  created_at              DateTime?                            @db.DateTime(0)
  cadastrado_por          falta_aluno_cadastrado_por?
  deleted_at              DateTime?                            @db.DateTime(0)
  matricula               matricula                            @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_falta_aluno_matricula1")
  motivo_falta_aluno      motivo_falta_aluno[]

  @@index([aula_id], map: "fk_falta_aluno_aula1")
  @@index([matricula_id], map: "fk_falta_aluno_matricula1")
}

model falta_aluno_admitido {
  id                  Int              @id @default(autoincrement())
  matricula_id        Int
  turma_disciplina_id Int
  disciplina_mec_id   Int?
  qtd_falta           Int?
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  disciplinas_mec     disciplinas_mec? @relation(fields: [disciplina_mec_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "falta_aluno_admitido_fk_disciplinas_mec")
  matricula           matricula        @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "falta_aluno_admitido_fk_matricula")
  turma_disciplina    turma_disciplina @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "falta_aluno_admitido_fk_turma_disciplina")

  @@index([disciplina_mec_id], map: "falta_aluno_admitido_fk_disciplinas_mec")
  @@index([matricula_id], map: "fk_falta_aluno_mes_matricula1")
  @@index([turma_disciplina_id], map: "fk_falta_aluno_mes_turma_disciplina1")
}

model falta_mes_aluno {
  id                  Int              @id @default(autoincrement())
  matricula_id        Int
  turma_disciplina_id Int
  referencia_mes      Int?             @db.TinyInt
  qtd_falta           Int?
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  matricula           matricula        @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_falta_aluno_mes_matricula1")
  turma_disciplina    turma_disciplina @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_falta_aluno_mes_turma_disciplina1")

  @@index([matricula_id], map: "fk_falta_aluno_mes_matricula1")
  @@index([turma_disciplina_id], map: "fk_falta_aluno_mes_turma_disciplina1")
}

model ficha_acompanhamento {
  id                            Int                             @id @default(autoincrement())
  usuario_id                    Int?                            @db.UnsignedInt
  servidor_id                   Int
  matricula_id                  Int
  bimestre                      Int
  created_at                    DateTime?                       @default(now()) @db.DateTime(0)
  updated_at                    DateTime                        @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime?                       @db.DateTime(0)
  matricula                     matricula                       @relation(fields: [matricula_id], references: [id], onUpdate: Restrict, map: "fa_matricula")
  servidor                      servidor                        @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "fa_servidor")
  usuarios                      usuarios?                       @relation(fields: [usuario_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fa_usuario")
  ficha_acompanhamento_resposta ficha_acompanhamento_resposta[]

  @@unique([matricula_id, bimestre], map: "uc_ficha")
  @@index([servidor_id], map: "fa_servidor")
  @@index([usuario_id], map: "fa_usuario")
}

model ficha_acompanhamento_resposta {
  id                      Int                   @id @default(autoincrement())
  ficha_acompanhamento_id Int?
  ficha_conhecimento_id   Int?
  created_at              DateTime?             @default(now()) @db.DateTime(0)
  updated_at              DateTime              @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?             @db.DateTime(0)
  ficha_acompanhamento    ficha_acompanhamento? @relation(fields: [ficha_acompanhamento_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "far_fa_FK")
  ficha_conhecimento      ficha_conhecimento?   @relation(fields: [ficha_conhecimento_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "far_fc_FK")

  @@index([ficha_acompanhamento_id], map: "far_fa_FK")
  @@index([ficha_conhecimento_id], map: "far_fc_FK")
}

model ficha_conhecimento {
  id                            Int                             @id @default(autoincrement())
  grupo_conhecimento_id         Int?
  sigla                         String                          @db.VarChar(3)
  descricao                     String                          @db.VarChar(100)
  created_at                    DateTime?                       @default(now()) @db.DateTime(0)
  updated_at                    DateTime                        @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime?                       @db.DateTime(0)
  ficha_acompanhamento_resposta ficha_acompanhamento_resposta[]
  ficha_grupo_conhecimento      ficha_grupo_conhecimento?       @relation(fields: [grupo_conhecimento_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fc_fcg_FK")

  @@index([grupo_conhecimento_id], map: "fc_fcg_FK")
}

model ficha_grupo_conhecimento {
  id                 Int                  @id @default(autoincrement())
  nome               String               @db.VarChar(50)
  created_at         DateTime?            @default(now()) @db.DateTime(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?            @db.DateTime(0)
  ficha_conhecimento ficha_conhecimento[]
}

model finan_lancamento {
  id                       Int                        @id @default(autoincrement())
  escola_id                Int?
  tipo_repasse             String?
  tipo                     String?
  centro_custo_id          Int?
  periodicidade            String?
  quantidade_parcela       Int?                       @db.UnsignedTinyInt
  created                  DateTime?                  @db.DateTime(0)
  status                   Boolean?
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  centro_custo             centro_custo?              @relation(fields: [centro_custo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "finan_lancamento_ibfk_1")
  escola                   escola?                    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "financeiro_lancamento_FK_escola")
  finan_lancamento_parcela finan_lancamento_parcela[]

  @@index([centro_custo_id], map: "centro_custo_id")
  @@index([escola_id], map: "financeiro_lancamento_FK_escola")
  @@index([tipo], map: "tipo")
  @@index([tipo_repasse], map: "tipo_repasse")
}

model finan_lancamento_parcela {
  id                   Int               @id @default(autoincrement())
  finan_lancamento_id  Int?
  conta_id             Int?
  recurso_id           Int?
  situacao             String?
  parcela              Int?              @db.UnsignedTinyInt
  descricao            String?           @db.TinyText
  observacao           String?           @db.Text
  plano_periodo        Int?              @db.TinyInt
  plano_tipo           String?
  agendamento_data     DateTime?         @db.Date
  agendamento_valor    Decimal?          @db.Decimal(10, 2)
  escola_fatura_id     Int?
  agendamento_forma    String?
  cheque_numero        String?           @db.VarChar(20)
  cheque_fornecedor_id Int?
  cheque_data          DateTime?         @db.Date
  pagamento_data       DateTime?         @db.Date
  pagamento_valor      Decimal?          @db.Decimal(10, 2)
  pagamento_forma      String?
  plano_conta_id       Int?
  created              DateTime?         @db.DateTime(0)
  status               Boolean?
  created_at           DateTime?         @db.DateTime(0)
  updated_at           DateTime          @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?         @db.DateTime(0)
  fornecedor           fornecedor?       @relation(fields: [cheque_fornecedor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fian_lancamento_parcela_FK_fornecedor")
  contas_bancaria      contas_bancaria?  @relation(fields: [conta_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "finan_lancamento_parcela_FK_conta_bancaria")
  escola_fatura        escola_fatura?    @relation(fields: [escola_fatura_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "finan_lancamento_parcela_FK_escola_fatura")
  finan_lancamento     finan_lancamento? @relation(fields: [finan_lancamento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "finan_lancamento_parcela_FK_finan_lancamento")
  plano_conta          plano_conta?      @relation(fields: [plano_conta_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "finan_lancamento_parcela_FK_plano_conta")
  recurso              recurso?          @relation(fields: [recurso_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "finan_lancamento_parcela_FK_recurso")

  @@index([agendamento_forma], map: "agendamento_forma")
  @@index([cheque_fornecedor_id], map: "fian_lancamento_parcela_FK_fornecedor")
  @@index([conta_id], map: "finan_lancamento_parcela_FK_conta_bancaria")
  @@index([escola_fatura_id], map: "finan_lancamento_parcela_FK_escola_fatura")
  @@index([finan_lancamento_id], map: "finan_lancamento_parcela_FK_finan_lancamento")
  @@index([plano_conta_id], map: "finan_lancamento_parcela_FK_plano_conta")
  @@index([recurso_id], map: "finan_lancamento_parcela_FK_recurso")
  @@index([pagamento_forma], map: "pagamento_forma")
}

model forma_organizacao_ensino {
  id                             Int                              @id
  descricao                      String?                          @db.VarChar(255)
  status                         Int                              @db.TinyInt
  created_at                     DateTime?                        @db.DateTime(0)
  updated_at                     DateTime                         @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                        @db.DateTime(0)
  turma_forma_organizacao_ensino turma_forma_organizacao_ensino[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model formacao {
  id                             Int                 @id @default(autoincrement()) @db.UnsignedInt
  servidor_id                    Int                 @db.UnsignedInt
  instituicao_ensino_superior_id Int?                @db.UnsignedInt
  instituicao_ensino             String?             @db.VarChar(80)
  escolaridade_id                Int?
  nivel                          String?             @db.VarChar(50)
  curso_id                       String?             @db.VarChar(15)
  carga_horaria                  String?             @db.VarChar(10)
  informacao_adicional           String?             @db.VarChar(200)
  curso_pos                      String?             @db.VarChar(50)
  area_pos_graduacao_id          Int?
  status                         Boolean?
  complemento_pedagogico         String?             @db.Char(1)
  inicio                         Int?                @db.SmallInt
  conclusao                      Int?                @db.SmallInt
  created_at                     DateTime?           @db.DateTime(0)
  updated_at                     DateTime            @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?           @db.DateTime(0)
  area_pos_graduacao             area_pos_graduacao? @relation(fields: [area_pos_graduacao_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "area_pos_graduacao_id")
  escolaridade                   escolaridade?       @relation(fields: [escolaridade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "formacao_fk_escolaridade")

  @@index([area_pos_graduacao_id], map: "area_pos_graduacao_id")
  @@index([escolaridade_id], map: "escolaridade_id")
  @@index([servidor_id], map: "servidor_id")
}

model formulario {
  id                                Int                                 @id @default(autoincrement()) @db.UnsignedMediumInt
  titulo                            String?                             @db.VarChar(255)
  descricao                         String?                             @db.Text
  rodape                            String?                             @db.Text
  tipo_uso                          String?
  tipo_pesquisa                     String?                             @db.VarChar(30)
  created                           DateTime?                           @db.Date
  created_at                        DateTime?                           @db.DateTime(0)
  updated_at                        DateTime                            @default(now()) @db.Timestamp(0)
  deleted_at                        DateTime?                           @db.DateTime(0)
  data_validade                     DateTime?                           @db.Date
  configuracao_academica_formulario configuracao_academica_formulario[]
  formulario_turma_ano              formulario_turma_ano[]
  simulado                          simulado[]
}

model formulario_habilidades {
  id           Int        @id @default(autoincrement()) @db.UnsignedSmallInt
  habilidade   String     @db.VarChar(255)
  prova_brasil Boolean?
  created_at   DateTime?  @db.DateTime(0)
  updated_at   DateTime   @default(now()) @db.Timestamp(0)
  deleted_at   DateTime?  @db.DateTime(0)
  pergunta     pergunta[]
}

model formulario_pergunta {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  formulario_id Int       @db.UnsignedSmallInt
  pergunta_id   Int       @db.UnsignedMediumInt
  data          DateTime? @db.Date
  assinatura    Int?      @db.UnsignedTinyInt
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime  @default(now()) @db.Timestamp(0)
  deleted_at    DateTime? @db.DateTime(0)
}

model formulario_referencia {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  nome_tabela   String    @db.VarChar(25)
  ano_letivo    String    @db.VarChar(25)
  id_objeto     Int?      @db.UnsignedInt
  id_formulario Int       @db.UnsignedSmallInt
  created       DateTime? @db.Date
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime  @default(now()) @db.Timestamp(0)
  deleted_at    DateTime? @db.DateTime(0)
}

model formulario_turma_ano {
  id            Int        @id @default(autoincrement()) @db.UnsignedMediumInt
  formulario_id Int        @db.UnsignedMediumInt
  turma_id      Int
  ano_letivo_id Int
  created       DateTime?  @db.Date
  status        Int?       @default(1) @db.UnsignedTinyInt
  created_at    DateTime?  @db.DateTime(0)
  updated_at    DateTime   @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?  @db.DateTime(0)
  ano_letivo    ano_letivo @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "formulario_ano_turma__FK1__ano_letivo")
  formulario    formulario @relation(fields: [formulario_id], references: [id], onDelete: Cascade, map: "formulario_ano_turma__FK1__formulario")
  turma         turma      @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "formulario_ano_turma__FK1__turma")

  @@index([ano_letivo_id], map: "formulario_ano_turma__FK1__ano_letivo")
  @@index([formulario_id], map: "formulario_ano_turma__FK1__formulario")
  @@index([turma_id], map: "formulario_ano_turma__FK1__turma")
}

model fornecedor {
  id                       Int                        @id @default(autoincrement())
  estado_id                Int?
  cidade_id                Int?
  nome                     String?                    @db.VarChar(80)
  endereco                 String?                    @db.VarChar(80)
  bairro                   String?                    @db.VarChar(50)
  cep                      String?                    @db.VarChar(20)
  complemento              String?                    @db.VarChar(50)
  numero                   String?                    @db.Char(10)
  telefone1                String?                    @db.VarChar(20)
  telefone2                String?                    @db.VarChar(20)
  pessoa_contato           String?                    @db.VarChar(50)
  rg_pessoa_contato        Int?
  cnpj_cpf_numero          String?                    @db.VarChar(25)
  tipo_documento           String?
  razao_social             String?                    @db.VarChar(50)
  insc_estadual            String?                    @db.VarChar(20)
  atuacao                  String?                    @db.VarChar(30)
  email                    String?                    @db.VarChar(30)
  site                     String?                    @db.VarChar(50)
  created                  DateTime?                  @db.DateTime(0)
  status                   String?                    @db.Char(1)
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  almoxarifado_entrada     almoxarifado_entrada[]
  entrada                  entrada[]
  finan_lancamento_parcela finan_lancamento_parcela[]
  cidade                   cidade?                    @relation(fields: [cidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fornecedor_cidade")
  estado                   estado?                    @relation(fields: [estado_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_fornecedor_estado")

  @@index([cidade_id], map: "fk_fornecedor_cidade")
  @@index([estado_id], map: "fk_fornecedor_estado")
}

model fornecedor_financeiro {
  id                Int       @id @default(autoincrement())
  estado_id         Int?
  cidade_id         Int?
  nome              String?   @db.VarChar(80)
  endereco          String?   @db.VarChar(80)
  bairro            String?   @db.VarChar(50)
  cep               String?   @db.VarChar(20)
  complemento       String?   @db.VarChar(50)
  numero            String?   @db.Char(10)
  telefone1         String?   @db.VarChar(20)
  telefone2         String?   @db.VarChar(20)
  pessoa_contato    String?   @db.VarChar(50)
  rg_pessoa_contato Int?
  cnpj_cpf_numero   String?   @db.VarChar(25)
  tipo_documento    String?
  razao_social      String?   @db.VarChar(50)
  insc_estadual     String?   @db.VarChar(20)
  atuacao           String?   @db.VarChar(30)
  email             String?   @db.VarChar(30)
  site              String?   @db.VarChar(50)
  created           DateTime? @db.DateTime(0)
  status            String?   @db.Char(1)
  created_at        DateTime? @db.DateTime(0)
  updated_at        DateTime  @default(now()) @db.Timestamp(0)
  deleted_at        DateTime? @db.DateTime(0)
  cidade            cidade?   @relation(fields: [cidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fornecedor_financeiro_ibfk_1")
  estado            estado?   @relation(fields: [estado_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fornecedor_financeiro_ibfk_2")

  @@index([cidade_id], map: "fk_fornecedor_cidade")
  @@index([estado_id], map: "fk_fornecedor_estado")
}

model funcao {
  id         Int       @id @db.UnsignedInt
  nome       String?   @db.VarChar(50)
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model funcoes_escola {
  id             Int         @id @default(autoincrement())
  escola_id      Int
  funcoes_mec_id Int
  created_at     DateTime?   @db.DateTime(0)
  updated_at     DateTime    @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?   @db.DateTime(0)
  escola         escola      @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_funcoes_escola_escola1")
  funcoes_mec    funcoes_mec @relation(fields: [funcoes_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_funcoes_escola_funcoes_mec1")

  @@index([escola_id], map: "fk_funcoes_escola_escola1")
  @@index([funcoes_mec_id], map: "fk_funcoes_escola_funcoes_mec1")
}

model funcoes_mec {
  id                                                                                     Int                             @id @default(autoincrement())
  codigo                                                                                 String?                         @db.Char(20)
  nome                                                                                   String?                         @db.VarChar(100)
  individual_escola                                                                      String?                         @db.Char(1)
  created                                                                                DateTime?                       @db.DateTime(0)
  status                                                                                 String?                         @db.Char(1)
  created_at                                                                             DateTime?                       @db.DateTime(0)
  updated_at                                                                             DateTime                        @default(now()) @db.Timestamp(0)
  deleted_at                                                                             DateTime?                       @db.DateTime(0)
  cod_censo                                                                              Int?                            @db.TinyInt
  funcoes_escola                                                                         funcoes_escola[]
  mudanca_nivel_mudanca_nivel_funcao_mec_anterior_idTofuncoes_mec                        mudanca_nivel[]                 @relation("mudanca_nivel_funcao_mec_anterior_idTofuncoes_mec")
  mudanca_nivel_mudanca_nivel_funcao_mec_idTofuncoes_mec                                 mudanca_nivel[]                 @relation("mudanca_nivel_funcao_mec_idTofuncoes_mec")
  parametro_qtd_servidor_escola                                                          parametro_qtd_servidor_escola[]
  remanejamento                                                                          remanejamento[]
  servidor_desvio_funcao_servidor_desvio_funcao_funcao_servidor_desvio_idTofuncoes_mec   servidor_desvio_funcao[]        @relation("servidor_desvio_funcao_funcao_servidor_desvio_idTofuncoes_mec")
  servidor_desvio_funcao_servidor_desvio_funcao_funcao_servidor_original_idTofuncoes_mec servidor_desvio_funcao[]        @relation("servidor_desvio_funcao_funcao_servidor_original_idTofuncoes_mec")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model gabarito {
  id                  Int                      @id @default(autoincrement())
  servidor_id         Int?
  usuario_id          Int?                     @db.UnsignedInt
  turma_disciplina_id Int?
  nota_nome_id        Int?
  resposta            String?                  @db.VarChar(255)
  cadastrado_por      gabarito_cadastrado_por?
  created_at          DateTime?                @db.DateTime(0)
  updated_at          DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?                @db.DateTime(0)
  turma_disciplina    turma_disciplina?        @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "gabarito_ibfk_2")
  servidor            servidor?                @relation(fields: [servidor_id], references: [id], onUpdate: SetNull, map: "gabarito_ibfk_4")
  nota_nome           nota_nome?               @relation(fields: [nota_nome_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "gabarito_ibfk_5")
  gabarito_resposta   gabarito_resposta[]

  @@index([turma_disciplina_id], map: "fk_nota_turma_disciplina1")
  @@index([nota_nome_id], map: "gabarito_ibfk_5")
  @@index([servidor_id], map: "nota_fk_servidor")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model gabarito_resposta {
  id             Int                               @id @default(autoincrement())
  gabarito_id    Int?
  servidor_id    Int?
  usuario_id     Int?                              @db.UnsignedInt
  matricula_id   Int?
  resposta       String?                           @db.VarChar(255)
  acertos        Int?
  cadastrado_por gabarito_resposta_cadastrado_por?
  created_at     DateTime?                         @db.DateTime(0)
  updated_at     DateTime                          @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?                         @db.DateTime(0)
  gabarito       gabarito?                         @relation(fields: [gabarito_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "gabarito_resposta_fk_gabarito")
  matricula      matricula?                        @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "gabarito_resposta_ibfk_1")
  servidor       servidor?                         @relation(fields: [servidor_id], references: [id], onUpdate: SetNull, map: "gabarito_resposta_ibfk_2")

  @@index([gabarito_id], map: "fk_gabarito_id")
  @@index([matricula_id], map: "fk_gabarito_matricula")
  @@index([servidor_id], map: "gabarito_fk_servidor")
}

model ged_documento {
  id                      Int                 @id @unique(map: "unique_id") @default(autoincrement())
  ged_tipo_documento_id   Int?
  registro_relacionado_id Int
  arquivo                 String?             @db.VarChar(300)
  arquivo_url             String?             @db.VarChar(300)
  data_envio              DateTime?           @db.DateTime(0)
  descricao               String?             @db.Text
  enviado_por             String?             @db.VarChar(50)
  created_at              DateTime?           @db.DateTime(0)
  updated_at              DateTime?           @db.Timestamp(0)
  deleted_at              DateTime?           @db.DateTime(0)
  ged_tipo_documento      ged_tipo_documento? @relation(fields: [ged_tipo_documento_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_ged_tipo_documento_ged_tipo_documento_id")

  @@index([ged_tipo_documento_id], map: "FK_ged_tipo_documento_ged_tipo_documento_id")
}

model ged_tipo_documento {
  id            Int             @id @unique(map: "unique_id") @default(autoincrement())
  tipo          String          @db.VarChar(200)
  tabela        String          @db.VarChar(100)
  created_at    DateTime?       @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?       @db.DateTime(0)
  ged_documento ged_documento[]
}

model grupo {
  id         Int       @id @default(autoincrement())
  tipo       String?   @db.VarChar(50)
  descricao  String?   @db.VarChar(80)
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  produto    produto[]
}

model grupo_usuario_escola {
  id                Int       @id @default(autoincrement())
  escola_id         Int?      @default(0)
  grupo_usuarios_id Int?      @default(0)
  created_at        DateTime? @db.DateTime(0)
  updated_at        DateTime  @default(now()) @db.Timestamp(0)
  deleted_at        DateTime? @db.DateTime(0)

  @@unique([escola_id, grupo_usuarios_id], map: "escola_id_grupo_usuarios_id")
}

model grupo_usuario_menus {
  id         Int       @id @default(autoincrement())
  grupo_id   Int
  menu_id    Int
  permissao  Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)

  @@index([grupo_id], map: "grupo_id")
  @@index([menu_id], map: "menu_id")
}

model grupo_usuario_tabelas {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  grupo_id   Int?      @db.UnsignedInt
  tabela_id  Int?      @db.UnsignedInt
  permissao  Int?      @db.UnsignedInt
  funcao_id  Int?      @db.UnsignedInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)

  @@unique([grupo_id, tabela_id, funcao_id], map: "grupo_id_tabela_id_funcao_id")
  @@index([funcao_id], map: "fk_grupousuariostabelas_funcao")
  @@index([grupo_id], map: "fk_grupousuariostabelas_grupo")
  @@index([tabela_id], map: "fk_grupousuariostabelas_tabela")
}

model grupo_usuarios {
  id                      Int                  @id @default(autoincrement()) @db.UnsignedInt
  tipo                    Int?                 @db.UnsignedSmallInt
  grupo_predefinido_id    Int?                 @db.UnsignedMediumInt
  nome                    String?              @db.VarChar(200)
  descricao               String?              @db.TinyText
  created                 DateTime?            @db.DateTime(0)
  status                  Int?                 @db.UnsignedInt
  setor_id                Int?                 @db.UnsignedTinyInt
  funcionario             Int?                 @db.UnsignedTinyInt
  cargo_id                Int?                 @db.UnsignedInt
  admin_parcela           String?              @db.Char(50)
  escola_id               Int?
  gestor                  String?              @db.Char(1)
  seleciona_todas_escolas String?              @default("N") @db.Char(50)
  created_at              DateTime?            @db.DateTime(0)
  updated_at              DateTime             @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?            @db.DateTime(0)
  grupo_usuarios_tipo     grupo_usuarios_tipo? @relation(fields: [tipo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "grupo_usuarios_FK_grupo_usuarios_tipo")
  nucleo                  nucleo[]

  @@index([tipo], map: "grupo_usuarios_FK_grupo_usuarios_tipo")
}

model grupo_usuarios_chat {
  id                  Int                   @id @default(autoincrement()) @db.UnsignedTinyInt
  nome                String                @default("") @db.VarChar(75)
  grupo_usuarios_tipo grupo_usuarios_tipo[]
}

model grupo_usuarios_tipo {
  id                        Int                     @id @default(autoincrement()) @db.UnsignedSmallInt
  grupo_usuarios_chat_id    Int?                    @default(3) @db.UnsignedTinyInt
  nome                      String?                 @db.VarChar(50)
  status                    Int?                    @default(1) @db.TinyInt
  quantidade_maxima_usuario Int?                    @db.TinyInt
  created_at                DateTime?               @db.DateTime(0)
  updated_at                DateTime?               @db.Timestamp(0)
  deleted_at                DateTime?               @db.DateTime(0)
  certificado_categoria     certificado_categoria[]
  grupo_usuarios            grupo_usuarios[]
  grupo_usuarios_chat       grupo_usuarios_chat?    @relation(fields: [grupo_usuarios_chat_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "grupo_usuarios_tipo_FK_grupo_usuarios_chat")

  @@index([grupo_usuarios_chat_id], map: "grupo_usuarios_tipo_FK_grupo_usuarios_chat")
}

model grupos_etarios_infantil {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(100)
  status     Int?      @default(1) @db.TinyInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model habilitacoes_escola {
  id                  Int              @id @default(autoincrement())
  escola_id           Int
  habilitacoes_mec_id Int
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  escola              escola           @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_habilitacoes_escola_escola1")
  habilitacoes_mec    habilitacoes_mec @relation(fields: [habilitacoes_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_habilitacoes_escola_habilitacoes_mec1")

  @@index([escola_id], map: "fk_habilitacoes_escola_escola1")
  @@index([habilitacoes_mec_id], map: "fk_habilitacoes_escola_habilitacoes_mec1")
}

model habilitacoes_mec {
  id                  Int                   @id @default(autoincrement())
  codigo              String?               @db.Char(10)
  nome                String?               @db.VarChar(50)
  individual_escola   String?               @db.Char(1)
  created             DateTime?             @db.DateTime(0)
  status              String?               @db.Char(1)
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  habilitacoes_escola habilitacoes_escola[]
}

model historico {
  id                   Int              @id @default(autoincrement())
  aluno_id             Int
  nivel_ensino_mec_id  Int
  observacao           String?          @db.Text
  observacao_historico String?          @db.Text
  created_at           DateTime?        @db.DateTime(0)
  updated_at           DateTime         @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?        @db.DateTime(0)
  aluno                aluno            @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_aluno")
  nivel_ensino_mec     nivel_ensino_mec @relation(fields: [nivel_ensino_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_nivel_ensino_mec")
  historico_ano        historico_ano[]

  @@index([aluno_id], map: "fk_historico_aluno")
  @@index([nivel_ensino_mec_id], map: "fk_historico_nivel_ensino_mec")
}

model historico_ano {
  id                                               Int                    @id @default(autoincrement())
  historico_id                                     Int
  ciclo_id                                         Int?
  ano_id                                           Int?
  ano_eja                                          String?
  escola_cursou_id                                 Int?
  escola_cursou_nome                               String?                @db.VarChar(100)
  cidade_id                                        Int
  ano_cursou                                       Int
  resultado                                        String                 @db.VarChar(20)
  escola_preencheu_id                              Int?
  minimo_promocao                                  String?                @db.VarChar(20)
  dias_letivos_anual                               String?                @db.VarChar(20)
  ch_anual                                         String?                @db.VarChar(20)
  total_faltas_ano                                 String?                @db.VarChar(10)
  created                                          DateTime               @db.DateTime(0)
  observacao                                       String?                @db.Text
  created_at                                       DateTime?              @db.DateTime(0)
  preenchimento_manual                             String?                @default("S")
  updated_at                                       DateTime               @default(now()) @db.Timestamp(0)
  deleted_at                                       DateTime?              @db.DateTime(0)
  ano                                              ano?                   @relation(fields: [ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_ano_ano")
  ciclo                                            ciclo?                 @relation(fields: [ciclo_id], references: [id], onDelete: Restrict, onUpdate: NoAction, map: "fk_historico_ano_ciclo")
  cidade                                           cidade                 @relation(fields: [cidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_ano_cidade")
  escola_historico_ano_escola_cursou_idToescola    escola?                @relation("historico_ano_escola_cursou_idToescola", fields: [escola_cursou_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_ano_escola_cursou")
  escola_historico_ano_escola_preencheu_idToescola escola?                @relation("historico_ano_escola_preencheu_idToescola", fields: [escola_preencheu_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_ano_escola_preencheu")
  historico                                        historico              @relation(fields: [historico_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_ano_historico")
  historico_disciplina                             historico_disciplina[]

  @@index([ano_id], map: "fk_historico_ano_ano")
  @@index([ciclo_id], map: "fk_historico_ano_ciclo")
  @@index([cidade_id], map: "fk_historico_ano_cidade")
  @@index([escola_cursou_id], map: "fk_historico_ano_escola_cursou")
  @@index([escola_preencheu_id], map: "fk_historico_ano_escola_preencheu")
  @@index([historico_id], map: "fk_historico_ano_historico")
}

model historico_disciplina {
  id                Int             @id @default(autoincrement())
  historico_ano_id  Int
  disciplina_mec_id Int
  resultado_final   String?         @db.VarChar(10)
  carga_horaria     String?         @db.VarChar(20)
  total_aulas       Int?
  total_faltas      String?         @db.VarChar(10)
  created_at        DateTime?       @db.DateTime(0)
  updated_at        DateTime        @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?       @db.DateTime(0)
  nome_disciplina   String?         @db.VarChar(100)
  disciplinas_mec   disciplinas_mec @relation(fields: [disciplina_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_disciplina_disciplinas_mec")
  historico_ano     historico_ano   @relation(fields: [historico_ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_historico_disciplina_historico_ano")

  @@index([disciplina_mec_id], map: "fk_historico_disciplina_disciplinas_mec")
  @@index([historico_ano_id], map: "fk_historico_disciplina_historico_ano")
}

model horario {
  id                       Int                        @id @default(autoincrement())
  escola_id                Int?
  turno_id                 Int?
  hora_inicio              DateTime?                  @db.Time(0)
  hora_fim                 DateTime?                  @db.Time(0)
  created                  DateTime?                  @db.DateTime(0)
  status                   String?                    @db.Char(1)
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  tipo_turma_horario       Int?                       @default(14)
  turma_id                 Int?
  turno_nivel_ensino_id    Int?
  aula                     aula[]
  aula_disciplina          aula_disciplina[]
  aula_horarios            aula_horarios[]
  turno                    turno?                     @relation(fields: [turno_id], references: [id], onUpdate: SetNull, map: "FK_horario_turno")
  escola                   escola?                    @relation(fields: [escola_id], references: [id], onUpdate: SetNull, map: "fk_horario_escola")
  turno_nivel_ensino       turno_nivel_ensino?        @relation(fields: [turno_nivel_ensino_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_turno_nivel_ensino_id")
  turma                    turma?                     @relation(fields: [turma_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "turma_id")
  turma_disciplina_horario turma_disciplina_horario[]

  @@index([turno_id], map: "FK_horario_turno")
  @@index([escola_id], map: "fk_horario_escola")
  @@index([turno_nivel_ensino_id], map: "fk_turno_nivel_ensino_id")
  @@index([turma_id], map: "turma_id")
}

model horario_funcionamento_escola {
  id          Int       @id @default(autoincrement())
  escola_id   Int?      @default(0)
  hora_inicio DateTime? @default(dbgenerated("'00:00:00'")) @db.Time(0)
  hora_fim    DateTime? @default(dbgenerated("'00:00:00'")) @db.Time(0)
  dias_semana String?   @default("0") @db.VarChar(50)
  descricao   String?   @db.Text
  created     DateTime? @db.DateTime(0)
  status      Int?      @db.TinyInt
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
}

model hotsite_configuracao_destaque {
  id         Int       @id @default(autoincrement())
  foto       String?   @db.VarChar(200)
  titulo     String?   @db.VarChar(200)
  resumo     String?   @db.Text
  link       String?   @db.VarChar(200)
  posicao    String?   @db.Char(2)
  created    DateTime? @db.DateTime(0)
  status     Boolean?  @default(true)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model hotsite_configuracoes_contato {
  id         Int       @id @default(autoincrement())
  email      String?   @db.VarChar(200)
  telefone_1 String?   @db.Char(15)
  telefone_2 String?   @db.Char(15)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model hotsite_fale_conosco {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(200)
  email      String?   @db.VarChar(200)
  assunto    String?   @db.VarChar(200)
  mensagem   String?   @db.Text
  created    DateTime? @db.DateTime(0)
  status     Boolean?  @default(true)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model hotsite_link {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(200)
  url        String?   @db.VarChar(200)
  imagem     String?   @db.VarChar(200)
  created    DateTime? @db.DateTime(0)
  status     Boolean?
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model hotsite_noticia {
  id         Int       @id @default(autoincrement())
  titulo     String?   @db.VarChar(200)
  resumo     String?   @db.TinyText
  texto      String?   @db.Text
  foto       String?   @db.VarChar(70)
  legenda    String?   @db.VarChar(200)
  keywords   String?   @db.TinyText
  link       String?   @db.VarChar(200)
  escola_id  Int?
  created    DateTime? @db.DateTime(0)
  status     Boolean   @default(true)
  is_saic    Boolean?
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  escola     escola?   @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "hotsite_noticia_FK_escola")

  @@index([escola_id], map: "hotsite_noticia_FK_escola")
}

model hotsite_painel {
  id         Int       @id @default(autoincrement())
  foto       String?   @db.VarChar(70)
  legenda    String?   @db.VarChar(200)
  link       String?   @db.VarChar(200)
  status     Boolean   @default(true)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)

  @@index([id], map: "painel_id")
}

model hotsite_sobre {
  id         Int       @id @default(autoincrement())
  texto      String?   @db.Text
  created    DateTime? @db.DateTime(0)
  status     Boolean?  @default(true)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model imc_legenda {
  id         Int       @id @default(autoincrement())
  nome       String    @db.TinyText
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model importacao_educacenso {
  id                    Int       @id @default(autoincrement())
  arquivo               String?   @db.VarChar(50)
  nome_original_arquivo String?   @db.TinyText
  created               DateTime? @db.DateTime(0)
  status                String?   @db.Char(1)
  updated_at            DateTime? @db.DateTime(0)
  created_at            DateTime? @db.DateTime(0)
  deleted_at            DateTime? @db.DateTime(0)
}

model inep_desempenho {
  id                          Int     @id @default(autoincrement())
  ano                         String? @default("0") @db.VarChar(255)
  regiao                      String? @default("0") @db.VarChar(255)
  uf                          String? @default("0") @db.VarChar(255)
  codigo_municipio            String? @default("0") @db.VarChar(255)
  nome_municipio              String? @default("0") @db.VarChar(255)
  codigo_escola               String? @default("0") @db.VarChar(255)
  nome_escola                 String? @default("0") @db.VarChar(255)
  localizacao                 String? @default("0") @db.VarChar(255)
  dependencia_administrativa  String? @default("0") @db.VarChar(255)
  ef_aprovacao                String? @default("0") @db.VarChar(255)
  ef_aprovacao_anos_iniciais  String? @default("0") @db.VarChar(255)
  ef_aprovacao_anos_finais    String? @default("0") @db.VarChar(255)
  ef_aprovacao_ano1           String? @default("0") @db.VarChar(255)
  ef_aprovacao_ano2           String? @default("0") @db.VarChar(255)
  ef_aprovacao_ano3           String? @default("0") @db.VarChar(255)
  ef_aprovacao_ano4           String? @default("0") @db.VarChar(255)
  ef_aprovacao_ano5           String? @default("0") @db.VarChar(255)
  ef_aprovacao_ano6           String? @default("0") @db.VarChar(255)
  ef_aprovacao_ano7           String? @default("0") @db.VarChar(255)
  ef_aprovacao_ano8           String? @default("0") @db.VarChar(255)
  ef_aprovacao_ano9           String? @default("0") @db.VarChar(255)
  ef_reprovacao               String? @default("0") @db.VarChar(255)
  ef_reprovacao_anos_iniciais String? @default("0") @db.VarChar(255)
  ef_reprovacao_anos_finais   String? @default("0") @db.VarChar(255)
  ef_reprovacao_ano1          String? @default("0") @db.VarChar(255)
  ef_reprovacao_ano2          String? @default("0") @db.VarChar(255)
  ef_reprovacao_ano3          String? @default("0") @db.VarChar(255)
  ef_reprovacao_ano4          String? @default("0") @db.VarChar(255)
  ef_reprovacao_ano5          String? @default("0") @db.VarChar(255)
  ef_reprovacao_ano6          String? @default("0") @db.VarChar(255)
  ef_reprovacao_ano7          String? @default("0") @db.VarChar(255)
  ef_reprovacao_ano8          String? @default("0") @db.VarChar(255)
  ef_reprovacao_ano9          String? @default("0") @db.VarChar(255)
  ef_abandono                 String? @default("0") @db.VarChar(255)
  ef_abandono_anos_iniciais   String? @default("0") @db.VarChar(255)
  ef_abandono_anos_finais     String? @default("0") @db.VarChar(255)
  ef_abandono_ano1            String? @default("0") @db.VarChar(255)
  ef_abandono_ano2            String? @default("0") @db.VarChar(255)
  ef_abandono_ano3            String? @default("0") @db.VarChar(255)
  ef_abandono_ano4            String? @default("0") @db.VarChar(255)
  ef_abandono_ano5            String? @default("0") @db.VarChar(255)
  ef_abandono_ano6            String? @default("0") @db.VarChar(255)
  ef_abandono_ano7            String? @default("0") @db.VarChar(255)
  ef_abandono_ano8            String? @default("0") @db.VarChar(255)
  ef_abandono_ano9            String? @default("0") @db.VarChar(255)
}

model inep_distorcao {
  id               Int     @id @default(autoincrement())
  ano              String? @db.VarChar(250)
  regiao           String? @db.VarChar(250)
  codigo_uf        String? @db.VarChar(250)
  uf               String? @db.VarChar(250)
  codigo_municipio String? @db.VarChar(250)
  nome_municipio   String? @db.VarChar(250)
  codigo_escola    String? @db.VarChar(250)
  nome_escola      String? @db.VarChar(250)
  localizacao      String? @db.VarChar(250)
  rede             String? @db.VarChar(250)
  es_total         String? @db.VarChar(250)
  es_anos_iniciais String? @db.VarChar(250)
  es_anos_finais   String? @db.VarChar(250)
  es_primeiro_ano  String? @db.VarChar(250)
  es_segundo_ano   String? @db.VarChar(250)
  es_terceiro_ano  String? @db.VarChar(250)
  es_quarto_ano    String? @db.VarChar(250)
  es_quinto_ano    String? @db.VarChar(250)
  es_sexto_ano     String? @db.VarChar(250)
  es_setimo_ano    String? @db.VarChar(250)
  es_oitavo_ano    String? @db.VarChar(250)
  es_nono_ano      String? @db.VarChar(250)
}

model instituicao_ensino_superior {
  id                    Int       @id @default(autoincrement())
  cod_ies               String?   @db.Char(7)
  nome                  String?   @db.VarChar(255)
  cod_dependencia_adm   String?   @db.Char(2)
  nome_dependencia_adm  String?   @db.Char(8)
  cod_tipo_instituicao  String?   @db.Char(2)
  nome_tipo_instituicao String?   @db.Char(8)
  sigla_uf              String?   @db.Char(3)
  uf                    String?   @db.Char(3)
  cod_municipio         String?   @db.Char(8)
  condicao_func         String?   @db.Char(8)
  status                String?   @db.Char(1)
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
}

model instituicoes_financeira {
  id         Int       @id @default(autoincrement())
  codigo     String?   @db.Char(5)
  nome       String?   @db.VarChar(50)
  sigla      String?   @db.Char(9)
  site       String?   @db.VarChar(50)
  created    DateTime  @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model intervencao_situacao_aluno {
  id           Int       @id @default(autoincrement())
  escola_id    Int?      @default(0)
  aluno_id     Int?      @default(0)
  matricula_id Int?      @default(0)
  turma_id     Int?      @default(0)
  servidor_id  Int?      @default(0)
  tipo         String?   @db.VarChar(50)
  descricao    String?   @db.Text
  created      DateTime? @db.DateTime(0)
  status       Int?      @db.TinyInt
  created_at   DateTime? @db.DateTime(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.DateTime(0)
}

model item_formulario {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  formulario1_id Int?      @db.UnsignedInt
  formulario2_id Int?      @db.UnsignedInt
  created_at     DateTime? @db.DateTime(0)
  updated_at     DateTime  @default(now()) @db.Timestamp(0)
  deleted_at     DateTime? @db.DateTime(0)
}

model item_pergunta {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  pergunta_id Int?      @db.UnsignedMediumInt
  descricao   String?   @db.Text
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
}

model item_pergunta_planejamento {
  id                             Int                              @id @default(autoincrement())
  descricao                      String?                          @db.Text
  id_pergunta                    Int?
  is_checkbox                    Int?                             @default(0)
  pergunta_planejamento          pergunta_planejamento?           @relation(fields: [id_pergunta], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "item_pergunta_planejamento_ibfk_1")
  resposta_pergunta_planejamento resposta_pergunta_planejamento[]

  @@index([id_pergunta], map: "id_pergunta")
}

model lancamento_contabil {
  id                          Int       @id @default(autoincrement())
  escola_id                   Int?
  descricao                   String?   @db.Text
  plano_conta_id              Int?
  data_lancamento             DateTime? @db.Date
  contas_bancaria_devedora_id Int?
  contas_bancaria_credora_id  Int?
  historico_devedora          String?   @db.VarChar(80)
  historico_credora           String?   @db.VarChar(80)
  valor_devedora              Decimal?  @db.Decimal(10, 2)
  valor_credora               Decimal?  @db.Decimal(10, 2)
  valor_lancamento            Decimal?  @db.Decimal(10, 2)
  cancelado                   Boolean?
  created                     DateTime? @db.DateTime(0)
  status                      Int?      @db.TinyInt
  created_at                  DateTime? @db.DateTime(0)
  updated_at                  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                  DateTime? @db.DateTime(0)
}

model layout_estoque_palete {
  id                    Int                 @id @default(autoincrement())
  nome                  String?             @db.VarChar(50)
  posicao               String?             @db.Char(5)
  layout_estoque_rua_id Int?
  escola_id             Int?
  created_at            DateTime?           @db.DateTime(0)
  updated_at            DateTime            @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?           @db.DateTime(0)
  estoque               estoque[]
  escola                escola?             @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_layoutestoquepalete_escola")
  layout_estoque_rua    layout_estoque_rua? @relation(fields: [layout_estoque_rua_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_layoutestoquepalete_rua")

  @@index([escola_id], map: "fk_layoutestoquepalete_escola")
  @@index([layout_estoque_rua_id], map: "fk_layoutestoquepalete_rua")
}

model layout_estoque_rua {
  id                    Int                     @id @default(autoincrement())
  nome_rua              String?                 @db.VarChar(50)
  descricao             String?                 @db.Text
  escola_id             Int?
  created               DateTime?               @db.DateTime(0)
  status                Int?                    @db.TinyInt
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  layout_estoque_palete layout_estoque_palete[]
}

model lembrete {
  id          Int       @id @default(autoincrement())
  uid         Int?
  texto       String?   @db.VarChar(255)
  data        BigInt?
  servidor_id Int
  repeticao   BigInt?   @db.UnsignedBigInt
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  servidor    servidor  @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "FK_lembrete_servidor")

  @@index([servidor_id], map: "FK_lembrete_servidor")
}

model lingua_indigena {
  id         Int       @id
  codigo     String?   @db.Char(6)
  nome       String?   @db.VarChar(50)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model linguagem_artistica {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(255)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model local_funcionamento_diferenciado {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(255)
  ordem      Int?
  id_censo   Int?
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model log {
  id                    Int                 @id @default(autoincrement()) @db.UnsignedInt
  tabela_id             Int?                @db.UnsignedInt
  usuario_id            Int?                @db.UnsignedInt
  servidor_id           Int?
  aluno_id              Int?
  usuario_comunidade_id Int?                @db.UnsignedInt
  acao                  String?             @db.Text
  ip                    String?             @db.VarChar(20)
  created               DateTime?           @db.DateTime(0)
  created_at            DateTime?           @db.DateTime(0)
  updated_at            DateTime            @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?           @db.DateTime(0)
  aluno                 aluno?              @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "log_fk_aluno")
  servidor              servidor?           @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "log_fk_servidor")
  tabelas               tabelas?            @relation(fields: [tabela_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "log_fk_tabela")
  usuarios              usuarios?           @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "log_fk_usuario")
  usuario_comunidade    usuario_comunidade? @relation(fields: [usuario_comunidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "log_fk_usuario_comunidade")

  @@index([aluno_id], map: "log_fk_aluno")
  @@index([servidor_id], map: "log_fk_servidor")
  @@index([tabela_id], map: "log_fk_tabela")
  @@index([usuario_id], map: "log_fk_usuario")
  @@index([usuario_comunidade_id], map: "log_fk_usuario_comunidade")
}

model log_api {
  id         Int       @id @default(autoincrement())
  texto      String?   @db.LongText
  url        String?   @db.VarChar(200)
  created    DateTime? @db.DateTime(0)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model log_api_debug {
  id         Int       @id @default(autoincrement())
  texto      String?   @db.LongText
  url        String?   @db.VarChar(200)
  created    DateTime? @db.DateTime(0)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model log_de_acesso {
  id                    Int       @id @default(autoincrement())
  usuario_id            Int?      @default(0)
  servidor_id           Int?      @default(0)
  aluno_id              Int?      @default(0)
  usuario_comunidade_id Int?      @default(0)
  ip                    String?   @default("0") @db.VarChar(50)
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model log_historico_alteracao {
  id             Int                          @id @default(autoincrement()) @db.UnsignedInt
  usuario_id     Int?                         @db.UnsignedInt
  servidor_id    Int?
  agrupamento_id Int?
  acao           log_historico_alteracao_acao
  tabela_nome    String                       @db.VarChar(70)
  chave_id       Int
  valor_anterior String                       @db.Text
  valor_atual    String                       @db.Text
  created_at     DateTime                     @default(now()) @db.Timestamp(0)
  updated_at     DateTime                     @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at     DateTime?                    @db.DateTime(0)
  servidor       servidor?                    @relation(fields: [servidor_id], references: [id], onUpdate: SetNull, map: "log_historico_alteracao_fk_servidor")
  usuarios       usuarios?                    @relation(fields: [usuario_id], references: [id], onUpdate: SetNull, map: "log_historico_alteracao_fk_usuario")

  @@index([chave_id], map: "chave_id")
  @@index([servidor_id], map: "log_historico_alteracao_fk_servidor")
  @@index([usuario_id], map: "log_historico_alteracao_fk_usuario")
}

model log_pege {
  id                   Int               @id @default(autoincrement())
  usuario_id           Int?              @db.UnsignedInt
  servidor_id          Int?
  log_pege_tipo_id     Int               @db.UnsignedInt
  log_pege_entidade_id Int               @db.UnsignedInt
  objeto_id            Int?              @db.UnsignedInt
  url                  String?           @db.VarChar(500)
  request              String?           @db.Text
  ip                   String?           @db.VarChar(50)
  created_at           DateTime          @db.DateTime(0)
  updated_at           DateTime          @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?         @db.DateTime(0)
  log_pege_entidade    log_pege_entidade @relation(fields: [log_pege_entidade_id], references: [id], onUpdate: Restrict, map: "log_pege_fk_log_pege_entidade")
  log_pege_tipo        log_pege_tipo     @relation(fields: [log_pege_tipo_id], references: [id], onUpdate: Restrict, map: "log_pege_fk_log_pege_tipo")
  servidor             servidor?         @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "log_pege_fk_servidor")
  usuarios             usuarios?         @relation(fields: [usuario_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "log_pege_fk_usuario")

  @@index([log_pege_entidade_id], map: "log_pege_entidade_id")
  @@index([log_pege_tipo_id], map: "log_pege_tipo_id")
  @@index([servidor_id], map: "servidor_id")
  @@index([usuario_id], map: "usuario_id")
}

model log_pege_entidade {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  nome       String     @db.VarChar(100)
  created_at DateTime   @db.DateTime(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.DateTime(0)
  log_pege   log_pege[]
}

model log_pege_tipo {
  id         Int        @id @default(autoincrement()) @db.UnsignedInt
  nome       String     @db.VarChar(80)
  created_at DateTime   @db.DateTime(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.DateTime(0)
  log_pege   log_pege[]
}

model logacesso {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  login      String    @db.VarChar(50)
  senha      String    @db.VarChar(50)
  ip         String    @db.VarChar(15)
  created    DateTime  @db.DateTime(0)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model logadmin {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  login      String    @db.VarChar(50)
  senha      String    @db.VarChar(50)
  ip         String    @db.VarChar(15)
  created    DateTime  @db.DateTime(0)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model matricula {
  id                                                                                               Int                                   @id @default(autoincrement())
  matricula_situacao_atual_id                                                                      Int?                                  @db.UnsignedInt
  aluno_id                                                                                         Int
  turma_id                                                                                         Int
  ano_multi_id                                                                                     Int?
  modalidade_ensino_mec_id                                                                         Int?
  veiculo_id                                                                                       Int?
  servidor_aluno_necessidade_especial_id                                                           Int?
  ponto_embarque_id                                                                                Int?
  ponto_desembarque_id                                                                             Int?
  rota_id                                                                                          Int?
  matricula                                                                                        String?                               @db.VarChar(50)
  protocolo                                                                                        String?                               @db.VarChar(50)
  data_entrega_documentacao                                                                        DateTime?                             @db.Date
  data_matricula                                                                                   DateTime?                             @db.Date
  turma_mais_educacao                                                                              Boolean?
  situacao_atual                                                                                   String?                               @db.Char(10)
  motivo_evadido                                                                                   String?                               @db.VarChar(100)
  situacao_anterior                                                                                String?                               @db.Char(10)
  situacao_final                                                                                   String?                               @db.Char(10)
  data_situacao                                                                                    DateTime?                             @db.Date
  numero_diario                                                                                    Int?
  numero_diario_anterior                                                                           Int?
  tipo_admissao                                                                                    String?                               @db.VarChar(30)
  data_admissao                                                                                    DateTime?                             @db.Date
  tipo_aluno                                                                                       String?                               @db.VarChar(30)
  turma_unificada                                                                                  String?                               @db.Char(1)
  etapa_aluno_turma                                                                                String?                               @db.Char(2)
  movimento                                                                                        String?
  concluinte                                                                                       String?
  em_andamento                                                                                     String?                               @db.Char(1)
  escolarizacao_outro_espaco                                                                       String?                               @db.Char(1)
  forma_ingresso_aluno                                                                             String?                               @db.Char(2)
  transporte_escolar_publico                                                                       String?                               @db.Char(1)
  poder_publico_responsavel_pelo_transporte                                                        String?
  transporte_escolar_utilizado_rodoviario_van                                                      String?                               @db.Char(1)
  transporte_escolar_utilizado_rodoviario_microonibus                                              String?                               @db.Char(1)
  transporte_escolar_utilizado_rodoviario_onibus                                                   String?                               @db.Char(1)
  transporte_escolar_utilizado_rodoviario_bicicleta                                                String?                               @db.Char(1)
  transporte_escolar_utilizado_rodoviario_tracao_animal                                            String?                               @db.Char(1)
  transporte_escolar_utilizado_rodoviario_outro                                                    String?                               @db.Char(1)
  transporte_escolar_utilizado_aquaviario_embarcacao_ate5                                          String?                               @db.Char(1)
  transporte_escolar_utilizado_aquaviario_embarcacao_5_a_15                                        String?                               @db.Char(1)
  transporte_escolar_utilizado_aquaviario_embarcacao_15_a_35                                       String?                               @db.Char(1)
  transporte_escolar_utilizado_aquaviario_embarcacao_acima_35                                      String?                               @db.Char(1)
  transporte_escolar_utilizado_ferroviario_trem                                                    String?                               @db.Char(1)
  created_at                                                                                       DateTime?                             @db.DateTime(0)
  updated_at                                                                                       DateTime                              @default(now()) @db.Timestamp(0)
  deleted_at                                                                                       DateTime?                             @db.DateTime(0)
  inep_aluno                                                                                       String?                               @db.VarChar(12)
  acompanhamentos                                                                                  acompanhamentos[]
  acordo_nea_aluno                                                                                 acordo_nea_aluno[]
  aluno_diagnostico                                                                                aluno_diagnostico[]
  aluno_planejamento_infantil_AEE                                                                  aluno_planejamento_infantil_AEE[]
  aluno_projeto_didatico                                                                           aluno_projeto_didatico[]
  api_sms_falta                                                                                    api_sms_falta[]
  api_sms_ocorrencia                                                                               api_sms_ocorrencia[]
  avaliacao_lancamento_nota                                                                        avaliacao_lancamento_nota[]
  desistencia_aluno                                                                                desistencia_aluno[]
  desligamento_aluno                                                                               desligamento_aluno[]
  dispensa_disciplina                                                                              dispensa_disciplina[]
  edi_acompanhamento                                                                               edi_acompanhamento[]
  edi_ficha_individual                                                                             edi_ficha_individual[]
  edi_quadro_curricular                                                                            edi_quadro_curricular[]
  falta_aluno                                                                                      falta_aluno[]
  falta_aluno_admitido                                                                             falta_aluno_admitido[]
  falta_mes_aluno                                                                                  falta_mes_aluno[]
  ficha_acompanhamento                                                                             ficha_acompanhamento[]
  gabarito_resposta                                                                                gabarito_resposta[]
  matricula_situacao_historico_matricula_matricula_situacao_atual_idTomatricula_situacao_historico matricula_situacao_historico?         @relation("matricula_matricula_situacao_atual_idTomatricula_situacao_historico", fields: [matricula_situacao_atual_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_matricula_matricula_situacao_historico")
  servidor                                                                                         servidor?                             @relation(fields: [servidor_aluno_necessidade_especial_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_servidor_aluno_necessidade_especial_id")
  aluno                                                                                            aluno                                 @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_matricula_aluno")
  turma                                                                                            turma                                 @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_matricula_turma1")
  ano                                                                                              ano?                                  @relation(fields: [ano_multi_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "matricula_FK_ano")
  modalidade_ensino_mec                                                                            modalidade_ensino_mec?                @relation(fields: [modalidade_ensino_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "matricula_FK_modalidade_ensino_mec")
  ponto_de_parada_matricula_ponto_desembarque_idToponto_de_parada                                  ponto_de_parada?                      @relation("matricula_ponto_desembarque_idToponto_de_parada", fields: [ponto_desembarque_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "matricula_FK_ponto_de_parada_desembarque")
  ponto_de_parada_matricula_ponto_embarque_idToponto_de_parada                                     ponto_de_parada?                      @relation("matricula_ponto_embarque_idToponto_de_parada", fields: [ponto_embarque_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "matricula_FK_ponto_de_parada_embarque")
  veiculo                                                                                          veiculo?                              @relation(fields: [veiculo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "matricula_FK_veiculo")
  rota                                                                                             rota?                                 @relation(fields: [rota_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "matricula_ibfk_1")
  matricula_situacao_historico_matricula_situacao_historico_matricula_idTomatricula                matricula_situacao_historico[]        @relation("matricula_situacao_historico_matricula_idTomatricula")
  matricula_turma_disciplina_situacao                                                              matricula_turma_disciplina_situacao[]
  motivo_falta_aluno                                                                               motivo_falta_aluno[]
  nota                                                                                             nota[]
  nota_conceito                                                                                    nota_conceito[]
  nota_descritiva                                                                                  nota_descritiva[]
  nota_observacao                                                                                  nota_observacao[]
  nota_ponto                                                                                       nota_ponto[]
  nota_progressao_parcial_nota_progressao_parcial_matricula_anterior_idTomatricula                 nota_progressao_parcial[]             @relation("nota_progressao_parcial_matricula_anterior_idTomatricula")
  nota_progressao_parcial_nota_progressao_parcial_matricula_nova_idTomatricula                     nota_progressao_parcial[]             @relation("nota_progressao_parcial_matricula_nova_idTomatricula")
  ocorrencia_aluno_matricula                                                                       ocorrencia_aluno_matricula[]
  pege_ead_anexosdoalunonaaula                                                                     pege_ead_anexosdoalunonaaula[]
  pege_ead_comentarionaaula                                                                        pege_ead_comentarionaaula[]
  portaria                                                                                         portaria[]
  pp_justificar_falta                                                                              pp_justificar_falta[]
  pp_naolocalizado                                                                                 pp_naolocalizado[]

  @@index([matricula_situacao_atual_id], map: "FK_matricula_matricula_situacao_historico")
  @@index([servidor_aluno_necessidade_especial_id], map: "FK_servidor_aluno_necessidade_especial_id")
  @@index([aluno_id], map: "fk_matricula_aluno1")
  @@index([turma_id], map: "fk_matricula_turma1")
  @@index([ano_multi_id], map: "matricula_FK_ano")
  @@index([modalidade_ensino_mec_id], map: "matricula_FK_modalidade_ensino_mec")
  @@index([ponto_desembarque_id], map: "matricula_FK_ponto_de_parada_desembarque")
  @@index([ponto_embarque_id], map: "matricula_FK_ponto_de_parada_embarque")
  @@index([veiculo_id], map: "matricula_FK_veiculo")
  @@index([rota_id], map: "matricula_fk_rota")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model matricula_escola {
  id                         Int                          @id @default(autoincrement())
  escola_id                  Int?
  aluno_id                   Int?
  matricula                  String?                      @db.VarChar(40)
  data_matricula             DateTime?                    @db.Date
  ano_ingresso               Int?
  ordem_matricula            Int?
  situacao_atual             String?                      @db.VarChar(30)
  created_at                 DateTime?                    @db.DateTime(0)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime?                    @db.DateTime(0)
  ocorrencia_aluno_historico ocorrencia_aluno_historico[]
}

model matricula_historico_situacao {
  id           Int       @id @default(autoincrement())
  matricula_id Int?
  escola_id    Int?
  turma_id     Int?
  situacao     String?
  aluno_id     Int?
  created      DateTime? @db.DateTime(0)
  created_at   DateTime? @db.DateTime(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.DateTime(0)
}

model matricula_situacao {
  id                           Int                            @id @default(autoincrement()) @db.UnsignedInt
  nome                         String?                        @db.VarChar(200)
  sigla                        String?                        @db.VarChar(4)
  created_at                   DateTime?                      @default(now()) @db.Timestamp(0)
  updated_at                   DateTime                       @db.DateTime(0)
  deleted_at                   DateTime?                      @db.DateTime(0)
  matricula_situacao_historico matricula_situacao_historico[]
}

model matricula_situacao_historico {
  id                                                                            Int                @id @default(autoincrement()) @db.UnsignedInt
  matricula_id                                                                  Int
  matricula_situacao_id                                                         Int                @db.UnsignedInt
  data_situacao                                                                 DateTime?          @db.Date
  created_at                                                                    DateTime           @default(now()) @db.Timestamp(0)
  updated_at                                                                    DateTime           @db.DateTime(0)
  deleted_at                                                                    DateTime?          @db.DateTime(0)
  matricula_matricula_matricula_situacao_atual_idTomatricula_situacao_historico matricula[]        @relation("matricula_matricula_situacao_atual_idTomatricula_situacao_historico")
  matricula_matricula_situacao_historico_matricula_idTomatricula                matricula          @relation("matricula_situacao_historico_matricula_idTomatricula", fields: [matricula_id], references: [id], onUpdate: Restrict, map: "matricula_FK_matricula_situacao_historico")
  matricula_situacao                                                            matricula_situacao @relation(fields: [matricula_situacao_id], references: [id], onUpdate: Restrict, map: "matricula_situacao_historico_FK_matricula_situacao")

  @@index([matricula_id], map: "matricula_FK_matricula_situacao_historico")
  @@index([matricula_situacao_id], map: "matricula_situacao_historico_FK_matricula_situacao")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model matricula_turma_disciplina_situacao {
  id                  Int               @id @default(autoincrement()) @db.UnsignedInt
  matricula_id        Int?
  turma_disciplina_id Int?
  situacao            String?           @db.Char(2)
  nota                String?           @db.Char(5)
  created             DateTime?         @db.DateTime(0)
  matricula           matricula?        @relation(fields: [matricula_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK__matricula")
  turma_disciplina    turma_disciplina? @relation(fields: [turma_disciplina_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK__turma_disciplina")

  @@index([matricula_id], map: "FK__matricula")
  @@index([turma_disciplina_id], map: "FK__turma_disciplina")
}

model menus {
  id                 Int       @id @default(autoincrement()) @db.UnsignedInt
  nome               String    @db.VarChar(50)
  tipo               Int?      @db.UnsignedInt
  ordem              Int?      @db.UnsignedInt
  status             Int       @db.UnsignedInt
  escola_selecionada Int       @default(0)
  created_at         DateTime? @db.DateTime(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.DateTime(0)
}

model merenda_cardapio {
  id                            Int                             @id @default(autoincrement()) @db.UnsignedInt
  cardapio                      String                          @db.VarChar(100)
  descricao                     String                          @db.Text
  calorias                      Decimal?                        @db.Decimal(10, 2)
  created_at                    DateTime                        @db.DateTime(0)
  updated_at                    DateTime                        @db.DateTime(0)
  deleted_at                    DateTime?                       @db.DateTime(0)
  merenda_cardapio_preparo      merenda_cardapio_preparo[]
  merenda_distribuicao_cardapio merenda_distribuicao_cardapio[]
}

model merenda_cardapio_preparo {
  id                  Int              @id @default(autoincrement()) @db.UnsignedInt
  merenda_cardapio_id Int              @db.UnsignedInt
  merenda_preparo_id  Int              @db.UnsignedInt
  refeicao_nome       String           @db.VarChar(100)
  horario             String?          @db.VarChar(26)
  hora_inicio         DateTime?        @db.Time(0)
  hora_fim            DateTime?        @db.Time(0)
  created_at          DateTime         @db.DateTime(0)
  updated_at          DateTime         @db.DateTime(0)
  deleted_at          DateTime?        @db.DateTime(0)
  merenda_cardapio    merenda_cardapio @relation(fields: [merenda_cardapio_id], references: [id], onUpdate: Restrict, map: "merenda_cardapio_FK_merenda_cardapio_preparo")
  merenda_preparo     merenda_preparo  @relation(fields: [merenda_preparo_id], references: [id], onUpdate: Restrict, map: "merenda_cardapio_preparo_FK_merenda_preparo")

  @@index([merenda_cardapio_id], map: "merenda_cardapio_FK_merenda_cardapio_preparo")
  @@index([merenda_preparo_id], map: "merenda_cardapio_preparo_FK_merenda_preparo")
}

model merenda_distribuicao {
  id                                             Int                                              @id @default(autoincrement()) @db.UnsignedInt
  data_inicio                                    DateTime                                         @db.Date
  data_fim                                       DateTime                                         @db.Date
  created_at                                     DateTime                                         @db.DateTime(0)
  updated_at                                     DateTime                                         @db.DateTime(0)
  deleted_at                                     DateTime?                                        @db.DateTime(0)
  merenda_distribuicao_cardapio                  merenda_distribuicao_cardapio[]
  merenda_distribuicao_escola                    merenda_distribuicao_escola[]
  merenda_distribuicao_preparo_quantidade_escola merenda_distribuicao_preparo_quantidade_escola[]
}

model merenda_distribuicao_cardapio {
  id                      Int                  @id @default(autoincrement()) @db.UnsignedInt
  merenda_cardapio_id     Int                  @db.UnsignedInt
  merenda_distribuicao_id Int                  @db.UnsignedInt
  dia_semana              Boolean
  created_at              DateTime?            @db.DateTime(0)
  updated_at              DateTime             @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?            @db.DateTime(0)
  merenda_distribuicao    merenda_distribuicao @relation(fields: [merenda_distribuicao_id], references: [id], onUpdate: Restrict, map: "meren_dist_card_diassemana_FK_meren_dist")
  merenda_cardapio        merenda_cardapio     @relation(fields: [merenda_cardapio_id], references: [id], onUpdate: Restrict, map: "merendis_card_diassemana_FK_merenda_cardapio")

  @@index([merenda_distribuicao_id], map: "meren_dist_card_diassemana_FK_meren_dist")
  @@index([merenda_cardapio_id], map: "merendis_card_diassemana_FK_merenda_cardapio")
}

model merenda_distribuicao_escola {
  id                      Int                   @id @default(autoincrement()) @db.UnsignedInt
  merenda_distribuicao_id Int?                  @db.UnsignedInt
  escola_id               Int?
  created_at              DateTime?             @db.DateTime(0)
  updated_at              DateTime              @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?             @db.DateTime(0)
  escola                  escola?               @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "card_meren_dist_esco_FK_escola")
  merenda_distribuicao    merenda_distribuicao? @relation(fields: [merenda_distribuicao_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "card_meren_dist_esco_FK_meren_card_dist")

  @@index([escola_id], map: "card_meren_dist_esco_FK_escola")
  @@index([merenda_distribuicao_id], map: "card_meren_dist_esco_FK_meren_card_dist")
}

model merenda_distribuicao_preparo_quantidade_escola {
  id                             Int                          @id @default(autoincrement()) @db.UnsignedInt
  merenda_distribuicao_id        Int                          @default(0) @db.UnsignedInt
  escola_id                      Int
  merenda_produto_grupo_id       Int                          @db.UnsignedInt
  almoxarifado_unidade_medida_id Int?                         @db.UnsignedSmallInt
  quantidade                     Float?
  quantidade_editada             Float?
  created_at                     DateTime                     @db.DateTime(0)
  updated_at                     DateTime                     @db.DateTime(0)
  deleted_at                     DateTime?                    @db.DateTime(0)
  almoxarifado_unidade_medida    almoxarifado_unidade_medida? @relation(fields: [almoxarifado_unidade_medida_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "meren_distr_prep_qtd_esc_FK_almox_unid_medida")
  escola                         escola                       @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "meren_distr_prep_qtd_esc_FK_escola")
  merenda_distribuicao           merenda_distribuicao         @relation(fields: [merenda_distribuicao_id], references: [id], onUpdate: Restrict, map: "meren_distr_prep_qtd_esc_FK_meren_distribuicao")
  merenda_produto_grupo          merenda_produto_grupo        @relation(fields: [merenda_produto_grupo_id], references: [id], onUpdate: Restrict, map: "meren_distr_prep_qtd_esc_FK_meren_prod_grupo")

  @@index([almoxarifado_unidade_medida_id], map: "meren_distr_prep_qtd_esc_FK_almox_unid_medida")
  @@index([escola_id], map: "meren_distr_prep_qtd_esc_FK_escola")
  @@index([merenda_distribuicao_id], map: "meren_distr_prep_qtd_esc_FK_meren_distribuicao")
  @@index([merenda_produto_grupo_id], map: "meren_distr_prep_qtd_esc_FK_meren_prod_grupo")
}

model merenda_informacao_nutricional {
  id                        Int                      @id @default(autoincrement()) @db.UnsignedInt
  merenda_produto_grupo_id  Int?                     @db.UnsignedInt
  merenda_tipo_nutriente_id Int?
  valor                     Decimal?                 @db.Decimal(10, 2)
  created_at                DateTime?                @db.DateTime(0)
  updated_at                DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                @db.DateTime(0)
  merenda_produto_grupo     merenda_produto_grupo?   @relation(fields: [merenda_produto_grupo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_merenda_informacao_nutricional_merenda_produto_grupo")
  merenda_tipo_nutrientes   merenda_tipo_nutrientes? @relation(fields: [merenda_tipo_nutriente_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_merenda_informacao_nutricional_produto_tipo_nutricional")

  @@index([merenda_produto_grupo_id], map: "produto_id")
  @@index([merenda_tipo_nutriente_id], map: "produto_tipo_nutricional_id")
}

model merenda_preparo {
  id                            Int                             @id @default(autoincrement()) @db.UnsignedInt
  preparo                       String                          @default("0") @db.VarChar(100)
  descricao                     String?                         @db.Text
  modo_de_preparo               String?                         @db.Text
  created_at                    DateTime                        @db.DateTime(0)
  updated_at                    DateTime                        @db.DateTime(0)
  deleted_at                    DateTime?                       @db.DateTime(0)
  merenda_cardapio_preparo      merenda_cardapio_preparo[]
  merenda_preparo_produto_grupo merenda_preparo_produto_grupo[]
}

model merenda_preparo_produto_grupo {
  id                        Int                    @id @default(autoincrement()) @db.UnsignedInt
  merenda_preparo_id        Int                    @db.UnsignedInt
  merenda_produto_grupo_id  Int                    @db.UnsignedInt
  merenda_unidade_medida_id Int                    @db.UnsignedInt
  per_capita                Decimal                @default(0.00) @db.Decimal(8, 2)
  created_at                DateTime               @db.DateTime(0)
  updated_at                DateTime               @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?              @db.DateTime(0)
  merenda_unidade_medida    merenda_unidade_medida @relation(fields: [merenda_unidade_medida_id], references: [id], onUpdate: Restrict, map: "FK_merenda_preparo_produto_grupo_merenda_unidade_medida_id")
  merenda_produto_grupo     merenda_produto_grupo  @relation(fields: [merenda_produto_grupo_id], references: [id], onUpdate: Restrict, map: "FK_merenda_preparo_produto_merenda_produto_grupo")
  merenda_preparo           merenda_preparo        @relation(fields: [merenda_preparo_id], references: [id], onUpdate: Restrict, map: "merenda_preparo_produto_FK_merenda_preparo")

  @@index([merenda_unidade_medida_id], map: "FK_merenda_preparo_produto_grupo_merenda_unidade_medida_id")
  @@index([merenda_produto_grupo_id], map: "FK_merenda_preparo_produto_merenda_produto_grupo")
  @@index([merenda_preparo_id], map: "merenda_preparo_produto_FK_merenda_preparo")
}

model merenda_produto_grupo {
  id                                             Int                                              @id @default(autoincrement()) @db.UnsignedInt
  merenda_unidade_medida_id                      Int                                              @db.UnsignedInt
  grupo                                          String                                           @db.VarChar(50)
  habilitado                                     merenda_produto_grupo_habilitado                 @default(S)
  created_at                                     DateTime                                         @db.DateTime(0)
  updated_at                                     DateTime                                         @db.DateTime(0)
  deleted_at                                     DateTime?                                        @db.DateTime(0)
  almoxarifado_produto                           almoxarifado_produto[]
  merenda_distribuicao_preparo_quantidade_escola merenda_distribuicao_preparo_quantidade_escola[]
  merenda_informacao_nutricional                 merenda_informacao_nutricional[]
  merenda_preparo_produto_grupo                  merenda_preparo_produto_grupo[]
  merenda_unidade_medida                         merenda_unidade_medida                           @relation(fields: [merenda_unidade_medida_id], references: [id], onUpdate: Restrict, map: "meren_prod_gru_FK_meren_unid_med")

  @@index([merenda_unidade_medida_id], map: "meren_prod_gru_FK_meren_unid_med")
}

model merenda_tipo_nutrientes {
  id                             Int                              @id @default(autoincrement())
  nome                           String?                          @db.VarChar(50)
  unidade_medida                 String?                          @db.VarChar(10)
  created_at                     DateTime?                        @db.DateTime(0)
  updated_at                     DateTime                         @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                        @db.DateTime(0)
  merenda_informacao_nutricional merenda_informacao_nutricional[]
}

model merenda_unidade_medida {
  id                            Int                               @id @default(autoincrement()) @db.UnsignedInt
  unidade                       String                            @default("0") @db.VarChar(100)
  habilitado                    merenda_unidade_medida_habilitado @default(S)
  created_at                    DateTime                          @db.DateTime(0)
  updated_at                    DateTime                          @db.DateTime(0)
  deleted_at                    DateTime?                         @db.DateTime(0)
  merenda_preparo_produto_grupo merenda_preparo_produto_grupo[]
  merenda_produto_grupo         merenda_produto_grupo[]
}

model modalidade_ensino_escola {
  id                       Int                   @id @default(autoincrement())
  escola_id                Int
  ano_letivo_id            Int?
  modalidade_ensino_mec_id Int
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  ano_letivo               ano_letivo?           @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_modalidade_ensino_escola_ano_letivo1")
  escola                   escola                @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_modalidade_ensino_escola_escola1")
  modalidade_ensino_mec    modalidade_ensino_mec @relation(fields: [modalidade_ensino_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_modalidade_ensino_escola_modalidade_ensino_mec1")

  @@index([ano_letivo_id], map: "fk_modalidade_ensino_escola_ano_letivo1")
  @@index([escola_id], map: "fk_modalidade_ensino_escola_escola1")
  @@index([modalidade_ensino_mec_id], map: "fk_modalidade_ensino_escola_modalidade_ensino_mec1")
}

model modalidade_ensino_mec {
  id                          Int                        @id @default(autoincrement())
  modalidade_id               Int?
  codigo                      String?                    @db.Char(25)
  nome                        String?                    @db.VarChar(50)
  descricao                   String?                    @db.Text
  individual_escola           String?                    @db.Char(1)
  created                     DateTime?                  @db.DateTime(0)
  status                      String?                    @db.Char(1)
  created_at                  DateTime?                  @db.DateTime(0)
  updated_at                  DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at                  DateTime?                  @db.DateTime(0)
  matricula                   matricula[]
  modalidade_ensino_escola    modalidade_ensino_escola[]
  modalidade_ensino_mec       modalidade_ensino_mec?     @relation("modalidade_ensino_mecTomodalidade_ensino_mec", fields: [modalidade_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "modalidade_fk_modalidade")
  other_modalidade_ensino_mec modalidade_ensino_mec[]    @relation("modalidade_ensino_mecTomodalidade_ensino_mec")
  nivel_ensino_mec            nivel_ensino_mec[]

  @@index([modalidade_id], map: "modalidade_id")
}

model motivo_falta {
  id         Int       @id @default(autoincrement())
  codigo     String?   @db.Char(4)
  descri__o  String?   @map("descrição") @db.VarChar(100)
  status     String?   @db.Char(1)
  created    DateTime? @db.DateTime(0)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model motivo_falta_aluno {
  id              Int         @id @default(autoincrement())
  escola_id       Int
  turma_id        Int
  matricula_id    Int
  aluno_id        Int
  motivo_falta_id Int?
  falta_aluno_id  Int
  referencia_mes  Int         @db.TinyInt
  descricao       String?     @db.Text
  created_at      DateTime?   @db.DateTime(0)
  updated_at      DateTime    @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?   @db.DateTime(0)
  aluno           aluno       @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_motivo_falta_aluno_aluno1")
  escola          escola      @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_motivo_falta_aluno_escola1")
  falta_aluno     falta_aluno @relation(fields: [falta_aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_motivo_falta_aluno_falta_aluno1")
  matricula       matricula   @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_motivo_falta_aluno_matricula1")
  pp_motivo       pp_motivo?  @relation(fields: [motivo_falta_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_motivo_falta_aluno_motivo_falta1")
  turma           turma       @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_motivo_falta_aluno_turma1")

  @@index([aluno_id], map: "fk_motivo_falta_aluno_aluno1")
  @@index([escola_id], map: "fk_motivo_falta_aluno_escola1")
  @@index([falta_aluno_id], map: "fk_motivo_falta_aluno_falta_aluno1")
  @@index([matricula_id], map: "fk_motivo_falta_aluno_matricula1")
  @@index([motivo_falta_id], map: "fk_motivo_falta_aluno_motivo_falta1")
  @@index([turma_id], map: "fk_motivo_falta_aluno_turma1")
}

model mudanca_nivel {
  id                                                            Int                    @id @default(autoincrement())
  servidor_cargo_escola_id                                      Int
  funcao_mec_id                                                 Int?
  funcao_mec_anterior_id                                        Int?
  mudanca_nivel_situacao_id                                     Int                    @default(1) @db.TinyInt
  protocolo_id                                                  Int
  status                                                        Boolean
  data_solicitacao                                              DateTime?              @db.DateTime(0)
  data_alteracao                                                DateTime?              @db.DateTime(0)
  created_at                                                    DateTime?              @db.DateTime(0)
  updated_at                                                    DateTime               @default(now()) @db.Timestamp(0)
  deleted_at                                                    DateTime?              @db.DateTime(0)
  funcoes_mec_mudanca_nivel_funcao_mec_anterior_idTofuncoes_mec funcoes_mec?           @relation("mudanca_nivel_funcao_mec_anterior_idTofuncoes_mec", fields: [funcao_mec_anterior_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_mudanca_nivel_funcoes_mec")
  mudanca_nivel_situacao                                        mudanca_nivel_situacao @relation(fields: [mudanca_nivel_situacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "mudanca_nivel_ibfk_5")
  servidor_cargo_escola                                         servidor_cargo_escola  @relation(fields: [servidor_cargo_escola_id], references: [id], onUpdate: Restrict, map: "mudanca_nivel_ibfk_6")
  funcoes_mec_mudanca_nivel_funcao_mec_idTofuncoes_mec          funcoes_mec?           @relation("mudanca_nivel_funcao_mec_idTofuncoes_mec", fields: [funcao_mec_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "mudanca_nivel_ibfk_9")

  @@index([servidor_cargo_escola_id], map: "fk_alocacaoAtual_mudanca_nivel_sevidorCargoEscola")
  @@index([funcao_mec_id], map: "fk_pretensaoFuncaoMecId_mudanca_nivel_funcoesMec")
  @@index([mudanca_nivel_situacao_id], map: "fk_situacaoMudancaNivelId_mudanca_nivel_mudancaNivelSituacao")
  @@index([funcao_mec_anterior_id], map: "funcao_mec_anterior_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mudanca_nivel_situacao {
  id            Int             @id @default(autoincrement()) @db.TinyInt
  nome          String          @db.VarChar(20)
  cor           String          @db.VarChar(6)
  fonte         String          @db.VarChar(6)
  gera_portaria Int
  nivel_atual   Int
  proximo_nivel String?         @db.VarChar(50)
  created_at    DateTime?       @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?       @db.DateTime(0)
  mudanca_nivel mudanca_nivel[]
}

model nivel_ensino_escola {
  id                  Int              @id @default(autoincrement())
  escola_id           Int
  ano_letivo_id       Int?
  nivel_ensino_mec_id Int
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  ano_letivo          ano_letivo?      @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_nivel_ensino_escola_ano_letivo1")
  escola              escola           @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_nivel_ensino_escola_escola1")
  nivel_ensino_mec    nivel_ensino_mec @relation(fields: [nivel_ensino_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_nivel_ensino_escola_nivel_ensino_mec1")

  @@index([ano_letivo_id], map: "fk_nivel_ensino_escola_ano_letivo1")
  @@index([escola_id], map: "fk_nivel_ensino_escola_escola1")
  @@index([nivel_ensino_mec_id], map: "fk_nivel_ensino_escola_nivel_ensino_mec1")
}

model nivel_ensino_mec {
  id                                Int                                 @id @default(autoincrement())
  modalidade_ensino_mec_id          Int
  nivel_ensino_id                   Int?
  codigo                            String?                             @db.Char(25)
  individual_escola                 String?                             @db.Char(1)
  nome                              String?                             @db.VarChar(60)
  created                           DateTime?                           @db.DateTime(0)
  status                            String?                             @db.Char(1)
  created_at                        DateTime?                           @db.DateTime(0)
  updated_at                        DateTime                            @default(now()) @db.Timestamp(0)
  deleted_at                        DateTime?                           @db.DateTime(0)
  ano                               ano[]
  configuracao_academica_formulario configuracao_academica_formulario[]
  disciplinas_nivel_ensino          disciplinas_nivel_ensino[]
  historico                         historico[]
  nivel_ensino_escola               nivel_ensino_escola[]
  modalidade_ensino_mec             modalidade_ensino_mec               @relation(fields: [modalidade_ensino_mec_id], references: [id], onUpdate: Restrict, map: "fk_nivel_ensino_mec_modalidade_ensino_mec1")
  nivel_ensino_mec                  nivel_ensino_mec?                   @relation("nivel_ensino_mecTonivel_ensino_mec", fields: [nivel_ensino_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_nivel_ensino_mec_nivel_ensino")
  other_nivel_ensino_mec            nivel_ensino_mec[]                  @relation("nivel_ensino_mecTonivel_ensino_mec")
  parametros_cne_old                parametros_cne_old[]
  plano_curricular                  plano_curricular[]
  turma                             turma[]
  turma_conferencia                 turma_conferencia[]
  turno_nivel_ensino                turno_nivel_ensino[]

  @@index([modalidade_ensino_mec_id], map: "fk_nivel_ensino_mec_modalidade_ensino_mec1")
  @@index([nivel_ensino_id], map: "nivel_ensino_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nota {
  id                  Int                  @id @default(autoincrement())
  servidor_id         Int?
  usuario_id          Int?                 @db.UnsignedInt
  matricula_id        Int
  turma_disciplina_id Int?
  num_nota            Int?
  conceito            String?              @db.Char(3)
  valor               Decimal?             @db.Decimal(8, 2)
  valor_original      Decimal?             @db.Decimal(8, 2)
  turma_id            Int?
  cadastrado_por      nota_cadastrado_por?
  latitude            Float?
  longitude           Float?
  updated             DateTime?            @db.DateTime(0)
  created_at          DateTime?            @db.DateTime(0)
  updated_at          DateTime             @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?            @db.DateTime(0)
  matricula           matricula            @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_nota_matricula1")
  turma_disciplina    turma_disciplina?    @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_nota_turma_disciplina1")
  turma               turma?               @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_FK_turma")
  servidor            servidor?            @relation(fields: [servidor_id], references: [id], onUpdate: SetNull, map: "nota_fk_servidor")

  @@index([matricula_id], map: "fk_nota_matricula1")
  @@index([turma_disciplina_id], map: "fk_nota_turma_disciplina1")
  @@index([turma_id], map: "nota_FK_turma")
  @@index([servidor_id], map: "nota_fk_servidor")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nota_conceito {
  id                     Int                  @id @default(autoincrement())
  matricula_id           Int?                 @default(0)
  turma_disciplina_id    Int?
  nota_conceito_valor_id Int?                 @default(0)
  nota_conceito_nome_id  Int?                 @default(0)
  servidor_id            Int?
  usuario_id             Int?                 @db.UnsignedInt
  updated                DateTime?            @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  created_at             DateTime?            @db.DateTime(0)
  updated_at             DateTime             @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?            @db.DateTime(0)
  matricula              matricula?           @relation(fields: [matricula_id], references: [id], onUpdate: SetNull, map: "nota_conceito_fk_matricula")
  nota_conceito_nome     nota_conceito_nome?  @relation(fields: [nota_conceito_nome_id], references: [id], onUpdate: SetNull, map: "nota_conceito_fk_nota_conceito_nome")
  nota_conceito_valor    nota_conceito_valor? @relation(fields: [nota_conceito_valor_id], references: [id], onUpdate: SetNull, map: "nota_conceito_fk_nota_conceito_valor")
  servidor               servidor?            @relation(fields: [servidor_id], references: [id], onUpdate: SetNull, map: "nota_conceito_fk_servidor")
  turma_disciplina       turma_disciplina?    @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_conceito_fk_turma_disciplina")
  usuarios               usuarios?            @relation(fields: [usuario_id], references: [id], onUpdate: SetNull, map: "nota_conceito_fk_usuarios")

  @@index([matricula_id], map: "nota_conceito_fk_matricula")
  @@index([nota_conceito_nome_id], map: "nota_conceito_fk_nota_conceito_nome")
  @@index([nota_conceito_valor_id], map: "nota_conceito_fk_nota_conceito_valor")
  @@index([servidor_id], map: "nota_conceito_fk_servidor")
  @@index([usuario_id], map: "nota_conceito_fk_usuarios")
  @@index([turma_disciplina_id], map: "turma_disciplina_id")
}

model nota_conceito_nome {
  id                  Int               @id @default(autoincrement())
  nota_tipo_id        Int               @default(2)
  nome                String            @db.VarChar(50)
  sigla               String            @db.Char(6)
  descricao           String?           @db.VarChar(200)
  ordem               Int?
  turma_disciplina_id Int?
  periodo             Int
  created             DateTime          @db.DateTime(0)
  status              Int               @db.TinyInt
  created_at          DateTime?         @db.DateTime(0)
  updated_at          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  nota_conceito       nota_conceito[]
  nota_tipo           nota_tipo         @relation(fields: [nota_tipo_id], references: [id], onUpdate: Restrict, map: "FK_nota_conceito_nome_nota_tipo")
  turma_disciplina    turma_disciplina? @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_conceito_nome_fk_turma_disciplina")

  @@index([nota_tipo_id], map: "FK_nota_conceito_nome_nota_tipo")
  @@index([turma_disciplina_id], map: "turma_disciplina_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nota_conceito_valor {
  id            Int             @id @default(autoincrement())
  conceito      String?         @db.VarChar(20)
  created       DateTime        @db.DateTime(0)
  status        Boolean         @default(true)
  created_at    DateTime?       @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?       @db.DateTime(0)
  nota_conceito nota_conceito[]

  @@index([status], map: "status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nota_descritiva {
  id           Int       @id @default(autoincrement())
  servidor_id  Int?
  usuario_id   Int?
  matricula_id Int
  turma_id     Int
  avaliacao    String?   @db.Text
  periodo      Int
  data_inicio  DateTime? @db.Date
  data_fim     DateTime? @db.Date
  created      DateTime  @db.DateTime(0)
  status       Boolean
  created_at   DateTime? @db.DateTime(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.DateTime(0)
  matricula    matricula @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_descritiva_fk_matricula")
  turma        turma     @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_descritiva_fk_turma")

  @@index([matricula_id], map: "matricula_id")
  @@index([turma_id], map: "turma_id")
}

model nota_nome {
  id               Int        @id @default(autoincrement())
  nota_tipo_id     Int?
  nome             String     @db.VarChar(150)
  ordem            Int?
  periodo          Int?
  intervalo_inicio Int
  intervalo_fim    Int
  created_at       DateTime?  @db.DateTime(0)
  updated_at       DateTime   @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?  @db.DateTime(0)
  gabarito         gabarito[]
  nota_tipo        nota_tipo? @relation(fields: [nota_tipo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_nota_nome_nota_tipo")

  @@index([nota_tipo_id], map: "FK_nota_nome_nota_tipo")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nota_observacao {
  id                  Int               @id @default(autoincrement())
  servidor_id         Int?
  usuario_id          Int?
  turma_disciplina_id Int?
  matricula_id        Int
  justificativa       String?           @db.Text
  tipo                String
  created             DateTime?         @db.DateTime(0)
  status              Boolean?
  created_at          DateTime?         @db.DateTime(0)
  updated_at          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  matricula           matricula         @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_observacao_fk_matricula")
  turma_disciplina    turma_disciplina? @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_observacao_fk_turma_disciplina")

  @@index([matricula_id], map: "matricula_id")
  @@index([turma_disciplina_id], map: "turma_disciplina_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model nota_ponto {
  id                  Int               @id @default(autoincrement())
  matricula_id        Int?              @default(0)
  turma_disciplina_id Int?
  nota                String?           @db.VarChar(5)
  nota_ponto_prova_id Int?
  servidor_id         Int?
  usuario_id          Int?              @db.UnsignedInt
  updated             DateTime          @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  created_at          DateTime?         @db.DateTime(0)
  updated_at          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  matricula           matricula?        @relation(fields: [matricula_id], references: [id], onUpdate: SetNull, map: "nota_ponto_fk_matricula")
  nota_ponto_prova    nota_ponto_prova? @relation(fields: [nota_ponto_prova_id], references: [id], onUpdate: SetNull, map: "nota_ponto_fk_nota_ponto_prova")
  servidor            servidor?         @relation(fields: [servidor_id], references: [id], onUpdate: SetNull, map: "nota_ponto_fk_servidor")
  turma_disciplina    turma_disciplina? @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_ponto_fk_turma_disciplina")
  usuarios            usuarios?         @relation(fields: [usuario_id], references: [id], onUpdate: SetNull, map: "nota_ponto_fk_usuario")

  @@index([matricula_id], map: "matricula_id")
  @@index([nota_ponto_prova_id], map: "nota_ponto_prova_id")
  @@index([servidor_id], map: "servidor_id")
  @@index([turma_disciplina_id], map: "turma_disciplina_id")
  @@index([usuario_id], map: "usuario_id")
}

model nota_ponto_prova {
  id                  Int               @id @default(autoincrement())
  nome                String            @db.VarChar(50)
  sigla               String            @db.Char(6)
  descricao           String?           @db.VarChar(200)
  ordem               Int?
  turma_disciplina_id Int?
  periodo             Int
  nota_max            Int
  created             DateTime          @db.DateTime(0)
  status              Int               @db.TinyInt
  created_at          DateTime?         @db.DateTime(0)
  updated_at          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  nota_ponto          nota_ponto[]
  turma_disciplina    turma_disciplina? @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_ponto_prova_fk_turma_disciplina")

  @@index([turma_disciplina_id], map: "turma_disciplina_id")
}

model nota_progressao_parcial {
  id                                                                 Int               @id @default(autoincrement())
  matricula_anterior_id                                              Int?
  matricula_nova_id                                                  Int?
  turma_disciplina_anterior_id                                       Int?
  status                                                             Boolean?
  created                                                            DateTime?         @db.DateTime(0)
  created_at                                                         DateTime?         @db.DateTime(0)
  updated_at                                                         DateTime          @default(now()) @db.Timestamp(0)
  deleted_at                                                         DateTime?         @db.DateTime(0)
  matricula_nota_progressao_parcial_matricula_anterior_idTomatricula matricula?        @relation("nota_progressao_parcial_matricula_anterior_idTomatricula", fields: [matricula_anterior_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_progressao_parcial_fk_matricula_anterior")
  matricula_nota_progressao_parcial_matricula_nova_idTomatricula     matricula?        @relation("nota_progressao_parcial_matricula_nova_idTomatricula", fields: [matricula_nova_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_progressao_parcial_fk_matricula_nova")
  turma_disciplina                                                   turma_disciplina? @relation(fields: [turma_disciplina_anterior_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "nota_progressao_parcial_fk_turma_disciplina_anterior")

  @@index([matricula_anterior_id], map: "matricula_anterior_id")
  @@index([matricula_nova_id], map: "matricula_nova_id")
  @@index([turma_disciplina_anterior_id], map: "turma_disciplinha_anterior_id")
}

model nota_tipo {
  id                 Int                  @id @default(autoincrement())
  nome               String               @db.VarChar(50)
  created_at         DateTime?            @db.DateTime(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?            @db.DateTime(0)
  nota_conceito_nome nota_conceito_nome[]
  nota_nome          nota_nome[]
}

model nucleo {
  id                    Int                     @id @default(autoincrement()) @db.UnsignedSmallInt
  nome                  String?                 @db.VarChar(150)
  definicao             String?                 @db.Text
  servidor_id           Int?
  grupo_usuarios_id     Int?                    @db.UnsignedInt
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  almoxarifado_saida    almoxarifado_saida[]
  grupo_usuarios        grupo_usuarios?         @relation(fields: [grupo_usuarios_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "nucleo_fk_grupo_usuarios")
  servidor              servidor?               @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "nucleo_fk_servidor")
  nucleo_anos           nucleo_anos[]
  remanejamento         remanejamento[]
  servidor_cargo_escola servidor_cargo_escola[]

  @@index([grupo_usuarios_id], map: "nucleo_fk_grupo_usuarios")
  @@index([servidor_id], map: "nucleo_fk_servidor")
}

model nucleo_anos {
  id                      Int                       @id @default(autoincrement())
  nucleo_id               Int                       @db.UnsignedSmallInt
  ano_id                  Int
  created_at              DateTime?                 @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  coordenador_nucleo_anos coordenador_nucleo_anos[]
  ano                     ano                       @relation(fields: [ano_id], references: [id], onUpdate: Restrict, map: "nucleo_anos_fk_ano")
  nucleo                  nucleo                    @relation(fields: [nucleo_id], references: [id], onUpdate: Restrict, map: "nucleo_anos_fk_nucleo")

  @@index([ano_id], map: "ano_id")
  @@index([nucleo_id], map: "nucleo_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ocorrencia {
  id          Int       @id @default(autoincrement())
  escola_id   Int
  servidor_id Int
  tipo        String?
  descricao   String?   @db.VarChar(150)
  situacao    String
  status      String?   @db.Char(1)
  created     DateTime? @db.DateTime(0)
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  escola      escola    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_escola1")
  servidor    servidor  @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_servidor1")

  @@index([escola_id], map: "fk_ocorrencia_escola1")
  @@index([servidor_id], map: "fk_ocorrencia_servidor1")
}

model ocorrencia_aluno {
  id                         Int                              @id @default(autoincrement())
  escola_id                  Int
  ano_letivo_id              Int
  turma_disciplina_id        Int?
  ocorrencia_aluno_tipo_id   Int
  servidor_id                Int?
  uid                        String?                          @db.VarChar(50)
  latitude                   Float?
  longitude                  Float?
  cadastrado_por             ocorrencia_aluno_cadastrado_por?
  observacao                 String?                          @db.VarChar(500)
  data                       DateTime                         @db.Date
  status                     String?                          @db.Char(1)
  created                    DateTime?                        @db.Date
  created_at                 DateTime?                        @db.DateTime(0)
  updated_at                 DateTime                         @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime?                        @db.DateTime(0)
  api_sms_ocorrencia         api_sms_ocorrencia[]
  ano_letivo                 ano_letivo                       @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_aluno_ano_letivo1")
  escola                     escola                           @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_aluno_escola1")
  servidor                   servidor?                        @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_aluno_servidor1")
  turma_disciplina           turma_disciplina?                @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_aluno_turma_disciplina1")
  ocorrencia_aluno_tipo      ocorrencia_aluno_tipo            @relation(fields: [ocorrencia_aluno_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ocorrencia_aluno_ibfk_1")
  ocorrencia_aluno_historico ocorrencia_aluno_historico[]
  ocorrencia_aluno_matricula ocorrencia_aluno_matricula[]

  @@index([ano_letivo_id], map: "fk_ocorrencia_aluno_ano_letivo1")
  @@index([escola_id], map: "fk_ocorrencia_aluno_escola1")
  @@index([servidor_id], map: "fk_ocorrencia_aluno_servidor1")
  @@index([ocorrencia_aluno_tipo_id], map: "fk_ocorrencia_aluno_tipo1")
  @@index([turma_disciplina_id], map: "fk_ocorrencia_aluno_turma_disciplina1")
}

model ocorrencia_aluno_historico {
  id                  Int               @id @default(autoincrement())
  ocorrencia_aluno_id Int
  escola_id           Int
  aluno_id            Int
  matricula_escola_id Int
  turma_disciplina_id Int?
  servidor_id         Int?
  created             DateTime?         @db.DateTime(0)
  created_at          DateTime?         @db.DateTime(0)
  updated_at          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  aluno               aluno             @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_aluno_historico_aluno1")
  escola              escola            @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_aluno_historico_escola1")
  matricula_escola    matricula_escola  @relation(fields: [matricula_escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_aluno_historico_matricula_escola1")
  ocorrencia_aluno    ocorrencia_aluno  @relation(fields: [ocorrencia_aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_aluno_historico_ocorrencia_aluno1")
  turma_disciplina    turma_disciplina? @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ocorrencia_aluno_historico_turma_disciplina1")

  @@index([aluno_id], map: "fk_ocorrencia_aluno_historico_aluno1")
  @@index([escola_id], map: "fk_ocorrencia_aluno_historico_escola1")
  @@index([matricula_escola_id], map: "fk_ocorrencia_aluno_historico_matricula_escola1")
  @@index([ocorrencia_aluno_id], map: "fk_ocorrencia_aluno_historico_ocorrencia_aluno1")
  @@index([turma_disciplina_id], map: "fk_ocorrencia_aluno_historico_turma_disciplina1")
}

model ocorrencia_aluno_matricula {
  id                  Int               @id @default(autoincrement())
  matricula_id        Int?
  ocorrencia_aluno_id Int?
  aluno_id            Int?
  created_at          DateTime?         @db.DateTime(0)
  updated_at          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?         @db.DateTime(0)
  matricula           matricula?        @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ocorrencia_aluno_matricula_fk_matricula")
  ocorrencia_aluno    ocorrencia_aluno? @relation(fields: [ocorrencia_aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ocorrencia_aluno_matricula_fk_ocorrencia_aluno")

  @@index([matricula_id], map: "ocorrencia_aluno_matricula_fk_matricula")
  @@index([ocorrencia_aluno_id], map: "ocorrencia_aluno_matricula_fk_ocorrencia_aluno")
}

model ocorrencia_aluno_tipo {
  id                       Int                @id @default(autoincrement())
  codigo_integracao_diario String             @default("0") @db.VarChar(50)
  descricao                String?            @db.VarChar(250)
  sigla                    String?            @db.VarChar(50)
  individual_escola        String?            @db.Char(1)
  created                  DateTime?          @db.DateTime(0)
  status                   Boolean?           @default(true)
  created_at               DateTime?          @db.DateTime(0)
  updated_at               DateTime           @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?          @db.DateTime(0)
  ocorrencia_aluno         ocorrencia_aluno[]
}

model ocorrencia_historico {
  id            Int       @id @default(autoincrement())
  ocorrencia_id Int
  escola_id     Int
  servidor_id   Int
  tipo          String
  created       DateTime? @db.DateTime(0)
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime  @default(now()) @db.Timestamp(0)
  deleted_at    DateTime? @db.DateTime(0)
}

model oficio {
  id              Int       @id @default(autoincrement())
  recado          String?   @db.Text
  nome            String?   @db.Text
  arquivo         String?   @db.Text
  escola_id       Int?
  nome_autor      String?   @db.Text
  data            DateTime? @db.Date
  oficio_circular Int?      @db.TinyInt
  escola          escola?   @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "oficio_ibfk_1")

  @@index([escola_id], map: "escola_id")
}

model orgao_emissor_identidade {
  id         Int       @id
  codigo     String?   @db.Char(3)
  nome       String?   @db.VarChar(50)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model orgao_escola_publica_vinculada {
  id         Int       @id
  descricao  String?   @db.VarChar(255)
  status     Int       @db.TinyInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model orgao_regional_ensino {
  id           Int       @id @default(autoincrement())
  estado_id    Int?
  cidade_id    Int?
  codigo_orgao String?   @db.Char(8)
  nome_orgao   String?   @db.VarChar(100)
  created      DateTime? @db.DateTime(0)
  status       Boolean?  @default(true)
  created_at   DateTime? @db.DateTime(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.DateTime(0)
  cidade       cidade?   @relation(fields: [cidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orgao_regional_ensino_fk_cidade")
  estado       estado?   @relation(fields: [estado_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orgao_regional_ensino_fk_estado")

  @@index([cidade_id], map: "orgao_regional_ensino_fk_cidade")
  @@index([estado_id], map: "orgao_regional_ensino_fk_estado")
}

model orgaos_responsavel_recurso {
  id                      Int                       @id @default(autoincrement())
  nome                    String?                   @db.VarChar(100)
  descricao               String?                   @db.Text
  created                 DateTime?                 @db.DateTime(0)
  status                  String?                   @db.Char(1)
  created_at              DateTime?                 @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  programas_financiamento programas_financiamento[]
}

model orgaos_saida_almoxarifado {
  id                 Int                  @id @default(autoincrement())
  nome               String?              @db.VarChar(100)
  descricao          String?              @db.Text
  created            DateTime?            @db.DateTime(0)
  status             Int?                 @db.TinyInt
  created_at         DateTime?            @db.DateTime(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?            @db.DateTime(0)
  almoxarifado_saida almoxarifado_saida[]
}

model orientacao_familiar {
  id                    Int       @id @default(autoincrement())
  aluno_id              Int
  servidor_id           Int
  orientacao_familiar   String?   @db.VarChar(2000)
  orientacao_pedagogica String?   @db.VarChar(2000)
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
  aluno                 aluno     @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "FK_aluno_id")
  servidor              servidor  @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "FK_servidor_id")

  @@index([aluno_id], map: "FK_aluno_id")
  @@index([servidor_id], map: "FK_servidor_id")
}

model pais {
  id         Int       @id
  nome       String?   @db.VarChar(50)
  sigla      String?   @db.Char(3)
  codigo     String?   @db.Char(4)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  editora    editora[]
}

model parametro {
  id         Int       @id @default(autoincrement())
  escola_id  Int
  nome       String    @db.VarChar(50)
  valor      Decimal   @db.Decimal(10, 3)
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  escola     escola    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parametro_escola1")

  @@index([escola_id], map: "fk_parametro_escola1")
}

model parametro_calculo {
  id            Int        @id @default(autoincrement())
  escola_id     Int
  cargos_mec_id Int
  formula       String     @db.VarChar(500)
  qtd_ideal     Decimal    @db.Decimal(10, 3)
  created       DateTime?  @db.DateTime(0)
  status        String?    @db.Char(1)
  created_at    DateTime?  @db.DateTime(0)
  updated_at    DateTime   @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?  @db.DateTime(0)
  cargos_mec    cargos_mec @relation(fields: [cargos_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parametro_calculo_cargos_mec1")
  escola        escola     @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_parametro_calculo_escola1")

  @@index([cargos_mec_id], map: "fk_parametro_calculo_cargos_mec1")
  @@index([escola_id], map: "fk_parametro_calculo_escola1")
}

model parametro_qtd_servidor_escola {
  id             Int          @id @default(autoincrement()) @db.UnsignedSmallInt
  funcoes_mec_id Int?
  unidade        String?      @default("turma") @db.VarChar(50)
  ano_letivo     String?      @db.VarChar(50)
  quantidade     Int          @default(0) @db.UnsignedSmallInt
  funcoes_mec    funcoes_mec? @relation(fields: [funcoes_mec_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "parametro_qtd_servidor_escola_FK_funcoes_mec")

  @@index([unidade], map: "parametro_qtd_servidor_escola_FK_escola")
  @@index([funcoes_mec_id], map: "parametro_qtd_servidor_escola_FK_funcoes_mec")
}

model parametros_cne {
  id                        Int       @id @default(autoincrement())
  ciclo_id                  Int?
  qtd_alunos                Int?
  qtd_classe                Int?
  qtd_professores           Int?
  qtd_administrativo        Int?
  qtd_sala_aula             Int?
  qtd_aluno_classe          Int?
  jornada_aluno             Int?
  jornada_semanal_professor Int?
  ano_letivo                Int?
  status                    Boolean   @default(true)
  created_at                DateTime? @db.DateTime(0)
  updated_at                DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                DateTime? @db.DateTime(0)
}

model parametros_cne_old {
  id                  Int              @id @default(autoincrement())
  nivel_ensino_mec_id Int
  estudantes_turma    Int?
  created             DateTime         @db.DateTime(0)
  status              Boolean          @default(true)
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  nivel_ensino_mec    nivel_ensino_mec @relation(fields: [nivel_ensino_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "parametros_cne_fk_nivel_ensino_mec")

  @@index([nivel_ensino_mec_id], map: "nivel_ensino_mec_id")
}

model pc_ata_reuniao {
  id                          Int                           @id @default(autoincrement())
  escola_id                   Int?                          @default(0)
  cidade_id                   Int?                          @default(0)
  nome                        String?                       @default("0") @db.VarChar(200)
  descricao                   String?                       @db.Text
  data_reuniao                DateTime?                     @db.Date
  created                     DateTime?                     @db.DateTime(0)
  status                      Boolean                       @default(true)
  created_at                  DateTime?                     @db.DateTime(0)
  updated_at                  DateTime                      @default(now()) @db.Timestamp(0)
  deleted_at                  DateTime?                     @db.DateTime(0)
  cidade                      cidade?                       @relation(fields: [cidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pc_ata_reuniao_fk_cidade")
  escola                      escola?                       @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pc_ata_reuniao_fk_escola")
  pc_ata_reuniao_participante pc_ata_reuniao_participante[]

  @@index([cidade_id], map: "pc_ata_reuniao_fk_cidade")
  @@index([escola_id], map: "pc_ata_reuniao_fk_escola")
}

model pc_ata_reuniao_participante {
  id                             Int             @id @default(autoincrement())
  conselho_escolar_composicao_id Int?
  pc_ata_reuniao_id              Int?
  created_at                     DateTime?       @db.DateTime(0)
  updated_at                     DateTime        @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?       @db.DateTime(0)
  pc_ata_reuniao                 pc_ata_reuniao? @relation(fields: [pc_ata_reuniao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pc_ata_reuniao_participante_fk_pc_ata_reuniao")

  @@index([pc_ata_reuniao_id], map: "pc_ata_reuniao_participante_fk_pc_ata_reuniao")
  @@index([conselho_escolar_composicao_id], map: "pc_ata_reuniao_participantes_fk_conselho_escolar_composicao")
}

model pcn_capacidade {
  id                  Int                   @id @default(autoincrement())
  disciplina_mec_id   Int?
  descricao           String                @db.Text
  ordem               Int?                  @db.TinyInt
  created             DateTime              @db.DateTime(0)
  status              Int                   @default(1) @db.TinyInt
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  aula_pcn_capacidade aula_pcn_capacidade[]
  disciplinas_mec     disciplinas_mec?      @relation(fields: [disciplina_mec_id], references: [id], onUpdate: SetNull, map: "fk_disciplina_mec_pcn_capacidade")

  @@index([disciplina_mec_id], map: "fk_disciplina_mec_pcn_capacidade")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model pedidos {
  id                   Int?              @db.UnsignedInt
  clienteId            Int?              @db.UnsignedInt
  dataPedido           DateTime          @default(now()) @db.Timestamp(0)
  dataVencimentoPedido DateTime          @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  quant_caixa          Int?
  quilo                Float?            @db.Float
  tabelaId             Int?              @db.UnsignedInt
  quilo_desconto       Float?            @db.Float
  desconto             Float?            @db.Float
  frete                Float?            @db.Float
  pagoFornecedor       Float?            @db.Float
  totalArrecadado      Float?            @db.Float
  totalDaNota          Float?            @db.Float
  situacao             pedidos_situacao?
  tabelaCompraId       Int?              @db.UnsignedInt
  valorLucro           Float?            @db.Float
  createdAt            DateTime          @db.DateTime(0)
  deletedAt            DateTime?         @db.DateTime(0)
  quant_frango         Int?

  @@ignore
}

model pege_blacklisttoken {
  id                    Int                   @id @default(autoincrement())
  blacklisted_at        DateTime              @db.DateTime(6)
  token_id              Int                   @unique(map: "token_id")
  pege_outstandingtoken pege_outstandingtoken @relation(fields: [token_id], references: [id], onUpdate: Restrict, map: "pege_blacklisttoken_token_id_79ac7176_fk_pege_outs")
}

model pege_ead_alternativa {
  id               Int              @id @default(autoincrement())
  created_at       DateTime         @db.DateTime(6)
  updated_at       DateTime         @db.DateTime(6)
  deleted_at       DateTime?        @db.DateTime(6)
  descricao        String           @db.LongText
  questao_id       Int
  pege_ead_questao pege_ead_questao @relation(fields: [questao_id], references: [id], onUpdate: Restrict, map: "pege_ead_alternativa_questao_id_f44b3f60_fk_pege_ead_questao_id")

  @@index([questao_id], map: "pege_ead_alternativa_questao_id_f44b3f60_fk_pege_ead_questao_id")
}

model pege_ead_anexosdoalunonaaula {
  id           Int       @id @default(autoincrement())
  created_at   DateTime  @db.DateTime(6)
  updated_at   DateTime  @db.DateTime(6)
  deleted_at   DateTime? @db.DateTime(6)
  arquivo      String    @unique(map: "arquivo") @db.VarChar(200)
  aula_id      Int
  matricula_id Int
  matricula    matricula @relation(fields: [matricula_id], references: [id], onUpdate: Restrict, map: "pege_ead_anexosdoalu_matricula_id_0f28e21f_fk_matricula")
  aula         aula      @relation(fields: [aula_id], references: [id], onUpdate: Restrict, map: "pege_ead_anexosdoalunonaaula_aula_id_13eae279_fk_aula_id")

  @@index([matricula_id], map: "pege_ead_anexosdoalu_matricula_id_0f28e21f_fk_matricula")
  @@index([aula_id], map: "pege_ead_anexosdoalunonaaula_aula_id_13eae279_fk_aula_id")
}

model pege_ead_atividade {
  id                         Int                          @id @default(autoincrement())
  created_at                 DateTime                     @db.DateTime(6)
  updated_at                 DateTime                     @db.DateTime(6)
  deleted_at                 DateTime?                    @db.DateTime(6)
  titulo                     String                       @db.LongText
  descricao                  String                       @db.LongText
  data_inicio                DateTime                     @db.Date
  data_termino               DateTime                     @db.Date
  aula_id                    Int
  aula                       aula                         @relation(fields: [aula_id], references: [id], onUpdate: Restrict, map: "pege_ead_atividade_aula_id_efb91c7c_fk_aula_id")
  pege_ead_questao           pege_ead_questao[]
  pege_ead_resposta_do_aluno pege_ead_resposta_do_aluno[]

  @@index([aula_id], map: "pege_ead_atividade_aula_id_efb91c7c_fk_aula_id")
}

model pege_ead_comentarionaaula {
  id                          Int                           @id @default(autoincrement())
  created_at                  DateTime                      @db.DateTime(6)
  updated_at                  DateTime                      @db.DateTime(6)
  deleted_at                  DateTime?                     @db.DateTime(6)
  comentario                  String                        @db.LongText
  aula_id                     Int
  matricula_id                Int
  professor_id                Int?
  aula                        aula                          @relation(fields: [aula_id], references: [id], onUpdate: Restrict, map: "pege_ead_comentarionaaula_aula_id_6e657d36_fk_aula_id")
  matricula                   matricula                     @relation(fields: [matricula_id], references: [id], onUpdate: Restrict, map: "pege_ead_comentarionaaula_matricula_id_7c209c9c_fk_matricula_id")
  servidor                    servidor?                     @relation(fields: [professor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pege_ead_comentarionaaula_professor_id_743df0fa_fk_servidor_id")
  pege_ead_comentarioresposta pege_ead_comentarioresposta[]

  @@index([aula_id], map: "pege_ead_comentarionaaula_aula_id_6e657d36_fk_aula_id")
  @@index([matricula_id], map: "pege_ead_comentarionaaula_matricula_id_7c209c9c_fk_matricula_id")
  @@index([professor_id], map: "pege_ead_comentarionaaula_professor_id_743df0fa_fk_servidor_id")
}

model pege_ead_comentarioresposta {
  id                        Int                       @id @default(autoincrement())
  created_at                DateTime                  @db.DateTime(6)
  updated_at                DateTime                  @db.DateTime(6)
  deleted_at                DateTime?                 @db.DateTime(6)
  resposta                  String                    @db.LongText
  comentario_id             Int
  professor_id              Int?
  pege_ead_comentarionaaula pege_ead_comentarionaaula @relation(fields: [comentario_id], references: [id], onUpdate: Restrict, map: "pege_ead_comentarior_comentario_id_41157b03_fk_pege_ead_")
  servidor                  servidor?                 @relation(fields: [professor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pege_ead_comentarioresposta_professor_id_aea8e181_fk_servidor_id")

  @@index([comentario_id], map: "pege_ead_comentarior_comentario_id_41157b03_fk_pege_ead_")
  @@index([professor_id], map: "pege_ead_comentarioresposta_professor_id_aea8e181_fk_servidor_id")
}

model pege_ead_imagem_da_questao {
  id               Int              @id @default(autoincrement())
  created_at       DateTime         @db.DateTime(6)
  updated_at       DateTime         @db.DateTime(6)
  deleted_at       DateTime?        @db.DateTime(6)
  imagem_url       String           @unique(map: "imagem_url") @db.VarChar(200)
  questao_id       Int
  pege_ead_questao pege_ead_questao @relation(fields: [questao_id], references: [id], onUpdate: Restrict, map: "pege_ead_imagens_da__questao_id_2493c0db_fk_pege_ead_")

  @@index([questao_id], map: "pege_ead_imagens_da__questao_id_2493c0db_fk_pege_ead_")
}

model pege_ead_questao {
  id                         Int                          @id @default(autoincrement())
  created_at                 DateTime                     @db.DateTime(6)
  updated_at                 DateTime                     @db.DateTime(6)
  deleted_at                 DateTime?                    @db.DateTime(6)
  titulo                     String                       @db.LongText
  indice_gabarito            Int
  atividade_id               Int
  pege_ead_alternativa       pege_ead_alternativa[]
  pege_ead_imagem_da_questao pege_ead_imagem_da_questao[]
  pege_ead_atividade         pege_ead_atividade           @relation(fields: [atividade_id], references: [id], onUpdate: Restrict, map: "pege_ead_questao_atividade_id_f0b59fed_fk_pege_ead_atividade_id")

  @@index([atividade_id], map: "pege_ead_questao_atividade_id_f0b59fed_fk_pege_ead_atividade_id")
}

model pege_ead_resposta_do_aluno {
  id                    Int                @id @default(autoincrement())
  created_at            DateTime           @db.DateTime(6)
  updated_at            DateTime           @db.DateTime(6)
  deleted_at            DateTime?          @db.DateTime(6)
  resposta              String             @db.LongText
  aluno_id              Int
  atividade_id          Int
  criado_pelo_professor Boolean
  pege_ead_atividade    pege_ead_atividade @relation(fields: [atividade_id], references: [id], onUpdate: Restrict, map: "pege_ead_respostadoa_atividade_id_1762795d_fk_pege_ead_")
  aluno                 aluno              @relation(fields: [aluno_id], references: [id], onUpdate: Restrict, map: "pege_ead_respostadoaluno_aluno_id_4e7dc0c7_fk_aluno_id")

  @@unique([aluno_id, atividade_id], map: "pege_ead_respostadoaluno_aluno_id_atividade_id_cefbcae1_uniq")
  @@index([atividade_id], map: "pege_ead_respostadoa_atividade_id_1762795d_fk_pege_ead_")
  @@index([aluno_id], map: "pege_ead_respostadoaluno_aluno_id_4e7dc0c7")
}

model pege_log_erro {
  id          BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  tipo_erro   String                   @db.VarChar(50)
  file        String                   @db.VarChar(255)
  mensagem    String                   @db.VarChar(255)
  numero_erro Int?                     @default(0)
  resolvido   pege_log_erro_resolvido?
  chave       String?                  @db.VarChar(50)
  trace       String                   @db.Text
  request     String?                  @db.Text
  session     String?                  @db.Text
  created_at  DateTime                 @default(now()) @db.Timestamp(0)
  updated_at  DateTime                 @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
}

model pege_outstandingtoken {
  id                                                                                    Int                        @id @default(autoincrement())
  jti                                                                                   String                     @unique(map: "jti") @db.VarChar(255)
  token                                                                                 String                     @db.LongText
  created_at                                                                            DateTime?                  @db.DateTime(6)
  expires_at                                                                            DateTime                   @db.DateTime(6)
  pege_blacklisttoken                                                                   pege_blacklisttoken?
  pege_tokendeacessorefresh_pege_tokendeacessorefresh_access_idTopege_outstandingtoken  pege_tokendeacessorefresh? @relation("pege_tokendeacessorefresh_access_idTopege_outstandingtoken")
  pege_tokendeacessorefresh_pege_tokendeacessorefresh_refresh_idTopege_outstandingtoken pege_tokendeacessorefresh? @relation("pege_tokendeacessorefresh_refresh_idTopege_outstandingtoken")
}

model pege_sms_mensagem {
  id           Int            @id @default(autoincrement())
  texto        String         @db.VarChar(300)
  created_at   DateTime       @db.DateTime(6)
  updated_at   DateTime       @db.DateTime(6)
  deleted_at   DateTime?      @db.DateTime(6)
  pege_sms_sms pege_sms_sms[]
}

model pege_sms_sms {
  id                                                       Int               @id @default(autoincrement())
  sid                                                      String            @db.VarChar(50)
  servidor_id                                              Int
  destinatario_aluno_id                                    Int?
  destinatario_pessoa_id                                   Int?
  destinatario_servidor_id                                 Int?
  mensagem_id                                              Int
  enviado                                                  DateTime?         @db.DateTime(6)
  entregue                                                 DateTime?         @db.DateTime(6)
  falha                                                    DateTime?         @db.DateTime(6)
  erro_codigo                                              String?           @db.VarChar(30)
  ultimo_status                                            String?           @db.VarChar(30)
  preco                                                    Float?
  unidade                                                  String?           @db.VarChar(30)
  segmentos                                                Int?
  celular                                                  String?           @db.VarChar(50)
  created_at                                               DateTime          @db.DateTime(6)
  updated_at                                               DateTime          @db.DateTime(6)
  deleted_at                                               DateTime?         @db.DateTime(6)
  aluno                                                    aluno?            @relation(fields: [destinatario_aluno_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pege_sms_sms_destinatario_aluno_id_cc5ca1eb_fk_aluno_id")
  pessoas                                                  pessoas?          @relation(fields: [destinatario_pessoa_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pege_sms_sms_destinatario_pessoa_id_5bf71014_fk_pessoas_id")
  servidor_pege_sms_sms_destinatario_servidor_idToservidor servidor?         @relation("pege_sms_sms_destinatario_servidor_idToservidor", fields: [destinatario_servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pege_sms_sms_destinatario_servidor_id_93363df4_fk_servidor_id")
  pege_sms_mensagem                                        pege_sms_mensagem @relation(fields: [mensagem_id], references: [id], onUpdate: Restrict, map: "pege_sms_sms_mensagem_id_5335a575_fk_pege_sms_mensagem_id")
  servidor_pege_sms_sms_servidor_idToservidor              servidor          @relation("pege_sms_sms_servidor_idToservidor", fields: [servidor_id], references: [id], onUpdate: Restrict, map: "pege_sms_sms_servidor_id_1fc92b21_fk_servidor_id")

  @@index([destinatario_aluno_id], map: "pege_sms_sms_destinatario_aluno_id_cc5ca1eb_fk_aluno_id")
  @@index([destinatario_pessoa_id], map: "pege_sms_sms_destinatario_pessoa_id_5bf71014_fk_pessoas_id")
  @@index([destinatario_servidor_id], map: "pege_sms_sms_destinatario_servidor_id_93363df4_fk_servidor_id")
  @@index([mensagem_id], map: "pege_sms_sms_mensagem_id_5335a575_fk_pege_sms_mensagem_id")
  @@index([servidor_id], map: "pege_sms_sms_servidor_id_1fc92b21_fk_servidor_id")
}

model pege_tokendeacessorefresh {
  id                                                                                Int                   @id @default(autoincrement())
  access_id                                                                         Int                   @unique(map: "access_id")
  refresh_id                                                                        Int                   @unique(map: "refresh_id")
  pege_outstandingtoken_pege_tokendeacessorefresh_access_idTopege_outstandingtoken  pege_outstandingtoken @relation("pege_tokendeacessorefresh_access_idTopege_outstandingtoken", fields: [access_id], references: [id], onUpdate: Restrict, map: "pege_tokendeacessore_access_id_9c40e83e_fk_pege_outs")
  pege_outstandingtoken_pege_tokendeacessorefresh_refresh_idTopege_outstandingtoken pege_outstandingtoken @relation("pege_tokendeacessorefresh_refresh_idTopege_outstandingtoken", fields: [refresh_id], references: [id], onUpdate: Restrict, map: "pege_tokendeacessore_refresh_id_055ec7ac_fk_pege_outs")
}

model pege_vacinacao_postovacinacao {
  id                         Int                         @id @default(autoincrement())
  created_at                 DateTime                    @db.DateTime(6)
  updated_at                 DateTime                    @db.DateTime(6)
  deleted_at                 DateTime?                   @db.DateTime(6)
  nome                       String                      @db.VarChar(250)
  pege_vacinacao_vacinalocal pege_vacinacao_vacinalocal?
}

model pege_vacinacao_ubs {
  id                         Int                         @id @default(autoincrement())
  nome                       String                      @db.VarChar(250)
  created_at                 DateTime                    @db.DateTime(6)
  updated_at                 DateTime                    @db.DateTime(6)
  deleted_at                 DateTime?                   @db.DateTime(6)
  pege_vacinacao_vacinalocal pege_vacinacao_vacinalocal?
}

model pege_vacinacao_vacinacao {
  id                         Int                        @id @default(autoincrement())
  aluno_id                   Int?
  servidor_id                Int?
  data_vacinacao             DateTime                   @db.DateTime(6)
  dose                       Int
  dose_final                 Boolean?
  vacina_local_id            Int
  vacina_tipo_id             Int
  created_at                 DateTime                   @db.DateTime(6)
  updated_at                 DateTime                   @db.DateTime(6)
  deleted_at                 DateTime?                  @db.DateTime(6)
  pege_vacinacao_vacinalocal pege_vacinacao_vacinalocal @relation(fields: [vacina_local_id], references: [id], onUpdate: Restrict, map: "pege_vacinacao_vacin_vacina_local_id_cf7600c5_fk_pege_vaci")
  pege_vacinacao_vacinatipo  pege_vacinacao_vacinatipo  @relation(fields: [vacina_tipo_id], references: [id], onUpdate: Restrict, map: "pege_vacinacao_vacin_vacina_tipo_id_0764a45d_fk_pege_vaci")
  aluno                      aluno?                     @relation(fields: [aluno_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pege_vacinacao_vacinacao_aluno_id_4aa1b682_fk_aluno_id")
  servidor                   servidor?                  @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pege_vacinacao_vacinacao_servidor_id_b6beeaa2_fk_servidor_id")

  @@index([vacina_local_id], map: "pege_vacinacao_vacin_vacina_local_id_cf7600c5_fk_pege_vaci")
  @@index([vacina_tipo_id], map: "pege_vacinacao_vacin_vacina_tipo_id_0764a45d_fk_pege_vaci")
  @@index([aluno_id], map: "pege_vacinacao_vacinacao_aluno_id_4aa1b682_fk_aluno_id")
  @@index([servidor_id], map: "pege_vacinacao_vacinacao_servidor_id_b6beeaa2_fk_servidor_id")
}

model pege_vacinacao_vacinalocal {
  id                            Int                            @id @default(autoincrement())
  escola_id                     Int?                           @unique(map: "pege_vacinacao_vacinalocal_escola_id_e691f1bb_uniq")
  created_at                    DateTime                       @db.DateTime(6)
  updated_at                    DateTime                       @db.DateTime(6)
  deleted_at                    DateTime?                      @db.DateTime(6)
  ubs_id                        Int?                           @unique(map: "ubs_id")
  posto_vacinacao_id            Int?                           @unique(map: "posto_vacinacao_id")
  pege_vacinacao_vacinacao      pege_vacinacao_vacinacao[]
  pege_vacinacao_postovacinacao pege_vacinacao_postovacinacao? @relation(fields: [posto_vacinacao_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pege_vacinacao_vacin_posto_vacinacao_id_49cc4530_fk_pege_vaci")
  pege_vacinacao_ubs            pege_vacinacao_ubs?            @relation(fields: [ubs_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pege_vacinacao_vacin_ubs_id_c3cd3a83_fk_pege_vaci")
  escola                        escola?                        @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pege_vacinacao_vacinalocal_escola_id_e691f1bb_fk_escola_id")
}

model pege_vacinacao_vacinatipo {
  id                       Int                        @id @default(autoincrement())
  nome                     String                     @db.VarChar(250)
  laboratorio              String                     @db.VarChar(250)
  quantidade_doses         Int?
  janela_vacinacao         Int
  janela_imunizacao        Int
  uso_continuo             Boolean
  created_at               DateTime                   @db.DateTime(6)
  updated_at               DateTime                   @db.DateTime(6)
  deleted_at               DateTime?                  @db.DateTime(6)
  pege_vacinacao_vacinacao pege_vacinacao_vacinacao[]
}

model percurso {
  id              Int               @id @default(autoincrement())
  nome            String?           @db.VarChar(60)
  estimativa_km   String?           @db.VarChar(60)
  created         DateTime?         @db.DateTime(0)
  status          Boolean?          @default(true)
  created_at      DateTime?         @db.DateTime(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.DateTime(0)
  percurso_trecho percurso_trecho[]
  rota            rota[]

  @@index([created], map: "index_percurso_created")
}

model percurso_ponto_de_parada {
  id                 Int       @id @default(autoincrement())
  percurso_id        Int
  ponto_de_parada_id Int
  ordem              Int
  created_at         DateTime? @db.DateTime(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.DateTime(0)
}

model percurso_trecho {
  id          Int       @id @default(autoincrement())
  percurso_id Int?
  trecho_id   Int?
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  percurso    percurso? @relation(fields: [percurso_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_percurso_trecho_percurso_id")
  trecho      trecho?   @relation(fields: [trecho_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_percurso_trecho_trecho_id")

  @@index([percurso_id], map: "fk_percurso_trecho_percurso_id")
  @@index([trecho_id], map: "fk_percurso_trecho_trecho_id")
}

model pergunta {
  id                       Int                     @id @default(autoincrement()) @db.UnsignedMediumInt
  tipo_pergunta_id         Int?                    @db.UnsignedSmallInt
  formulario_habilidade_id Int?                    @db.UnsignedSmallInt
  agrupamento_pergunta_id  Int?                    @db.UnsignedSmallInt
  descricao                String?                 @db.Text
  quantidade_linhas        Int?                    @default(3) @db.UnsignedTinyInt
  created_at               DateTime?               @db.DateTime(0)
  updated_at               DateTime                @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?               @db.DateTime(0)
  formulario_habilidades   formulario_habilidades? @relation(fields: [formulario_habilidade_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "pergunta_FK_formulario_habilidade1")
  agrupamento_pergunta     agrupamento_pergunta?   @relation(fields: [agrupamento_pergunta_id], references: [id], onDelete: Cascade, map: "perunta_FK_agrupamento_pergunta1")
  tipo_pergunta            tipo_pergunta?          @relation(fields: [tipo_pergunta_id], references: [id], onDelete: Cascade, map: "perunta_FK_tipo_pergunta1")

  @@index([formulario_habilidade_id], map: "pergunta_FK_formulario_habilidade1")
  @@index([agrupamento_pergunta_id], map: "perunta_FK_agrupamento_pergunta1")
  @@index([tipo_pergunta_id], map: "perunta_FK_tipo_pergunta1")
}

model pergunta_planejamento {
  id                             Int                              @id @default(autoincrement())
  descricao                      String?                          @db.Text
  item_pergunta_planejamento     item_pergunta_planejamento[]
  resposta_pergunta_planejamento resposta_pergunta_planejamento[]
}

model periodo_lancamento {
  id             Int              @id @default(autoincrement())
  escola_id      Int
  descricao      String           @db.VarChar(150)
  data_inicio    DateTime         @db.Date
  data_fim       DateTime         @db.Date
  situacao       String
  senha_cadastro String           @db.VarChar(50)
  created        DateTime?        @db.DateTime(0)
  status         String?          @db.Char(1)
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  escola         escola           @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_periodo_lancamento_escola1")
  verba_servidor verba_servidor[]

  @@index([escola_id], map: "fk_periodo_lancamento_escola1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pessoa {
  id                Int       @id @default(autoincrement())
  nome              String?   @db.VarChar(200)
  data_nascimento   DateTime? @db.Date
  cpf               String?   @db.Char(15)
  telefone          String?   @db.Char(15)
  endereco          String?   @db.VarChar(200)
  bairro            String?   @db.VarChar(50)
  numero            String?   @db.Char(10)
  complemento       String?   @db.VarChar(200)
  cidade_id         Int?
  estado_id         Int?
  nacionalidade     String?
  nome_pai          String?   @db.VarChar(200)
  pai_nacionalidade String?
  pai_cpf           String?   @db.Char(15)
  mae_nome          String?   @db.VarChar(200)
  mae_nacionalidade String?
  mae_cpf           String?   @db.Char(15)
  created_at        DateTime? @db.DateTime(0)
  updated_at        DateTime  @default(now()) @db.Timestamp(0)
  deleted_at        DateTime? @db.DateTime(0)
  cidade            cidade?   @relation(fields: [cidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pessoa_FK_cidade")
  estado            estado?   @relation(fields: [estado_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pessoa_FK_estado")

  @@index([cidade_id], map: "pessoa_FK_cidade")
  @@index([estado_id], map: "pessoa_FK_estado")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pessoas {
  id                                  Int               @id @default(autoincrement())
  nome                                String?           @db.VarChar(100)
  cpf                                 String?           @db.VarChar(20)
  data_nascimento                     DateTime?         @db.Date
  nis                                 String?           @db.VarChar(50)
  nacionalidade                       String?
  estado_id                           Int?
  cidade_id                           Int?
  niv_escolar                         String?           @db.VarChar(50)
  religiao                            String?           @db.VarChar(50)
  profissao                           String?           @db.VarChar(50)
  endereco_trabalho                   String?           @db.VarChar(50)
  telefone                            String?           @db.VarChar(50)
  email                               String?           @db.VarChar(50)
  titulo                              String?           @db.VarChar(50)
  titulo_zona                         String?           @db.VarChar(50)
  titulo_secao                        String?           @db.VarChar(50)
  possui_filho_rede                   Boolean?
  remember_token                      String?           @db.VarChar(100)
  created_at                          DateTime?         @db.DateTime(0)
  updated_at                          DateTime          @default(now()) @db.Timestamp(0)
  deleted_at                          DateTime?         @db.DateTime(0)
  aluno_aluno_mae_idTopessoas         aluno[]           @relation("aluno_mae_idTopessoas")
  aluno_aluno_pai_idTopessoas         aluno[]           @relation("aluno_pai_idTopessoas")
  aluno_aluno_responsavel_idTopessoas aluno[]           @relation("aluno_responsavel_idTopessoas")
  pege_sms_sms                        pege_sms_sms[]
  cidade                              cidade?           @relation(fields: [cidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pessoas_fk_cidade")
  estado                              estado?           @relation(fields: [estado_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pessoas_fk_estado")
  programa_social                     programa_social[]

  @@index([cidade_id], map: "cidade_id")
  @@index([cpf], map: "cpf")
  @@index([estado_id], map: "estado_id")
  @@index([id], map: "id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model plano_conta {
  id                       Int                        @id @default(autoincrement())
  descricao                String?                    @db.TinyText
  nome                     String?                    @db.VarChar(50)
  natureza                 String?                    @db.Char(20)
  tipo_nivel               String?                    @db.Char(20)
  codigo                   String?                    @db.VarChar(45)
  plano_contaSup_id        Int?
  usuarios_id              Int?
  created                  DateTime?                  @db.DateTime(0)
  status                   Int?                       @db.SmallInt
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  despesa                  despesa[]
  finan_lancamento_parcela finan_lancamento_parcela[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model plano_curricular {
  id                     Int                      @id @default(autoincrement())
  nivel_ensino_mec_id    Int
  tipo_ensino_mec_id     Int?
  ano                    Int?
  modulo_aula            Decimal?                 @db.Decimal(8, 2)
  qtd_dias_aula          Int?
  carga_horaria_anual    Decimal?                 @db.Decimal(8, 2)
  qtd_dias_letivos       Int?
  qtd_semanas_letivas    Int?
  fundamentacao_legal    String?                  @db.Text
  nome                   String                   @db.VarChar(50)
  created                DateTime?                @db.DateTime(0)
  created_at             DateTime?                @db.DateTime(0)
  updated_at             DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?                @db.DateTime(0)
  nivel_ensino_mec       nivel_ensino_mec         @relation(fields: [nivel_ensino_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_planocurricular_nivelensinomec")
  tipos_ensino_mec       tipos_ensino_mec?        @relation(fields: [tipo_ensino_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_planocurricular_tipoensinomec")
  plano_curricular_ano   plano_curricular_ano[]
  plano_curricular_ciclo plano_curricular_ciclo[]

  @@index([nivel_ensino_mec_id], map: "fk_planocurricular_nivelensinomec")
  @@index([tipo_ensino_mec_id], map: "fk_planocurricular_tipoensinomec")
}

model plano_curricular_ano {
  id                                   Int                                    @id @default(autoincrement())
  nome                                 String?                                @db.VarChar(30)
  plano_curricular_id                  Int
  ano_id                               Int
  created_at                           DateTime?                              @db.DateTime(0)
  updated_at                           DateTime                               @default(now()) @db.Timestamp(0)
  deleted_at                           DateTime?                              @db.DateTime(0)
  ano                                  ano                                    @relation(fields: [ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_planocurricularano_ano")
  plano_curricular                     plano_curricular                       @relation(fields: [plano_curricular_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_planocurricularano_plano")
  plano_curricular_ano_disciplina      plano_curricular_ano_disciplina[]
  plano_curricular_ano_termo_de_avanco plano_curricular_ano_termo_de_avanco[]

  @@index([ano_id], map: "fk_planocurricularano_ano")
  @@index([plano_curricular_id], map: "fk_planocurricularano_plano")
}

model plano_curricular_ano_disciplina {
  id                      Int                  @id @default(autoincrement())
  plano_curricular_ano_id Int
  disciplina_mec_id       Int?
  qtd_aula                Int?                 @db.SmallInt
  carga_horaria           Decimal?             @db.Decimal(8, 2)
  created_at              DateTime?            @db.DateTime(0)
  updated_at              DateTime             @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?            @db.DateTime(0)
  disciplinas_mec         disciplinas_mec?     @relation(fields: [disciplina_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_anodisciplina_disciplinamec")
  plano_curricular_ano    plano_curricular_ano @relation(fields: [plano_curricular_ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_anodisciplina_planoano")

  @@index([disciplina_mec_id], map: "fk_anodisciplina_disciplinamec")
  @@index([plano_curricular_ano_id], map: "fk_anodisciplina_planoano")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model plano_curricular_ano_termo_de_avanco {
  id                                            Int                                             @id @default(autoincrement())
  plano_curricular_ano_id                       Int?
  bom                                           Boolean?                                        @default(true)
  nome                                          String                                          @db.VarChar(30)
  created                                       DateTime?                                       @db.DateTime(0)
  created_at                                    DateTime?                                       @db.DateTime(0)
  updated_at                                    DateTime                                        @default(now()) @db.Timestamp(0)
  deleted_at                                    DateTime?                                       @db.DateTime(0)
  plano_curricular_ano                          plano_curricular_ano?                           @relation(fields: [plano_curricular_ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_anotermosdeavanco_planoano")
  plano_curricular_ano_termo_de_avanco_condicao plano_curricular_ano_termo_de_avanco_condicao[]

  @@index([plano_curricular_ano_id], map: "fk_anotermosdeavanco_planoano")
}

model plano_curricular_ano_termo_de_avanco_condicao {
  id                                      Int                                   @id @default(autoincrement())
  plano_curricular_ano_termo_de_avanco_id Int?
  nome                                    String?                               @db.VarChar(30)
  minimo                                  Decimal?                              @db.Decimal(4, 2)
  maximo                                  Decimal?                              @db.Decimal(4, 2)
  tipo                                    String?
  created_at                              DateTime?                             @db.DateTime(0)
  updated_at                              DateTime                              @default(now()) @db.Timestamp(0)
  deleted_at                              DateTime?                             @db.DateTime(0)
  plano_curricular_ano_termo_de_avanco    plano_curricular_ano_termo_de_avanco? @relation(fields: [plano_curricular_ano_termo_de_avanco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_anotermosdeavancocondicao_planoanotermo")

  @@index([plano_curricular_ano_termo_de_avanco_id], map: "fk_anotermosdeavancocondicao_planoanotermo")
}

model plano_curricular_ciclo {
  id                                     Int                                      @id @default(autoincrement())
  nome                                   String?                                  @db.VarChar(30)
  plano_curricular_id                    Int
  ciclo_id                               Int
  created_at                             DateTime?                                @db.DateTime(0)
  updated_at                             DateTime                                 @default(now()) @db.Timestamp(0)
  deleted_at                             DateTime?                                @db.DateTime(0)
  ciclo                                  ciclo                                    @relation(fields: [ciclo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_planocurricularciclo_ciclo")
  plano_curricular                       plano_curricular                         @relation(fields: [plano_curricular_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_planocurricularciclo_plano")
  plano_curricular_ciclo_disciplina      plano_curricular_ciclo_disciplina[]
  plano_curricular_ciclo_termo_de_avanco plano_curricular_ciclo_termo_de_avanco[]

  @@index([ciclo_id], map: "fk_planocurricularciclo_ciclo")
  @@index([plano_curricular_id], map: "fk_planocurricularciclo_plano")
}

model plano_curricular_ciclo_disciplina {
  id                        Int                    @id @default(autoincrement())
  plano_curricular_ciclo_id Int
  disciplina_mec_id         Int
  qtd_aula                  Int?                   @db.SmallInt
  carga_horaria             Float?                 @db.Float
  created_at                DateTime?              @db.DateTime(0)
  updated_at                DateTime               @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?              @db.DateTime(0)
  disciplinas_mec           disciplinas_mec        @relation(fields: [disciplina_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_planociclodisciplina_disciplinamec")
  plano_curricular_ciclo    plano_curricular_ciclo @relation(fields: [plano_curricular_ciclo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_planociclodisciplina_planociclo")

  @@index([disciplina_mec_id], map: "fk_planociclodisciplina_disciplinamec")
  @@index([plano_curricular_ciclo_id], map: "fk_planociclodisciplina_planociclo")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model plano_curricular_ciclo_termo_de_avanco {
  id                                              Int                                               @id @default(autoincrement())
  plano_curricular_ciclo_id                       Int?
  bom                                             Boolean?                                          @default(true)
  nome                                            String                                            @db.VarChar(30)
  created                                         DateTime?                                         @db.DateTime(0)
  created_at                                      DateTime?                                         @db.DateTime(0)
  updated_at                                      DateTime                                          @default(now()) @db.Timestamp(0)
  deleted_at                                      DateTime?                                         @db.DateTime(0)
  plano_curricular_ciclo                          plano_curricular_ciclo?                           @relation(fields: [plano_curricular_ciclo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ciclotermosdeavanco_planociclo")
  plano_curricular_ciclo_termo_de_avanco_condicao plano_curricular_ciclo_termo_de_avanco_condicao[]

  @@index([plano_curricular_ciclo_id], map: "fk_ciclotermosdeavanco_planociclo")
}

model plano_curricular_ciclo_termo_de_avanco_condicao {
  id                                        Int                                     @id @default(autoincrement())
  plano_curricular_ciclo_termo_de_avanco_id Int?
  nome                                      String?                                 @db.VarChar(30)
  minimo                                    Decimal?                                @db.Decimal(4, 2)
  maximo                                    Decimal?                                @db.Decimal(4, 2)
  tipo                                      String?
  created_at                                DateTime?                               @db.DateTime(0)
  updated_at                                DateTime                                @default(now()) @db.Timestamp(0)
  deleted_at                                DateTime?                               @db.DateTime(0)
  plano_curricular_ciclo_termo_de_avanco    plano_curricular_ciclo_termo_de_avanco? @relation(fields: [plano_curricular_ciclo_termo_de_avanco_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ciclotermosdeavancocondicao_planociclotermo")

  @@index([plano_curricular_ciclo_termo_de_avanco_id], map: "fk_ciclotermosdeavancocondicao_planociclotermo")
}

model polo {
  id         Int             @id @default(autoincrement())
  zona_id    Int
  nome       String          @db.VarChar(100)
  descricao  String?         @db.Text
  habilitado polo_habilitado
  created_at DateTime        @db.DateTime(0)
  updated_at DateTime        @default(now()) @db.Timestamp(0)
  deleted_at DateTime?       @db.DateTime(0)
  escola     escola[]
  zona       zona            @relation(fields: [zona_id], references: [id], onUpdate: Restrict, map: "polo_fk_zona")

  @@index([zona_id], map: "zona_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ponto_de_parada {
  id                                                        Int                                @id @default(autoincrement())
  nome                                                      String?                            @db.VarChar(40)
  tipo_ponto_parada                                         ponto_de_parada_tipo_ponto_parada?
  escola_id                                                 Int?
  endereco                                                  String?                            @db.TinyText
  complemento                                               String?                            @db.TinyText
  created                                                   DateTime?                          @db.DateTime(0)
  status                                                    Boolean?                           @default(true)
  created_at                                                DateTime?                          @db.DateTime(0)
  updated_at                                                DateTime                           @default(now()) @db.Timestamp(0)
  deleted_at                                                DateTime?                          @db.DateTime(0)
  matricula_matricula_ponto_desembarque_idToponto_de_parada matricula[]                        @relation("matricula_ponto_desembarque_idToponto_de_parada")
  matricula_matricula_ponto_embarque_idToponto_de_parada    matricula[]                        @relation("matricula_ponto_embarque_idToponto_de_parada")
  escola                                                    escola?                            @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ponto_de_parada_escola")
  trecho_trecho_ponto_final_idToponto_de_parada             trecho[]                           @relation("trecho_ponto_final_idToponto_de_parada")
  trecho_trecho_ponto_inicial_idToponto_de_parada           trecho[]                           @relation("trecho_ponto_inicial_idToponto_de_parada")

  @@index([escola_id], map: "fk_ponto_de_parada_escola")
  @@index([created], map: "index_ponto_de_parada_created")
}

model ponto_servidor {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  servidor_id Int?
  data        DateTime? @db.DateTime(0)
  sequencial  Int?
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime? @db.DateTime(0)
  deleted_at  DateTime? @db.DateTime(0)
  servidor    servidor? @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "ponto_servidor_fk_servidor")

  @@unique([servidor_id, data], map: "unique_ponto")
}

model portaria {
  id                 Int        @id @default(autoincrement())
  aluno_matricula_id Int?
  servidor_id        Int?
  tipo               Int
  data               DateTime   @db.DateTime(0)
  created_at         DateTime?  @db.DateTime(0)
  updated_at         DateTime   @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?  @db.DateTime(0)
  matricula          matricula? @relation(fields: [aluno_matricula_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "portaria_fk_matricula")
  servidor           servidor?  @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "portaria_fk_servidor")

  @@index([aluno_matricula_id], map: "aluno_matricula_id")
  @@index([servidor_id], map: "portaria_servidor_id")
}

model portaria_protocolo {
  id           Int       @id @default(autoincrement())
  protocolo_id String    @db.VarChar(255)
  conteudo     String    @db.Text
  created_at   DateTime? @db.DateTime(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.DateTime(0)
}

model portaria_rh {
  id         Int       @id @default(autoincrement())
  tipo       String    @db.VarChar(100)
  titulo     String    @db.VarChar(200)
  cabecalho  String?   @db.Text
  rodape     String?   @db.Text
  texto      String    @db.Text
  created    DateTime  @db.DateTime(0)
  status     Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model portarias_grupo_referencia {
  id         Int       @id @default(autoincrement())
  nome       String    @db.VarChar(200)
  created    DateTime  @db.DateTime(0)
  status     Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model portarias_referencia {
  id                            Int       @id @default(autoincrement())
  texto                         String    @db.VarChar(200)
  descricao                     String    @db.VarChar(200)
  tabela                        String    @db.VarChar(60)
  portarias_grupo_referencia_id Int
  created                       DateTime  @db.DateTime(0)
  status                        Int
  created_at                    DateTime? @db.DateTime(0)
  updated_at                    DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime? @db.DateTime(0)
}

model pp_justificar_falta {
  id             Int          @id @default(autoincrement())
  pp_programa_id Int?
  escola_id      Int?
  aluno_id       Int?
  matricula_id   Int?
  turma_id       Int?
  pp_periodo_id  Int?
  mes            Int?
  ano            Int?
  qtd_aulas      Int?
  qtd_faltas     Int?
  frequencia     Float?
  pp_motivo_id   Int?
  created        DateTime?    @db.DateTime(0)
  status         Boolean?     @default(true)
  created_at     DateTime?    @db.DateTime(0)
  updated_at     DateTime     @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?    @db.DateTime(0)
  aluno          aluno?       @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_justificar_falta_fk_aluno")
  escola         escola?      @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_justificar_falta_fk_escola")
  matricula      matricula?   @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_justificar_falta_fk_matricula")
  pp_motivo      pp_motivo?   @relation(fields: [pp_motivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_justificar_falta_fk_pp_motivo")
  pp_periodo     pp_periodo?  @relation(fields: [pp_periodo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_justificar_falta_fk_pp_periodo")
  pp_programa    pp_programa? @relation(fields: [pp_programa_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_justificar_falta_fk_pp_programa")
  turma          turma?       @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_justificar_falta_fk_turma")

  @@index([aluno_id], map: "aluno_id")
  @@index([escola_id], map: "escola_id")
  @@index([matricula_id], map: "matricula_id")
  @@index([pp_motivo_id], map: "pp_motivo_id")
  @@index([pp_periodo_id], map: "pp_periodo_id")
  @@index([pp_programa_id], map: "pp_programa_id")
  @@index([turma_id], map: "turma_id")
}

model pp_motivo {
  id                    Int                     @id @default(autoincrement())
  pp_motivos_tipo_id    Int?
  codigo                String                  @db.VarChar(10)
  descricao             String                  @db.VarChar(200)
  status                Boolean                 @default(true)
  created               DateTime                @db.DateTime(0)
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  aluno_afastamento     aluno_afastamento[]
  motivo_falta_aluno    motivo_falta_aluno[]
  pp_justificar_falta   pp_justificar_falta[]
  pp_motivos_tipo       pp_motivos_tipo?        @relation(fields: [pp_motivos_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_motivo_fk_pp_motivos_tipo")
  servidor_resumo_ponto servidor_resumo_ponto[]

  @@index([pp_motivos_tipo_id], map: "pp_motivos_tipo_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pp_motivos_tipo {
  id              Int         @id @default(autoincrement())
  descricao       String?     @db.VarChar(200)
  vinculo_escolar String?
  status          Boolean?    @default(true)
  created         DateTime?   @db.DateTime(0)
  created_at      DateTime?   @db.DateTime(0)
  updated_at      DateTime    @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?   @db.DateTime(0)
  pp_motivo       pp_motivo[]
}

model pp_naolocalizado {
  id                                             Int          @id @default(autoincrement())
  escola_id                                      Int
  nova_escola_id                                 Int?
  aluno_id                                       Int?
  matricula_id                                   Int?
  turma_id                                       Int?
  pp_programa_id                                 Int?
  pp_periodo_id                                  Int?
  ano                                            Int
  status                                         Boolean?     @default(true)
  created                                        DateTime?    @db.DateTime(0)
  created_at                                     DateTime?    @db.DateTime(0)
  updated_at                                     DateTime     @default(now()) @db.Timestamp(0)
  deleted_at                                     DateTime?    @db.DateTime(0)
  aluno                                          aluno?       @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_naolocalizado_fk_aluno")
  escola_pp_naolocalizado_escola_idToescola      escola       @relation("pp_naolocalizado_escola_idToescola", fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_naolocalizado_fk_escola")
  escola_pp_naolocalizado_nova_escola_idToescola escola?      @relation("pp_naolocalizado_nova_escola_idToescola", fields: [nova_escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_naolocalizado_fk_escola_dif_nova")
  matricula                                      matricula?   @relation(fields: [matricula_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_naolocalizado_fk_matricula")
  pp_periodo                                     pp_periodo?  @relation(fields: [pp_periodo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_naolocalizado_fk_pp_periodo")
  pp_programa                                    pp_programa? @relation(fields: [pp_programa_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_naolocalizado_fk_pp_programa")
  turma                                          turma?       @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_naolocalizado_fk_turma")

  @@index([aluno_id], map: "aluno_id")
  @@index([escola_id], map: "escola_id")
  @@index([matricula_id], map: "matricula_id")
  @@index([nova_escola_id], map: "nova_escola_id")
  @@index([pp_periodo_id], map: "pp_periodo_id")
  @@index([pp_programa_id], map: "pp_programa_id")
  @@index([turma_id], map: "turma_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pp_periodo {
  id                  Int                   @id @default(autoincrement())
  descricao           String                @db.VarChar(100)
  meses               String                @db.VarChar(30)
  created             DateTime              @db.DateTime(0)
  status              Boolean               @default(true)
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  pp_justificar_falta pp_justificar_falta[]
  pp_naolocalizado    pp_naolocalizado[]
  pp_prazo            pp_prazo[]
}

model pp_prazo {
  id            Int         @id @default(autoincrement())
  escola_id     Int?
  ano_letivo_id Int?
  pp_periodo_id Int
  ano           Int
  data_inicio   DateTime?   @db.Date
  data_fim      DateTime?   @db.Date
  status        Boolean     @default(true)
  created       DateTime    @db.DateTime(0)
  created_at    DateTime?   @db.DateTime(0)
  updated_at    DateTime    @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?   @db.DateTime(0)
  ano_letivo    ano_letivo? @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_prazo_fk_ano_letivo")
  escola        escola?     @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_prazo_fk_escola")
  pp_periodo    pp_periodo  @relation(fields: [pp_periodo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "pp_prazo_fk_pp_periodo")

  @@index([ano_letivo_id], map: "ano_letivo_id")
  @@index([escola_id], map: "escola_id")
  @@index([pp_periodo_id], map: "pp_periodo_id")
}

model pp_programa {
  id                  Int                   @id @default(autoincrement())
  sigla               String                @db.Char(10)
  nome                String                @db.VarChar(100)
  descricao           String                @db.VarChar(300)
  frequencia_min      Float
  idade_min           Int
  idade_max           Int
  created             DateTime              @db.DateTime(0)
  status              Boolean               @default(true)
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  pp_justificar_falta pp_justificar_falta[]
  pp_naolocalizado    pp_naolocalizado[]
}

model praticas_linguagem_campos {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(255)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model praticas_linguagem_eixos {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(255)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model prematricula {
  id         Int       @id @default(autoincrement())
  aluno_id   Int
  turma_id   Int
  data       DateTime  @db.Date
  status     Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model produto {
  id                             Int                              @id @default(autoincrement())
  unidade_medida_id              Int
  grupo_id                       Int
  escola_id                      Int?
  nome                           String                           @db.VarChar(50)
  descricao                      String?                          @db.VarChar(80)
  referencia                     String?                          @db.VarChar(50)
  created                        DateTime?                        @db.DateTime(0)
  status                         String?                          @db.Char(1)
  tipo                           String?                          @db.VarChar(50)
  calorias                       Decimal?                         @db.Decimal(10, 3)
  preco                          Decimal?                         @db.Decimal(10, 3)
  perecivel                      Int?
  created_at                     DateTime?                        @db.DateTime(0)
  updated_at                     DateTime                         @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                        @db.DateTime(0)
  entrada_produto                entrada_produto[]
  estoque                        estoque[]
  grupo                          grupo                            @relation(fields: [grupo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_produto_grupo1")
  unidade_medida                 unidade_medida                   @relation(fields: [unidade_medida_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_produto_unidade_medida1")
  produto_informacao_nutricional produto_informacao_nutricional[]
  refeicao_distribuicao_produto  refeicao_distribuicao_produto[]
  refeicao_produto               refeicao_produto[]
  saida_produto                  saida_produto[]

  @@index([escola_id], map: "fk_produto_escola1")
  @@index([grupo_id], map: "fk_produto_grupo1")
  @@index([unidade_medida_id], map: "fk_produto_unidade_medida1")
}

model produto_informacao_nutricional {
  id                          Int                       @id @default(autoincrement())
  produto_id                  Int?
  produto_tipo_nutricional_id Int?
  valor                       Float?
  created                     DateTime?                 @db.DateTime(0)
  status                      Boolean?
  created_at                  DateTime?                 @db.DateTime(0)
  updated_at                  DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at                  DateTime?                 @db.DateTime(0)
  produto                     produto?                  @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "produto_informacao_nutricional_fk_produto")
  produto_tipo_nutricional    produto_tipo_nutricional? @relation(fields: [produto_tipo_nutricional_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "produto_informacao_nutricional_fk_produto_tipo_nutricional")

  @@index([produto_id], map: "produto_id")
  @@index([produto_tipo_nutricional_id], map: "produto_tipo_nutricional_id")
}

model produto_tipo_nutricional {
  id                             Int                              @id @default(autoincrement())
  nome                           String?                          @db.VarChar(50)
  unidade_medida                 String?                          @db.VarChar(10)
  created                        DateTime?                        @db.DateTime(0)
  status                         Boolean?
  created_at                     DateTime?                        @db.DateTime(0)
  updated_at                     DateTime                         @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                        @db.DateTime(0)
  produto_informacao_nutricional produto_informacao_nutricional[]
}

model professor_quadro_vagas {
  id                                      Int                                       @id @default(autoincrement()) @db.UnsignedInt
  servidor_id                             Int
  turno_geral_id                          Int
  status                                  Int                                       @default(1) @db.UnsignedTinyInt
  ano_letivo                              String?                                   @db.VarChar(10)
  created_at                              DateTime?                                 @db.DateTime(0)
  updated_at                              DateTime?                                 @default(now()) @db.Timestamp(0)
  servidor                                servidor                                  @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "professor_quadro_vagras_FK_servidor")
  professor_quadro_vagas_ciclo_disciplina professor_quadro_vagas_ciclo_disciplina[]

  @@index([servidor_id], map: "professor_quadro_vagras_FK_servidor")
  @@index([turno_geral_id], map: "turno_geral_id")
}

model professor_quadro_vagas_ciclo_disciplina {
  id                        Int                    @id @default(autoincrement())
  professor_quadro_vagas_id Int                    @default(0) @db.UnsignedInt
  ciclo_id                  Int?
  disciplinas_mec_id        Int?
  professor_quadro_vagas    professor_quadro_vagas @relation(fields: [professor_quadro_vagas_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_professor_quadro_vagas")
  ciclo                     ciclo?                 @relation(fields: [ciclo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "professor_quadro_vagas_ciclo_disciplina_FK_ciclo")
  disciplinas_mec           disciplinas_mec?       @relation(fields: [disciplinas_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "professor_quadro_vagas_ciclo_disciplina_FK_disciplina")

  @@index([professor_quadro_vagas_id], map: "FK_professor_quadro_vagas")
  @@index([ciclo_id], map: "professor_quadro_vagas_ciclo_disciplina_FK_ciclo")
  @@index([disciplinas_mec_id], map: "professor_quadro_vagas_ciclo_disciplina_FK_disciplina")
}

model programa_financiamento_escola {
  id                         Int                     @id @default(autoincrement())
  escola_id                  Int
  programas_financiamento_id Int
  created_at                 DateTime?               @db.DateTime(0)
  updated_at                 DateTime                @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime?               @db.DateTime(0)
  escola                     escola                  @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_programa_financiamento_escola_escola1")
  programas_financiamento    programas_financiamento @relation(fields: [programas_financiamento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_programa_financiamento_escola_programas_financiamento1")

  @@index([escola_id], map: "fk_programa_financiamento_escola_escola1")
  @@index([programas_financiamento_id], map: "fk_programa_financiamento_escola_programas_financiamento1")
}

model programa_social {
  id                      Int                  @id @default(autoincrement())
  aluno_id                Int
  programa_social_tipo_id Int                  @db.TinyInt
  data_inicio             DateTime?            @db.DateTime(0)
  data_final              DateTime?            @db.DateTime(0)
  responsavel_id          Int
  situacao                String               @db.VarChar(30)
  created_at              DateTime             @default(now()) @db.DateTime(0)
  updated_at              DateTime             @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?            @db.DateTime(0)
  aluno                   aluno                @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "progr_social_fk_aluno")
  programa_social_tipo    programa_social_tipo @relation(fields: [programa_social_tipo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "progr_social_fk_ps_tipo")
  pessoas                 pessoas              @relation(fields: [responsavel_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "progr_social_fk_responsavel")

  @@index([aluno_id], map: "progr_social_fk_aluno")
  @@index([programa_social_tipo_id], map: "progr_social_fk_ps_tipo")
  @@index([responsavel_id], map: "progr_social_fk_responsavel")
}

model programa_social_tipo {
  id              Int               @id @default(autoincrement()) @db.TinyInt
  nome            String            @db.VarChar(50)
  status          Int
  created_at      DateTime          @default(now()) @db.DateTime(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.DateTime(0)
  programa_social programa_social[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model programas_financiamento {
  id                            Int                             @id @default(autoincrement())
  orgaos_responsavel_recurso_id Int
  nome                          String?                         @db.VarChar(100)
  descricao                     String?                         @db.Text
  aplicacao                     String?                         @db.Text
  condicoes_aderir              String?                         @db.Text
  created                       DateTime?                       @db.DateTime(0)
  status                        String?                         @db.Char(1)
  escola_id                     Int?
  created_at                    DateTime?                       @db.DateTime(0)
  updated_at                    DateTime                        @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime?                       @db.DateTime(0)
  programa_financiamento_escola programa_financiamento_escola[]
  escola                        escola?                         @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_programas_financiamento_FK_escola")
  orgaos_responsavel_recurso    orgaos_responsavel_recurso      @relation(fields: [orgaos_responsavel_recurso_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_programas_financiamento_orgaos_responsavel_recurso1")
  recurso                       recurso[]
  recurso_entrada               recurso_entrada[]

  @@index([escola_id], map: "fk_programas_financiamento_FK_escola")
  @@index([orgaos_responsavel_recurso_id], map: "fk_programas_financiamento_orgaos_responsavel_recurso1")
}

model programas_sociais_escola {
  id         Int       @id @default(autoincrement())
  escola_id  Int?
  nome       String?   @db.VarChar(50)
  tipo       String?   @db.VarChar(50)
  descricao  String?   @db.TinyText
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  escola     escola?   @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_escola")

  @@index([escola_id], map: "fk_escola")
}

model projeto_didatico {
  id                             Int                      @id @default(autoincrement())
  escola_id                      Int?
  disciplina_turma_id            Int?
  tema                           String?                  @db.VarChar(100)
  nome_professor                 String?                  @db.VarChar(100)
  data_inicio                    DateTime?                @db.Date
  data_fim                       DateTime?                @db.Date
  quantidade_alunos              String?                  @db.Char(4)
  componente_curricular_envolvdo String?                  @db.Text
  resumo_projeto                 String?                  @db.Text
  resultado                      String?                  @db.Text
  observacao                     String?                  @db.Text
  objetivo                       String?                  @db.Text
  created                        DateTime?                @db.DateTime(0)
  status                         String?                  @db.Char(1)
  created_at                     DateTime?                @db.DateTime(0)
  updated_at                     DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                @db.DateTime(0)
  aluno_projeto_didatico         aluno_projeto_didatico[]
  turma_disciplina               turma_disciplina?        @relation(fields: [disciplina_turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_projeto_didatico_disciplina_turma_id")
  escola                         escola?                  @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_projeto_didatico_escola_id")

  @@index([disciplina_turma_id], map: "FK_projeto_didatico_disciplina_turma_id")
  @@index([escola_id], map: "FK_projeto_didatico_escola_id")
}

model projeto_politico_pedagogico {
  id                          Int       @id @default(autoincrement())
  escola_id                   Int?
  escola_nome                 String?   @db.Text
  entidade_mantedora          String?   @db.Text
  ano_letivo_desc             String?   @db.Text
  ano_letivo_id               Int?
  historia                    String?   @db.Text
  visao                       String?   @db.Text
  missao                      String?   @db.Text
  valores                     String?   @db.Text
  marco_legal                 String?   @db.Text
  concepcoes_filosoficas      String?   @db.Text
  descricao_discentes         String?   @db.Text
  resultados_alcancados       String?   @db.Text
  dificuldades_processo       String?   @db.Text
  estrategia_apoio            String?   @db.Text
  educacao_infatil            String?   @db.Text
  ensino_fundamental_inicio   String?   @db.Text
  ensino_fudamental_final     String?   @db.Text
  educacao_jovem              String?   @db.Text
  metodologia_ensino          String?   @db.Text
  avaliacao_aprendizagem      String?   @db.Text
  organizacao_administrativa  String?   @db.Text
  corpo_docente               String?   @db.Text
  orgaos                      String?   @db.Text
  principios_convivencia      String?   @db.Text
  metas_acoes                 String?   @db.Text
  avaliacao_projeto           String?   @db.Text
  consideracoes_finais        String?   @db.Text
  referencias_consultadas     String?   @db.Text
  relacao_nominal_file        String?   @db.Text
  regimento_escolar_file      String?   @db.Text
  projetos_desenvolvidos_file String?   @db.Text
  estrutura_curricular_file   String?   @db.Text
  proposta_curricular_file    String?   @db.Text
  created_at                  DateTime? @db.DateTime(0)
  updated_at                  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                  DateTime? @db.DateTime(0)

  @@index([ano_letivo_id], map: "ano_letivo_id")
  @@index([escola_id], map: "escola_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model protocolo {
  id                     Int                      @id @default(autoincrement())
  numero_documento       String?                  @db.VarChar(12)
  usuario_id             Int
  created                DateTime                 @db.DateTime(0)
  tipo                   String                   @db.VarChar(50)
  registro_id            Int?
  referencia             String?                  @db.VarChar(100)
  observacao             String                   @db.Text
  created_at             DateTime?                @db.DateTime(0)
  updated_at             DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?                @db.DateTime(0)
  afastamento            afastamento?
  afastamento_v3         afastamento_v3?
  protocolo_movimentacao protocolo_movimentacao[]
  substituicao           substituicao[]
}

model protocolo_movimentacao {
  id           Int       @id @default(autoincrement())
  protocolo_id Int
  usuario_id   Int       @db.UnsignedInt
  observacao   String    @db.Text
  situacao     Int
  created      DateTime  @db.DateTime(0)
  status       Boolean
  created_at   DateTime? @db.DateTime(0)
  updated_at   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at   DateTime? @db.DateTime(0)
  protocolo    protocolo @relation(fields: [protocolo_id], references: [id], onUpdate: Restrict, map: "protocolo_movimentacao_ibfk_1")
  usuarios     usuarios  @relation(fields: [usuario_id], references: [id], onUpdate: Restrict, map: "protocolo_movimentacao_ibfk_2")

  @@index([protocolo_id], map: "protocolo_movimentacao_fk_protocolo")
  @@index([usuario_id], map: "protocolo_movimentacao_fk_usuario")
}

model provinha_aluno {
  id                        Int                        @id @default(autoincrement())
  nivel_desempenho_id       Int?
  provinha_lancamento_id    Int
  matricula_id              Int
  qtd_acertos               Int?
  faltou                    String?                    @db.VarChar(1)
  created_at                DateTime?                  @db.DateTime(0)
  updated_at                DateTime?                  @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                  @db.DateTime(0)
  provinha_nivel_desempenho provinha_nivel_desempenho? @relation(fields: [nivel_desempenho_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "provinha_aluno_fk_nivel_desempenho")
  provinha_lancamento       provinha_lancamento        @relation(fields: [provinha_lancamento_id], references: [id], onUpdate: Restrict, map: "provinha_aluno_fk_provinha_lancamento")

  @@index([nivel_desempenho_id], map: "provinha_aluno_fk_nivel_desempenho")
  @@index([provinha_lancamento_id], map: "provinha_aluno_fk_provinha_lancamento")
}

model provinha_brasil {
  id                  Int                   @id @default(autoincrement())
  ano_id              Int
  ano_letivo_id       Int
  descricao           String                @db.VarChar(200)
  data_inicio         DateTime              @db.Date
  data_fim            DateTime              @db.Date
  qtd_questoes        Int
  situacao            Int
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime?             @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  provinha_lancamento provinha_lancamento[]
}

model provinha_lancamento {
  id                 Int              @id @default(autoincrement())
  provinha_brasil_id Int
  turma_id           Int
  created_at         DateTime?        @db.DateTime(0)
  updated_at         DateTime?        @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?        @db.DateTime(0)
  provinha_aluno     provinha_aluno[]
  provinha_brasil    provinha_brasil  @relation(fields: [provinha_brasil_id], references: [id], onUpdate: Restrict, map: "provinha_lancamento_fk_provinha_brasil")

  @@index([provinha_brasil_id], map: "provinha_lancamento_fk_provinha_brasil")
}

model provinha_nivel_desempenho {
  id             Int              @id @default(autoincrement())
  descricao      String           @db.VarChar(50)
  grupo          String
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime?        @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  provinha_aluno provinha_aluno[]
}

model quadro_vagas_escola {
  id                          Int                      @id @default(autoincrement())
  escola_id                   Int?
  nome_vaga                   String?                  @db.VarChar(50)
  tipo_vagas                  String?
  cargo_mec_id                Int?
  turno                       String?
  projeto_ensino              String?                  @db.VarChar(50)
  disciplina_id               Int?
  quantidade_vagas            String?                  @db.Char(5)
  quantidade_vagas_disponivel String?                  @db.Char(5)
  quantidade_vagas_ocupada    String?                  @default("0") @db.Char(5)
  aulas                       String?                  @db.Char(10)
  data_inicio                 DateTime?                @db.Date
  data_fim                    DateTime?                @db.Date
  created                     DateTime?                @db.DateTime(0)
  status                      String?                  @db.Char(1)
  created_at                  DateTime?                @db.DateTime(0)
  updated_at                  DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at                  DateTime?                @db.DateTime(0)
  cargos_mec                  cargos_mec?              @relation(fields: [cargo_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_quadro_vagas_cargo_mec_id")
  disciplinas_mec             disciplinas_mec?         @relation(fields: [disciplina_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_quadro_vagas_disciplina_id")
  escola                      escola?                  @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_quadro_vagas_escola_id")
  servidor_funcao_escola      servidor_funcao_escola[]

  @@index([cargo_mec_id], map: "FK_quadro_vagas_cargo_mec_id")
  @@index([disciplina_id], map: "FK_quadro_vagas_disciplina_id")
  @@index([escola_id], map: "FK_quadro_vagas_escola_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model recado {
  id                                                        Int              @id @default(autoincrement())
  remetente_id                                              Int
  remetente_tipo                                            String           @db.VarChar(50)
  recado                                                    String           @db.VarChar(1000)
  data                                                      DateTime         @db.DateTime(0)
  tipo                                                      String           @db.Char(1)
  status                                                    String           @db.Char(1)
  created_at                                                DateTime?        @db.DateTime(0)
  updated_at                                                DateTime         @default(now()) @db.Timestamp(0)
  deleted_at                                                DateTime?        @db.DateTime(0)
  recado_destino_recado_destino_recado_idTorecado           recado_destino[] @relation("recado_destino_recado_idTorecado")
  recado_destino_recado_destino_recado_principal_idTorecado recado_destino[] @relation("recado_destino_recado_principal_idTorecado")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model recado_destino {
  id                                                Int       @id @default(autoincrement())
  recado_id                                         Int
  recado_principal_id                               Int?
  receptor_id                                       Int
  receptor_tipo                                     String    @db.VarChar(50)
  situacao                                          String
  created_at                                        DateTime? @db.DateTime(0)
  updated_at                                        DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                                        DateTime? @db.DateTime(0)
  recado_recado_destino_recado_idTorecado           recado    @relation("recado_destino_recado_idTorecado", fields: [recado_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "recado_destino_recado1")
  recado_recado_destino_recado_principal_idTorecado recado?   @relation("recado_destino_recado_principal_idTorecado", fields: [recado_principal_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "recado_destino_recado_principal1")

  @@index([recado_id], map: "recado_destino_recado1")
  @@index([recado_principal_id], map: "recado_destino_recado_principal1")
}

model recurso {
  id                        Int                        @id @default(autoincrement())
  programa_financiamento_id Int?
  nome                      String?                    @db.VarChar(200)
  descricao                 String?                    @db.Text
  created                   DateTime?                  @db.DateTime(0)
  status                    Boolean                    @default(true)
  created_at                DateTime?                  @db.DateTime(0)
  updated_at                DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                  @db.DateTime(0)
  contas_bancaria           contas_bancaria[]
  finan_lancamento_parcela  finan_lancamento_parcela[]
  programas_financiamento   programas_financiamento?   @relation(fields: [programa_financiamento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "recurso_fk_programas_financiamento")

  @@index([programa_financiamento_id], map: "recurso_fk_programas_financiamento")
}

model recurso_entrada {
  id                         Int                      @id @default(autoincrement())
  escola_id                  Int
  programas_financiamento_id Int?
  caixa_escolar_id           Int?
  tipo_financiamento         String?
  descricao                  String?                  @db.Text
  observacao                 String?                  @db.Text
  valor                      Decimal?                 @db.Decimal(10, 3)
  data_entrada               DateTime?                @db.Date
  descricao_recurso_privada  String?                  @db.Text
  cancelado                  Boolean?
  transparencia              Boolean?
  valor_somado               Decimal?                 @db.Decimal(10, 3)
  plano_conta_id             Int?
  contas_bancaria_id         Int?
  created_at                 DateTime?                @db.DateTime(0)
  updated_at                 DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime?                @db.DateTime(0)
  caixa_escolar              caixa_escolar?           @relation(fields: [caixa_escolar_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_recurso_entrada_caixa_escolar1")
  escola                     escola                   @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_recurso_entrada_escola1")
  programas_financiamento    programas_financiamento? @relation(fields: [programas_financiamento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_recurso_entrada_programas_financiamento1")

  @@index([caixa_escolar_id], map: "fk_recurso_entrada_caixa_escolar1")
  @@index([escola_id], map: "fk_recurso_entrada_escola1")
  @@index([programas_financiamento_id], map: "fk_recurso_entrada_programas_financiamento1")
}

model refeicao {
  id                                            Int                          @id @default(autoincrement())
  escola_id                                     Int?
  ano_letivo_id                                 Int?
  nome                                          String                       @db.VarChar(100)
  descricao                                     String                       @db.Text
  modo_preparo                                  String?                      @db.Text
  total_calorias                                Float?
  custo_total                                   Float?
  qtd_serve                                     Float?
  created                                       DateTime?                    @db.DateTime(0)
  status                                        String?                      @db.Char(1)
  created_at                                    DateTime?                    @db.DateTime(0)
  updated_at                                    DateTime                     @default(now()) @db.Timestamp(0)
  deleted_at                                    DateTime?                    @db.DateTime(0)
  cardapio_cardapio_refeicao_manha_idTorefeicao cardapio[]                   @relation("cardapio_refeicao_manha_idTorefeicao")
  cardapio_cardapio_refeicao_noite_idTorefeicao cardapio[]                   @relation("cardapio_refeicao_noite_idTorefeicao")
  cardapio_cardapio_refeicao_tarde_idTorefeicao cardapio[]                   @relation("cardapio_refeicao_tarde_idTorefeicao")
  escola                                        escola?                      @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_refeicao_escola1")
  refeicao_cardapio_refeicao                    refeicao_cardapio_refeicao[]
  refeicao_produto                              refeicao_produto[]
  refeicoes_cardapio                            refeicoes_cardapio[]

  @@index([escola_id], map: "fk_refeicao_escola1")
}

model refeicao_cardapio {
  id                             Int                              @id @default(autoincrement())
  nome                           String?                          @db.VarChar(200)
  descricao                      String?                          @db.Text
  custo_total                    Float?
  total_calorias                 Float?
  created                        DateTime?                        @db.DateTime(0)
  status                         Boolean?                         @default(true)
  created_at                     DateTime?                        @db.DateTime(0)
  updated_at                     DateTime                         @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                        @db.DateTime(0)
  refeicao_cardapio_diassemana   refeicao_cardapio_diassemana[]
  refeicao_cardapio_refeicao     refeicao_cardapio_refeicao[]
  refeicao_distribuicao_cardapio refeicao_distribuicao_cardapio[]
  refeicoes_cardapio             refeicoes_cardapio[]
}

model refeicao_cardapio_diassemana {
  id                   Int               @id @default(autoincrement())
  refeicao_cardapio_id Int
  dia_semana           Int
  created              DateTime          @db.DateTime(0)
  status               Boolean           @default(true)
  created_at           DateTime?         @db.DateTime(0)
  updated_at           DateTime          @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?         @db.DateTime(0)
  refeicao_cardapio    refeicao_cardapio @relation(fields: [refeicao_cardapio_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicao_cardapio_diassemana_fk_refeicao_cardapio")

  @@index([refeicao_cardapio_id], map: "refeicao_cardapio_id")
}

model refeicao_cardapio_refeicao {
  id                   Int               @id @default(autoincrement())
  refeicao_cardapio_id Int
  refeicao_id          Int
  nome_refeicao        String            @db.VarChar(200)
  hora_inicio          DateTime?         @db.Time(0)
  hora_fim             DateTime?         @db.Time(0)
  created              DateTime?         @db.DateTime(0)
  status               Boolean?
  created_at           DateTime?         @db.DateTime(0)
  updated_at           DateTime          @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?         @db.DateTime(0)
  refeicao             refeicao          @relation(fields: [refeicao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicao_cardapio_refeicao_fk_refeicao")
  refeicao_cardapio    refeicao_cardapio @relation(fields: [refeicao_cardapio_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicao_cardapio_refeicao_fk_refeicao_cardapio")

  @@index([refeicao_cardapio_id], map: "refeicao_cardapio")
  @@index([refeicao_id], map: "refeicao_id")
}

model refeicao_distribuicao {
  id                             Int                              @id @default(autoincrement())
  data_inicio                    DateTime                         @db.Date
  data_fim                       DateTime                         @db.Date
  custo_total                    Float?
  created                        DateTime?                        @db.DateTime(0)
  status                         Boolean?
  created_at                     DateTime?                        @db.DateTime(0)
  updated_at                     DateTime                         @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                        @db.DateTime(0)
  refeicao_distribuicao_cardapio refeicao_distribuicao_cardapio[]
  refeicao_distribuicao_escola   refeicao_distribuicao_escola[]
  refeicao_distribuicao_produto  refeicao_distribuicao_produto[]
}

model refeicao_distribuicao_cardapio {
  id                       Int                   @id @default(autoincrement())
  refeicao_distribuicao_id Int
  refeicao_cardapio_id     Int
  dias_semana              String                @db.VarChar(20)
  created                  DateTime?             @db.DateTime(0)
  status                   Boolean?
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  refeicao_cardapio        refeicao_cardapio     @relation(fields: [refeicao_cardapio_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicao_distribuicao_cardapio_fk_refeicao_cardapio")
  refeicao_distribuicao    refeicao_distribuicao @relation(fields: [refeicao_distribuicao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicao_distribuicao_cardapio_fk_refeicao_distribuicao")

  @@index([refeicao_cardapio_id], map: "refeicao_cardapio_id")
  @@index([refeicao_distribuicao_id], map: "refeicao_distribuicao_id")
}

model refeicao_distribuicao_escola {
  id                       Int                   @id @default(autoincrement())
  refeicao_distribuicao_id Int
  escola_id                Int
  created                  DateTime?             @db.DateTime(0)
  status                   Boolean?
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  escola                   escola                @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicao_distribuicao_escola_fk_escola")
  refeicao_distribuicao    refeicao_distribuicao @relation(fields: [refeicao_distribuicao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicao_distribuicao_escola_fk_refeicao_distribuicao")

  @@index([escola_id], map: "escola_id")
  @@index([refeicao_distribuicao_id], map: "refeicao_distribuicao_id")
}

model refeicao_distribuicao_produto {
  id                       Int                   @id @default(autoincrement())
  refeicao_distribuicao_id Int
  produto_id               Int
  qtd                      Float?
  valor_unitario           Float?
  custo_total              Float?
  created                  DateTime?             @db.DateTime(0)
  status                   Boolean?
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  produto                  produto               @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicao_distribuicao_produto_fk_produto")
  refeicao_distribuicao    refeicao_distribuicao @relation(fields: [refeicao_distribuicao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicao_distribuicao_produto_fk_refeicao_distribuicao")

  @@index([produto_id], map: "produto_id")
  @@index([refeicao_distribuicao_id], map: "refeicao_distribuicao_id")
}

model refeicao_produto {
  id          Int       @id @default(autoincrement())
  refeicao_id Int
  produto_id  Int
  qtd         Decimal?  @db.Decimal(10, 2)
  created     DateTime? @db.DateTime(0)
  status      Boolean?
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  produto     produto   @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_produtos_refeicao_produto1")
  refeicao    refeicao  @relation(fields: [refeicao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_produtos_refeicao_refeicao1")

  @@index([produto_id], map: "fk_produtos_refeicao_produto1")
  @@index([refeicao_id], map: "fk_produtos_refeicao_refeicao1")
}

model refeicoes_cardapio {
  id                   Int               @id @default(autoincrement())
  refeicao_cardapio_id Int
  refeicao_id          Int
  nome                 String?           @db.VarChar(150)
  hora_inicio          DateTime?         @db.Time(0)
  hora_fim             DateTime?         @db.Time(0)
  created              DateTime          @db.DateTime(0)
  status               Boolean           @default(true)
  created_at           DateTime?         @db.DateTime(0)
  updated_at           DateTime          @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?         @db.DateTime(0)
  refeicao             refeicao          @relation(fields: [refeicao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicoes_cardapio_fk_refeicao")
  refeicao_cardapio    refeicao_cardapio @relation(fields: [refeicao_cardapio_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "refeicoes_cardapio_fk_refeicao_cardapio")

  @@index([refeicao_cardapio_id], map: "refeicao_cardapio_id")
  @@index([refeicao_id], map: "refeicao_id")
}

model regiao_municipio {
  id         Int       @id @default(autoincrement())
  cidade_id  Int?
  nome       String?   @db.VarChar(50)
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  cidade     cidade?   @relation(fields: [cidade_id], references: [id], onUpdate: SetNull, map: "fk_regiao_cidade")

  @@index([cidade_id], map: "fk_regiao_cidade")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model registro_escolar {
  id                         Int                          @id @default(autoincrement())
  registro_escolar_tipo_id   Int
  descricao                  String                       @db.VarChar(250)
  link                       String                       @db.VarChar(500)
  situacao                   Int?
  created_at                 DateTime?                    @db.DateTime(0)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime?                    @db.DateTime(0)
  registro_escolar_tipo      registro_escolar_tipo        @relation(fields: [registro_escolar_tipo_id], references: [id], onUpdate: Restrict, map: "FK_registro_escolar_tipo_id")
  registro_escolar_municipio registro_escolar_municipio[]

  @@index([registro_escolar_tipo_id], map: "registro_escolar_tipo_id")
}

model registro_escolar_municipio {
  id                  Int              @id @default(autoincrement())
  registro_escolar_id Int
  cidade_id           Int
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  cidade              cidade           @relation(fields: [cidade_id], references: [id], onUpdate: Restrict, map: "FK_cidade_id")
  registro_escolar    registro_escolar @relation(fields: [registro_escolar_id], references: [id], onUpdate: Restrict, map: "FK_registro_escolar_id")

  @@index([cidade_id], map: "FK_cidade_id")
  @@index([registro_escolar_id], map: "FK_registro_escolar_id")
}

model registro_escolar_tipo {
  id               Int                @id @default(autoincrement())
  descricao        String             @db.VarChar(250)
  sigla            String             @db.VarChar(5)
  created_at       DateTime?          @db.DateTime(0)
  updated_at       DateTime           @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?          @db.DateTime(0)
  registro_escolar registro_escolar[]
}

model relatorio_consolidado {
  id               Int       @id @default(autoincrement()) @db.UnsignedInt
  classe           String    @db.VarChar(50)
  chave_relatorio  String    @db.VarChar(50)
  filtros          String    @db.Text
  titulo_relatorio String    @db.VarChar(200)
  label_relatorio  String    @db.VarChar(200)
  dados            String    @db.LongText
  created_at       DateTime  @db.DateTime(0)
  updated_at       DateTime  @default(now()) @db.Timestamp(0)
  deleted_at       DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model remanejamento {
  id                            Int                    @id @default(autoincrement())
  servidor_cargo_escola_id      Int
  novo_servidor_cargo_escola_id Int?
  escola_id                     Int?
  escola_nome                   String?                @db.VarChar(50)
  portaria                      String?                @db.VarChar(50)
  processo_numero               String?                @db.VarChar(50)
  oficio                        String?                @db.VarChar(50)
  anexo_oficio                  String?                @db.VarChar(255)
  carta_de_apresentacao         String?                @db.VarChar(50)
  local_externo_nome            String?                @db.VarChar(50)
  nucleo_id                     Int?                   @db.UnsignedSmallInt
  cargo_mec_id                  Int
  funcao_mec_id                 Int?
  remanejamento_situacao_id     Int                    @default(1) @db.TinyInt
  protocolo_id                  Int
  status                        Boolean
  data_solicitacao              DateTime?              @db.DateTime(0)
  data_remanejamento            DateTime?              @db.DateTime(0)
  data_alteracao                DateTime?              @db.DateTime(0)
  created_at                    DateTime?              @db.DateTime(0)
  updated_at                    DateTime               @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime?              @db.DateTime(0)
  nucleo                        nucleo?                @relation(fields: [nucleo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_remanejamento_nucleo")
  remanejamento_situacao        remanejamento_situacao @relation(fields: [remanejamento_situacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "remanejamento_ibfk_5")
  servidor_cargo_escola         servidor_cargo_escola  @relation(fields: [servidor_cargo_escola_id], references: [id], onUpdate: Restrict, map: "remanejamento_ibfk_6")
  escola                        escola?                @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "remanejamento_ibfk_7")
  cargos_mec                    cargos_mec             @relation(fields: [cargo_mec_id], references: [id], onUpdate: Restrict, map: "remanejamento_ibfk_8")
  funcoes_mec                   funcoes_mec?           @relation(fields: [funcao_mec_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "remanejamento_ibfk_9")

  @@index([servidor_cargo_escola_id], map: "fk_alocacaoAtual_remanejamento_sevidorCargoEscola")
  @@index([cargo_mec_id], map: "fk_pretensaoCargoMecId_remanejamento_cargosMec")
  @@index([escola_id], map: "fk_pretensaoEscolaId_remanejamento_escola")
  @@index([funcao_mec_id], map: "fk_pretensaoFuncaoMecId_remanejamento_funcoesMec")
  @@index([remanejamento_situacao_id], map: "fk_situacaoRemanejamentoId_remanejamento_remanejamentoSituacao")
  @@index([nucleo_id], map: "nucleo_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model remanejamento_aluno {
  id                 Int       @id @default(autoincrement())
  escola_id          Int?
  ano_letivo_id      Int?
  turma_id_origem    Int?
  turma_id_destino   Int?
  data_remanejamento DateTime? @db.Date
  created            DateTime? @db.DateTime(0)
  motivo             String?   @db.Text
  situacao           String?
  aluno_id           Int?
  matricula_id       Int?
  nova_matricula_id  Int?
  created_at         DateTime? @db.DateTime(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model remanejamento_situacao {
  id            Int             @id @default(autoincrement()) @db.TinyInt
  nome          String          @db.VarChar(20)
  cor           String          @db.VarChar(6)
  fonte         String          @db.VarChar(6)
  gera_portaria Int
  nivel_atual   Int
  proximo_nivel String?         @db.VarChar(50)
  created_at    DateTime?       @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?       @db.DateTime(0)
  remanejamento remanejamento[]
}

model report_infeadreport {
  id               Int      @id @default(autoincrement())
  descricao        String   @db.LongText
  cliente          String   @db.VarChar(255)
  app              String   @db.VarChar(255)
  user             Int
  status           Int
  verbo_http       String   @db.VarChar(10)
  corpo_requisicao String   @db.LongText
  error_requisicao String   @db.LongText
  url_requisicao   String   @db.VarChar(200)
  created_at       DateTime @db.DateTime(6)
}

model resposta {
  id                     Int       @id @default(autoincrement()) @db.UnsignedInt
  resposta_referencia_id Int       @db.UnsignedInt
  pergunta_id            Int       @db.UnsignedInt
  item_pergunta_id       Int?      @db.MediumInt
  resposta               String?   @db.Text
  created                DateTime? @db.Date
  created_at             DateTime? @db.DateTime(0)
  updated_at             DateTime  @default(now()) @db.Timestamp(0)
  deleted_at             DateTime? @db.DateTime(0)
}

model resposta_conferencia_escola {
  id         Int       @id @default(autoincrement())
  usuario_id Int       @db.UnsignedInt
  escola_id  Int
  request    String    @db.Text
  created_at DateTime  @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  escola     escola    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "resposta_conferencia_escola__FK__escola")
  usuarios   usuarios  @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "resposta_conferencia_escola__FK__usuarios")

  @@index([escola_id], map: "resposta_conferencia_escola__FK__escola")
  @@index([usuario_id], map: "resposta_conferencia_escola__FK__usuarios")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model resposta_formulario_pesquisa {
  id                                  Int       @id @default(autoincrement())
  usuario_id                          Int       @db.UnsignedInt
  configuracao_formulario_pesquisa_id Int
  resposta                            Int       @db.TinyInt
  created_at                          DateTime? @db.DateTime(0)
  updated_at                          DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                          DateTime? @db.DateTime(0)

  @@index([configuracao_formulario_pesquisa_id], map: "resposta_formulario_pesquisa_FK_configuracao_formulario_pesquisa")
  @@index([usuario_id], map: "resposta_formulario_pesquisa_FK_usuarios")
}

model resposta_pergunta_planejamento {
  id                          Int                          @id @default(autoincrement())
  resposta                    Int?
  outros                      String?                      @db.Text
  id_servidor                 Int?
  id_pergunta                 Int?
  id_resposta                 Int?
  id_planejamento             Int?
  servidor                    servidor?                    @relation(fields: [id_servidor], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "resposta_pergunta_planejamento_ibfk_1")
  pergunta_planejamento       pergunta_planejamento?       @relation(fields: [id_pergunta], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "resposta_pergunta_planejamento_ibfk_2")
  item_pergunta_planejamento  item_pergunta_planejamento?  @relation(fields: [id_resposta], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "resposta_pergunta_planejamento_ibfk_3")
  turma_planejamento_objetivo turma_planejamento_objetivo? @relation(fields: [id_planejamento], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "resposta_pergunta_planejamento_ibfk_4")

  @@index([id_pergunta], map: "id_pergunta")
  @@index([id_planejamento], map: "id_planejamento")
  @@index([id_resposta], map: "id_resposta")
  @@index([id_servidor], map: "id_servidor")
}

model resposta_referencia {
  id                       Int       @id @default(autoincrement()) @db.UnsignedInt
  formulario_referencia_id Int       @db.UnsignedInt
  objeto_id                Int?      @db.UnsignedInt
  objeto_nome              String?   @db.VarChar(75)
  matricula_id             Int?
  ip_origem                String?   @db.VarChar(75)
  created                  DateTime? @db.Date
  created_at               DateTime? @db.DateTime(0)
  updated_at               DateTime  @default(now()) @db.Timestamp(0)
  deleted_at               DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rota {
  id                        Int                         @id @default(autoincrement())
  nome                      String?                     @db.VarChar(50)
  percurso_id               Int?
  data_inicio_rota          DateTime?                   @db.Date
  data_final_rota           DateTime?                   @db.Date
  created                   DateTime?                   @db.DateTime(0)
  status                    Boolean?                    @default(false)
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.DateTime(0)
  matricula                 matricula[]
  percurso                  percurso?                   @relation(fields: [percurso_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rota_percurso")
  rota_aluno                rota_aluno[]
  rota_motorista_veiculo    rota_motorista_veiculo[]
  rota_servidor             rota_servidor[]
  transporte_motorista_rota transporte_motorista_rota[]
  veiculo_rota              veiculo_rota[]

  @@index([percurso_id], map: "fk_rota_percurso")
  @@index([created], map: "index_trecho_created")
}

model rota_aluno {
  id         Int       @id @default(autoincrement())
  rota_id    Int?
  aluno_id   Int?
  created    DateTime? @db.DateTime(0)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  aluno      aluno?    @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rotaaluno_aluno")
  rota       rota?     @relation(fields: [rota_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rotaaluno_rota")

  @@index([aluno_id], map: "fk_rotaaluno_aluno")
  @@index([rota_id], map: "fk_rotaaluno_rota")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model rota_diassemana {
  id                           Int                        @id @default(autoincrement())
  veiculo_rota_id              Int?
  transporte_motorista_rota_id Int?
  rota_motorista_veiculo_id    Int?                       @db.UnsignedInt
  dia_semana                   Int
  created                      DateTime                   @db.DateTime(0)
  created_at                   DateTime?                  @db.DateTime(0)
  updated_at                   DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at                   DateTime?                  @db.DateTime(0)
  transporte_motorista_rota    transporte_motorista_rota? @relation(fields: [transporte_motorista_rota_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_rota_diassemana_transporte_motorista_rota")
  rota_motorista_veiculo       rota_motorista_veiculo?    @relation(fields: [rota_motorista_veiculo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rota_diassemana_FK_rota_motorista_veiculo")
  veiculo_rota                 veiculo_rota?              @relation(fields: [veiculo_rota_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "rota_diassemana_ibfk_1")
  rota_horario                 rota_horario[]

  @@unique([veiculo_rota_id, dia_semana], map: "rota_semana_unique")
  @@index([rota_motorista_veiculo_id], map: "rota_diassemana_FK_rota_motorista_veiculo")
  @@index([veiculo_rota_id], map: "rota_id")
  @@index([transporte_motorista_rota_id], map: "transporte_motorista_rota_id")
}

model rota_horario {
  id              Int             @id @default(autoincrement())
  dia_semana_id   Int
  horario_ordem   Int?
  horario         DateTime        @db.Time(0)
  created_at      DateTime?       @db.DateTime(0)
  updated_at      DateTime        @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?       @db.DateTime(0)
  rota_diassemana rota_diassemana @relation(fields: [dia_semana_id], references: [id], onUpdate: Restrict, map: "rota_horario_ibfk_2")

  @@index([dia_semana_id], map: "dia_semana_id")
}

model rota_motorista_veiculo {
  id                      Int                  @id @default(autoincrement()) @db.UnsignedInt
  rota_id                 Int
  transporte_motorista_id Int
  veiculo_id              Int
  created_at              DateTime             @db.DateTime(0)
  updated_at              DateTime             @db.DateTime(0)
  deleted_at              DateTime?            @db.DateTime(0)
  rota_diassemana         rota_diassemana[]
  rota                    rota                 @relation(fields: [rota_id], references: [id], onUpdate: Restrict, map: "rota_motorista_veiculo_FK_rota")
  transporte_motorista    transporte_motorista @relation(fields: [transporte_motorista_id], references: [id], onUpdate: Restrict, map: "rota_motorista_veiculo_FK_transporte_motorista")
  veiculo                 veiculo              @relation(fields: [veiculo_id], references: [id], onUpdate: Restrict, map: "rota_motorista_veiculo_FK_veiculo")

  @@index([rota_id], map: "rota_motorista_veiculo_FK_rota")
  @@index([transporte_motorista_id], map: "rota_motorista_veiculo_FK_transporte_motorista")
  @@index([veiculo_id], map: "rota_motorista_veiculo_FK_veiculo")
}

model rota_servidor {
  id          Int       @id @default(autoincrement())
  rota_id     Int?
  servidor_id Int?
  created     DateTime? @db.DateTime(0)
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  rota        rota?     @relation(fields: [rota_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rotaservidor_rota")
  servidor    servidor? @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rotaservidor_servidor")

  @@index([servidor_id], map: "fk_rotaservidor_aluno")
  @@index([rota_id], map: "fk_rotaservidor_rota")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model saida {
  id                           Int             @id @default(autoincrement())
  estoque_id                   Int?
  setor_id                     Int?
  data_saida                   DateTime?       @db.Date
  qtd_saida                    Int?
  observacao                   String?         @db.Text
  cancelado                    String?         @db.Char(1)
  created                      DateTime?       @db.DateTime(0)
  qtd_saiu                     Int?
  escola_id                    Int?
  tipo_saida                   String?
  orgaos_saida_almoxarifado_id Int?
  escola_saida_id              Int?
  created_at                   DateTime?       @db.DateTime(0)
  updated_at                   DateTime        @default(now()) @db.Timestamp(0)
  deleted_at                   DateTime?       @db.DateTime(0)
  estoque                      estoque?        @relation(fields: [estoque_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_saida_estoque1")
  setor                        setor?          @relation(fields: [setor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_saida_setor1")
  saida_produto                saida_produto[]

  @@index([estoque_id], map: "fk_saida_estoque1")
  @@index([setor_id], map: "fk_saida_setor1")
}

model saida_produto {
  id         Int       @id @default(autoincrement())
  saida_id   Int
  produto_id Int
  quantidade Int?
  estoque_id Int?
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  estoque    estoque?  @relation(fields: [estoque_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_saida_produto_estoque1")
  produto    produto   @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_saida_produto_produto1")
  saida      saida     @relation(fields: [saida_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_saida_produto_saida1")

  @@index([estoque_id], map: "fk_saida_produto_estoque1")
  @@index([produto_id], map: "fk_saida_produto_produto1")
  @@index([saida_id], map: "fk_saida_produto_saida1")
}

model sala {
  id          Int       @id @default(autoincrement())
  escola_id   Int
  nome        String?   @db.VarChar(50)
  capacidade  Int?
  localizacao String?   @db.VarChar(80)
  created     DateTime? @db.DateTime(0)
  status      String?   @db.Char(1)
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  escola      escola    @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_classe_escola1")
  turma       turma[]

  @@index([escola_id], map: "fk_classe_escola1")
}

model secretaria_educacao {
  id                 Int       @id @default(autoincrement())
  nome_secretaria    String?   @db.VarChar(100)
  nome_secretario    String?   @db.VarChar(100)
  endereco           String?   @db.VarChar(50)
  complemento        String?   @db.VarChar(50)
  numero             String?   @db.VarChar(20)
  bairro             String?   @db.VarChar(50)
  latitude           String?   @db.VarChar(50)
  longitude          String?   @db.VarChar(50)
  cidade_id          Int?
  estado_id          Int?
  cep                String?   @db.Char(10)
  foto               String?   @db.VarChar(50)
  sigla              String?   @db.Char(10)
  logomarca          String?   @db.VarChar(50)
  logomarca_auxiliar String?   @db.VarChar(50)
  mapa_comunidade    String?   @db.VarChar(500)
  foto_comunidade    String?   @db.VarChar(50)
  created            DateTime? @db.DateTime(0)
  status             String?   @db.Char(1)
  created_at         DateTime? @db.DateTime(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.DateTime(0)
  cidade             cidade?   @relation(fields: [cidade_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_secretaria_educacao_cidade_id")
  estado             estado?   @relation(fields: [estado_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_secretaria_educacao_estado_id")

  @@index([cidade_id], map: "FK_secretaria_educacao_cidade_id")
  @@index([estado_id], map: "FK_secretaria_educacao_estado_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model servidor {
  id                                                                          Int                                    @id @default(autoincrement())
  escola_id                                                                   Int?
  situacao_servidor_id                                                        Int?
  estado_nascimento_id                                                        Int?
  cidade_nascimento_id                                                        Int?
  pais_id                                                                     Int?
  estado_id                                                                   Int?
  cidade_id                                                                   Int?
  nome                                                                        String?                                @db.VarChar(50)
  cpf                                                                         String?                                @db.Char(20)
  inep                                                                        String?                                @db.VarChar(50)
  email                                                                       String?                                @db.VarChar(50)
  senha                                                                       String?                                @db.VarChar(80)
  password                                                                    String?                                @db.VarChar(60)
  endereco                                                                    String?                                @db.VarChar(80)
  numero                                                                      String?                                @db.Char(20)
  bairro                                                                      String?                                @db.VarChar(50)
  cidade                                                                      String?                                @db.VarChar(50)
  uf                                                                          String?                                @db.Char(10)
  local                                                                       String?                                @db.VarChar(50)
  niv_escola                                                                  String?                                @db.VarChar(50)
  formacao                                                                    String?                                @db.VarChar(50)
  celular                                                                     String?                                @db.VarChar(50)
  telefone                                                                    String?                                @db.VarChar(50)
  cep                                                                         String?                                @db.VarChar(50)
  created                                                                     DateTime?                              @db.DateTime(0)
  status                                                                      String?                                @db.Char(1)
  rg                                                                          String?                                @db.VarChar(40)
  orgao_emissor                                                               String?                                @db.Char(10)
  estado_emissor                                                              String?                                @db.Char(5)
  pis_pasep                                                                   String?                                @db.VarChar(50)
  titulo_eleitor_numero                                                       String?                                @db.VarChar(50)
  secao                                                                       String?                                @db.Char(20)
  titulo_zona                                                                 String?                                @db.VarChar(50)
  municipio_titulo                                                            String?                                @db.VarChar(50)
  numero_certidao_nascimento                                                  String?                                @db.VarChar(50)
  livro                                                                       String?                                @db.VarChar(30)
  certidao_fl                                                                 String?                                @db.VarChar(50)
  cartorio                                                                    String?                                @db.VarChar(80)
  nome_pai                                                                    String?                                @db.VarChar(80)
  nome_mae                                                                    String?                                @db.VarChar(80)
  estadocivil                                                                 servidor_estadocivil?
  nome_conjuge                                                                String?                                @db.VarChar(80)
  certidao_casamento_numero                                                   String?                                @db.VarChar(50)
  cidade_nascimento                                                           String?                                @db.VarChar(200)
  estado_nascimento                                                           String?                                @db.VarChar(200)
  qtd_dependente                                                              Int?
  livro_casamento                                                             String?                                @db.VarChar(50)
  disposicao_outro_orgao                                                      String?                                @db.Char(1)
  nome_outro_orgao                                                            String?                                @db.VarChar(80)
  periodo                                                                     String?                                @db.VarChar(50)
  tipo_recebimento_outro_orgao                                                String?
  foto                                                                        String?                                @db.VarChar(255)
  foto_url                                                                    String?                                @db.VarChar(255)
  professor                                                                   String?                                @db.Char(1)
  qual_escolaridade                                                           String?                                @db.VarChar(80)
  certidao_fl_casamento                                                       String?                                @db.VarChar(30)
  cartorio_casamento                                                          String?                                @db.VarChar(60)
  carteira_trab                                                               String?                                @db.Char(30)
  carteira_serie                                                              String?                                @db.Char(30)
  data_nascimento                                                             DateTime?                              @db.Date
  funcao_principal                                                            String?                                @db.VarChar(100)
  nis                                                                         String?                                @db.VarChar(30)
  sus                                                                         String?                                @db.VarChar(15)
  sexo                                                                        String?
  cor_raca                                                                    String?
  nacionalidade                                                               String?
  zona                                                                        String?
  deficiencia                                                                 String?                                @db.Char(1)
  cegueira                                                                    String?                                @db.Char(1)
  baixa_visao                                                                 String?                                @db.Char(1)
  visao_monocular                                                             String?                                @db.Char(1)
  surdez                                                                      String?                                @db.Char(1)
  deficiencia_auditiva                                                        String?                                @db.Char(1)
  surdocegueira                                                               String?                                @db.Char(1)
  deficiencia_fisica                                                          String?                                @db.Char(1)
  deficiencia_intelectual                                                     String?                                @db.Char(1)
  deficiencia_multipla                                                        String?                                @db.Char(1)
  deficiencia_outro                                                           String?                                @db.Char(1)
  deficiencia_outro_nome                                                      String?                                @db.VarChar(80)
  complemento                                                                 String?                                @db.VarChar(80)
  resumo_profissional                                                         String?                                @db.Text
  escolaridade_id                                                             Int?
  situacao_curso_superior1                                                    String?
  formacao_complementacao_pedagogica1                                         String?                                @db.Char(1)
  curso_superior1_id                                                          String?                                @db.Char(20)
  ano_inicio_curso_superior1                                                  Int?
  ano_conclusao_curso_superior1                                               Int?
  tipo_instituicao_curso_superior1                                            String?
  instituicao_curso_superior1_id                                              Int?
  situacao_curso_superior2                                                    String?
  formacao_complementacao_pedagogica2                                         String?                                @db.Char(1)
  curso_superior2_id                                                          String?                                @db.Char(20)
  ano_inicio_curso_superior2                                                  Int?
  ano_conclusao_curso_superior2                                               Int?
  tipo_instituicao_curso_superior2                                            String?
  instituicao_curso_superior2_id                                              Int?
  situacao_curso_superior3                                                    String?
  formacao_complementacao_pedagogica3                                         String?                                @db.Char(1)
  curso_superior3_id                                                          String?                                @db.Char(20)
  ano_inicio_curso_superior3                                                  Int?
  ano_conclusao_curso_superior3                                               Int?
  tipo_instituicao_curso_superior3                                            String?
  instituicao_curso_superior3_id                                              Int?
  pos_especializacao                                                          String?                                @db.Char(1)
  pos_mestrado                                                                String?                                @db.Char(1)
  pos_doutorado                                                               String?                                @db.Char(1)
  pos_nenhum                                                                  String?                                @db.Char(1)
  outro_curso_especifico_creche                                               String?                                @db.Char(1)
  outro_curso_especifico_preescola                                            String?                                @db.Char(1)
  outro_curso_especifico_inicial_ensino_fundamental                           String?                                @db.Char(1)
  outro_curso_especifico_final_ensino_fundamental                             String?                                @db.Char(1)
  outro_curso_especifico_ensino_medio                                         String?                                @db.Char(1)
  outro_curso_especifico_jovens_adulto                                        String?                                @db.Char(1)
  outro_curso_especifico_especial                                             String?                                @db.Char(1)
  outro_curso_especifico_indigena                                             String?                                @db.Char(1)
  outro_curso_especifico_campo                                                String?                                @db.Char(1)
  outro_curso_especifico_ambiental                                            String?                                @db.Char(1)
  outro_curso_especifico_direito_humano                                       String?                                @db.Char(1)
  outro_curso_especifico_diversidade_sexual                                   String?                                @db.Char(1)
  outro_curso_direito_crianca_e_adolescente                                   String?                                @db.Char(1)
  outro_curso_relacoes_etnicorraciais                                         String?                                @db.Char(1)
  outro_curso_educacao_bilingue_surdos                                        String?                                @db.Char(1)
  outro_curso_educacao_tenologia_informacao_comunicacao                       String?                                @db.Char(1)
  outro_curso_outro                                                           String?                                @db.Char(1)
  outro_curso_nenhum                                                          String?                                @db.Char(1)
  status_senha                                                                String?                                @default("1") @db.Char(1)
  protocolo_senha                                                             String?                                @db.Char(18)
  tentativas_acesso_restante                                                  Int                                    @default(3) @db.TinyInt
  chave                                                                       String?                                @db.VarChar(50)
  remember_token                                                              String?                                @db.VarChar(255)
  ultima_data_acesso_suporte_eletronico                                       DateTime?                              @db.DateTime(0)
  ultima_data_acesso_professor_online                                         DateTime?                              @db.DateTime(0)
  created_at                                                                  DateTime?                              @db.DateTime(0)
  updated_at                                                                  DateTime                               @default(now()) @db.Timestamp(0)
  deleted_at                                                                  DateTime?                              @db.DateTime(0)
  is_teste                                                                    Boolean?                               @default(false)
  diario_bloqueado                                                            Boolean?                               @default(false)
  tipo_ensino_medio_cursado                                                   Int?
  outro_curso_gestao_escolar                                                  Int?                                   @db.TinyInt
  pais_endereco_id                                                            Int?
  localizacao_diferenciada                                                    Int?
  area_conhecimento_componente_curricular_1                                   Int?
  area_conhecimento_componente_curricular_2                                   Int?
  area_conhecimento_componente_curricular_3                                   Int?
  transtorno_espectro_autista                                                 String?                                @db.Char(1)
  superdotacao                                                                String?                                @db.Char(1)
  data_atualizacao_cadastral                                                  DateTime?                              @db.DateTime(0)
  renovou_senha                                                               Int?                                   @default(0) @db.TinyInt
  visualizouBanner                                                            Int?                                   @default(0) @db.TinyInt
  acesso_servidor_escola                                                      acesso_servidor_escola[]
  acompanhamento_acompanhantes                                                acompanhamento_acompanhantes[]
  acompanhamentos                                                             acompanhamentos[]
  acordo_nea_professor                                                        acordo_nea_professor[]
  almoxarifado_acompanhamento_situacao                                        almoxarifado_acompanhamento_situacao[]
  almoxarifado_pedido_escola                                                  almoxarifado_pedido_escola[]
  almoxarifado_pedido_secretaria                                              almoxarifado_pedido_secretaria[]
  aluno_diagnostico                                                           aluno_diagnostico[]
  aluno_planejamento_infantil_AEE                                             aluno_planejamento_infantil_AEE[]
  biblioteca_emprestimo                                                       biblioteca_emprestimo[]
  biblioteca_estrutura_biblioteca_estrutura_auxiliar_servidor_idToservidor    biblioteca_estrutura[]                 @relation("biblioteca_estrutura_auxiliar_servidor_idToservidor")
  biblioteca_estrutura_biblioteca_estrutura_responsavel_servidor_idToservidor biblioteca_estrutura[]                 @relation("biblioteca_estrutura_responsavel_servidor_idToservidor")
  casos_servidor                                                              casos_servidor[]
  certificado_emissao_pessoas                                                 certificado_emissao_pessoas[]
  comentarios_aula_gestor_professor                                           comentarios_aula_gestor_professor[]
  comentarios_planejamento                                                    comentarios_planejamento[]
  comentarios_planejamento_aee                                                comentarios_planejamento_aee[]
  comunicado_destinos                                                         comunicado_destinos[]
  coordenadores                                                               coordenadores[]
  dashboard_servidor_perfil                                                   dashboard_servidor_perfil[]
  disciplinas_servidor                                                        disciplinas_servidor[]
  disponibilidade_servidor                                                    disponibilidade_servidor[]
  emprestimo                                                                  emprestimo[]
  escola                                                                      escola[]
  ficha_acompanhamento                                                        ficha_acompanhamento[]
  gabarito                                                                    gabarito[]
  gabarito_resposta                                                           gabarito_resposta[]
  lembrete                                                                    lembrete[]
  log                                                                         log[]
  log_historico_alteracao                                                     log_historico_alteracao[]
  log_pege                                                                    log_pege[]
  matricula                                                                   matricula[]
  nota                                                                        nota[]
  nota_conceito                                                               nota_conceito[]
  nota_ponto                                                                  nota_ponto[]
  nucleo                                                                      nucleo[]
  ocorrencia                                                                  ocorrencia[]
  ocorrencia_aluno                                                            ocorrencia_aluno[]
  orientacao_familiar                                                         orientacao_familiar[]
  pege_ead_comentarionaaula                                                   pege_ead_comentarionaaula[]
  pege_ead_comentarioresposta                                                 pege_ead_comentarioresposta[]
  pege_sms_sms_pege_sms_sms_destinatario_servidor_idToservidor                pege_sms_sms[]                         @relation("pege_sms_sms_destinatario_servidor_idToservidor")
  pege_sms_sms_pege_sms_sms_servidor_idToservidor                             pege_sms_sms[]                         @relation("pege_sms_sms_servidor_idToservidor")
  pege_vacinacao_vacinacao                                                    pege_vacinacao_vacinacao[]
  ponto_servidor                                                              ponto_servidor[]
  portaria                                                                    portaria[]
  professor_quadro_vagas                                                      professor_quadro_vagas[]
  resposta_pergunta_planejamento                                              resposta_pergunta_planejamento[]
  rota_servidor                                                               rota_servidor[]
  situacao_servidor                                                           situacao_servidor?                     @relation(fields: [situacao_servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "servidor_FK_situacao_servidor")
  servidor_atividade_trabalho                                                 servidor_atividade_trabalho[]
  servidor_cargo_escola                                                       servidor_cargo_escola[]
  servidor_desvio_funcao                                                      servidor_desvio_funcao[]
  servidor_escola                                                             servidor_escola[]
  servidor_ferias                                                             servidor_ferias[]
  servidor_funcao_escola                                                      servidor_funcao_escola[]
  solicitacoes                                                                solicitacoes[]
  substituicao                                                                substituicao[]
  ticket_ticket_destinatario_idToservidor                                     ticket[]                               @relation("ticket_destinatario_idToservidor")
  ticket_ticket_remetente_idToservidor                                        ticket[]                               @relation("ticket_remetente_idToservidor")
  ticket_ticket_ultimo_respondeu_idToservidor                                 ticket[]                               @relation("ticket_ultimo_respondeu_idToservidor")
  ticket_mensagem                                                             ticket_mensagem[]
  transporte_motorista                                                        transporte_motorista[]
  turma_disciplina                                                            turma_disciplina[]
  usuarios                                                                    usuarios[]
  vale_escola                                                                 vale_escola[]
  verba_servidor                                                              verba_servidor[]
  visita_servidores                                                           visita_servidores[]

  @@index([situacao_servidor_id], map: "servidor_FK_situacao_servidor")
  @@index([escola_id], map: "servidor_fk_escola")
}

model servidor_atividade_trabalho {
  id                       Int                   @id @default(autoincrement())
  escola_id                Int
  servidor_id              Int
  servidor_cargo_escola_id Int
  tipo                     String
  nome_tipo                String                @db.VarChar(100)
  status                   String?               @db.Char(1)
  created                  DateTime?             @db.Date
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  escola                   escola                @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_atividade_trabalho_escola1")
  servidor                 servidor              @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_atividade_trabalho_servidor1")
  servidor_cargo_escola    servidor_cargo_escola @relation(fields: [servidor_cargo_escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_atividade_trabalho_servidor_cargo_escola1")

  @@index([escola_id], map: "fk_servidor_atividade_trabalho_escola1")
  @@index([servidor_id], map: "fk_servidor_atividade_trabalho_servidor1")
  @@index([servidor_cargo_escola_id], map: "fk_servidor_atividade_trabalho_servidor_cargo_escola1")
}

model servidor_atividade_trabalho_historico {
  id                             Int       @id @default(autoincrement())
  servidor_id                    Int
  escola_id                      Int
  servidor_atividade_trabalho_id Int
  tipo                           String    @db.VarChar(100)
  created                        DateTime  @db.Date
  created_at                     DateTime? @db.DateTime(0)
  updated_at                     DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime? @db.DateTime(0)
}

model servidor_cargo_escola {
  id                                     Int                                    @id @default(autoincrement())
  servidor_cargo_matricula_id            Int?                                   @db.UnsignedInt
  servidor_id                            Int
  escola_id                              Int?
  cargos_mec_id                          Int?
  funcoes_mec_id                         Int?
  funcoes_mec_exonerada_id               Int?
  nucleo_id                              Int?                                   @db.UnsignedSmallInt
  servidor_cargo_escola_tipo_alocacao_id Int?
  escola_nome                            String?                                @db.VarChar(50)
  local_externo_nome                     String?                                @db.VarChar(50)
  data_admissao                          DateTime?                              @db.Date
  data_entrada_exercicio                 DateTime?                              @db.Date
  data_desligamento                      DateTime?                              @db.Date
  data_exoneracao                        DateTime?                              @db.Date
  matricula                              String?                                @db.Char(30)
  vinculo                                Int?
  regime_trabalho                        Int?
  observacao                             String?                                @db.Text
  num_decreto                            String?                                @db.VarChar(30)
  carga_horaria                          String?                                @db.TinyText
  carga_horaria_semanal                  String?                                @db.TinyText
  turno                                  String?
  principal                              Int?                                   @default(0) @db.TinyInt
  cod_sal_atual                          String?                                @db.Char(10)
  divisao                                String?                                @db.Char(10)
  registro                               String?                                @db.Char(10)
  cbo_atual                              String?                                @db.Char(10)
  contrato                               Int?
  status                                 Int?                                   @default(1)
  is_cedido                              Int?                                   @default(0) @db.TinyInt
  origem_servidor                        servidor_cargo_escola_origem_servidor?
  parent_merge_rh                        Int?                                   @db.UnsignedInt
  created_at                             DateTime?                              @db.DateTime(0)
  updated_at                             DateTime                               @default(now()) @db.Timestamp(0)
  deleted_at                             DateTime?                              @db.DateTime(0)
  criterio_acesso_cargo_id               Int?
  especificacao_criterio_acesso_cargo    String?                                @db.VarChar(100)
  desvio_funcao                          String?                                @db.VarChar(5)
  acordo_nea_funcionario                 acordo_nea_funcionario[]
  afastamento                            afastamento[]
  afastamento_v3                         afastamento_v3[]
  beneficio                              beneficio[]
  mudanca_nivel                          mudanca_nivel[]
  remanejamento                          remanejamento[]
  servidor_atividade_trabalho            servidor_atividade_trabalho[]
  cargos_mec                             cargos_mec?                            @relation(fields: [cargos_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_cargo_escola_cargos_mec1")
  escola                                 escola?                                @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_cargo_escola_escola1")
  nucleo                                 nucleo?                                @relation(fields: [nucleo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_cargo_escola_nucleo1")
  servidor                               servidor                               @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_cargo_escola_servidor1")
  servidor_cargo_escola_tipo_alocacao    servidor_cargo_escola_tipo_alocacao?   @relation(fields: [servidor_cargo_escola_tipo_alocacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_cargo_escola_servidor_cargo_escola_tipo_alocacao")
  servidor_cargo_escola_regime_trabalho  servidor_cargo_escola_regime_trabalho? @relation(fields: [regime_trabalho], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "servidor_cargo_escola_ibfk_1")
  servidor_cargo_escola_vinculo          servidor_cargo_escola_vinculo?         @relation(fields: [vinculo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "servidor_cargo_escola_ibfk_2")
  servidor_cargo_matricula               servidor_cargo_matricula?              @relation(fields: [servidor_cargo_matricula_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "servidor_cargo_escola_servidor_cargo_matricula1")
  servidor_cargo_escola_etapa            servidor_cargo_escola_etapa[]
  servidor_resumo_ponto                  servidor_resumo_ponto[]
  turma_disciplina                       turma_disciplina[]

  @@index([cargos_mec_id], map: "fk_servidor_cargo_escola_cargos_mec1")
  @@index([escola_id], map: "fk_servidor_cargo_escola_escola1")
  @@index([nucleo_id], map: "fk_servidor_cargo_escola_nucleo1")
  @@index([servidor_id], map: "fk_servidor_cargo_escola_servidor1")
  @@index([servidor_cargo_escola_tipo_alocacao_id], map: "fk_servidor_cargo_escola_servidor_cargo_escola_tipo_alocacao")
  @@index([servidor_cargo_matricula_id], map: "fk_servidor_cargo_escola_servidor_cargo_matricula")
  @@index([regime_trabalho], map: "servidor_cargo_escola_fk_servidor_cargo_escola_regime_trabalho")
  @@index([vinculo], map: "servidor_cargo_escola_fk_servidor_cargo_escola_vinculo")
}

model servidor_cargo_escola_etapa {
  id                                     Int                                      @id @default(autoincrement())
  servidor_cargo_escola_id               Int
  ano_id                                 Int
  ano_letivo                             String                                   @db.VarChar(4)
  created_at                             DateTime?                                @db.DateTime(0)
  updated_at                             DateTime                                 @default(now()) @db.Timestamp(0)
  deleted_at                             DateTime?                                @db.DateTime(0)
  ano                                    ano                                      @relation(fields: [ano_id], references: [id], onUpdate: Restrict, map: "ano_FK_servidor_cargo_escola_etapa")
  servidor_cargo_escola                  servidor_cargo_escola                    @relation(fields: [servidor_cargo_escola_id], references: [id], onUpdate: Restrict, map: "servidor_cargio_escola_FK_servidor_cargo_escola_etapa")
  servidor_cargo_escola_etapa_disciplina servidor_cargo_escola_etapa_disciplina[]

  @@index([ano_id], map: "ano_FK_servidor_cargo_escola_etapa")
  @@index([servidor_cargo_escola_id], map: "servidor_cargio_escola_FK_servidor_cargo_escola_etapa")
}

model servidor_cargo_escola_etapa_disciplina {
  id                             Int                         @id @default(autoincrement())
  servidor_cargo_escola_etapa_id Int
  turno_id                       Int
  disciplina_mec_id              Int
  created_at                     DateTime?                   @db.DateTime(0)
  updated_at                     DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                   @db.DateTime(0)
  disciplinas_mec                disciplinas_mec             @relation(fields: [disciplina_mec_id], references: [id], onUpdate: Restrict, map: "disciplinas_mec_FK_servidor_cargo_escola_etapa_disciplina")
  servidor_cargo_escola_etapa    servidor_cargo_escola_etapa @relation(fields: [servidor_cargo_escola_etapa_id], references: [id], onUpdate: Restrict, map: "etapa_FK_etapa_disciplina")
  turno                          turno                       @relation(fields: [turno_id], references: [id], onUpdate: Restrict, map: "turno_FK_servidor_cargo_escola_etapa_disciplina")

  @@index([disciplina_mec_id], map: "disciplinas_mec_FK_servidor_cargo_escola_etapa_disciplina")
  @@index([servidor_cargo_escola_etapa_id], map: "etapa_FK_etapa_disciplina")
  @@index([turno_id], map: "turno_FK_servidor_cargo_escola_etapa_disciplina")
}

model servidor_cargo_escola_regime_trabalho {
  id                    Int                     @id @default(autoincrement())
  nome                  String                  @db.VarChar(100)
  status                Int
  created               DateTime                @db.DateTime(0)
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  servidor_cargo_escola servidor_cargo_escola[]
}

model servidor_cargo_escola_tipo_alocacao {
  id                    Int                     @id @default(autoincrement())
  nome                  String                  @db.VarChar(50)
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  servidor_cargo_escola servidor_cargo_escola[]
}

model servidor_cargo_escola_vinculo {
  id                    Int                     @id @default(autoincrement())
  nome                  String                  @db.VarChar(100)
  status                Int
  created               DateTime                @db.DateTime(0)
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  servidor_cargo_escola servidor_cargo_escola[]
}

model servidor_cargo_matricula {
  id                     Int                     @id @default(autoincrement()) @db.UnsignedInt
  cargos_mec_id          Int
  matricula              String                  @db.VarChar(50)
  data_admissao          DateTime?               @db.Date
  data_entrada_exercicio DateTime?               @db.Date
  data_desligamento      DateTime?               @db.Date
  ativo                  Boolean?                @default(true)
  created_at             DateTime?               @db.DateTime(0)
  updated_at             DateTime                @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?               @db.DateTime(0)
  servidor_cargo_escola  servidor_cargo_escola[]
  cargos_mec             cargos_mec              @relation(fields: [cargos_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_cargo_matricula_cargos_mec1")

  @@index([cargos_mec_id], map: "fk_servidor_cargo_matricula_cargos_mec1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model servidor_desvio_funcao {
  id                                                                          Int          @id @default(autoincrement())
  servidor_id                                                                 Int?
  escola_id                                                                   Int?
  funcao_servidor_original_id                                                 Int?
  funcao_servidor_desvio_id                                                   Int?
  observacao                                                                  String?      @db.VarChar(50)
  status_desvio                                                               String?
  data_inicio_desvio                                                          DateTime?    @db.Date
  data_fim_desvio                                                             DateTime?    @db.Date
  created                                                                     DateTime?    @db.DateTime(0)
  status                                                                      String?      @db.Char(1)
  created_at                                                                  DateTime?    @db.DateTime(0)
  updated_at                                                                  DateTime     @default(now()) @db.Timestamp(0)
  deleted_at                                                                  DateTime?    @db.DateTime(0)
  escola                                                                      escola?      @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_servidor_desvio_funcao_escola_id")
  funcoes_mec_servidor_desvio_funcao_funcao_servidor_desvio_idTofuncoes_mec   funcoes_mec? @relation("servidor_desvio_funcao_funcao_servidor_desvio_idTofuncoes_mec", fields: [funcao_servidor_desvio_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_servidor_desvio_funcao_funcao_desvio_id")
  funcoes_mec_servidor_desvio_funcao_funcao_servidor_original_idTofuncoes_mec funcoes_mec? @relation("servidor_desvio_funcao_funcao_servidor_original_idTofuncoes_mec", fields: [funcao_servidor_original_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_servidor_desvio_funcao_funcao_original")
  servidor                                                                    servidor?    @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_servidor_desvio_funcao_servidor_id")

  @@index([escola_id], map: "FK_servidor_desvio_funcao_escola_id")
  @@index([funcao_servidor_desvio_id], map: "FK_servidor_desvio_funcao_funcao_desvio_id")
  @@index([funcao_servidor_original_id], map: "FK_servidor_desvio_funcao_funcao_original")
  @@index([servidor_id], map: "FK_servidor_desvio_funcao_servidor_id")
}

model servidor_escola {
  id          Int       @id @default(autoincrement())
  servidor_id Int
  escola_id   Int?
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  escola      escola?   @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_escola_escola1")
  servidor    servidor  @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_escola_servidor1")

  @@index([escola_id], map: "fk_servidor_escola_escola1")
  @@index([servidor_id], map: "fk_servidor_escola_servidor1")
}

model servidor_ferias {
  id            Int        @id @default(autoincrement())
  escola_id     Int?
  ano_letivo_id Int
  servidor_id   Int
  data_inicio   DateTime   @db.DateTime(0)
  data_fim      DateTime   @db.DateTime(0)
  created_at    DateTime?  @default(now()) @db.DateTime(0)
  updated_at    DateTime   @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?  @db.DateTime(0)
  ano_letivo    ano_letivo @relation(fields: [ano_letivo_id], references: [id], onUpdate: Restrict, map: "fk_servidor_ferias_ano_letivo_id")
  escola        escola?    @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_servidor_ferias_escola_id")
  servidor      servidor   @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "fk_servidor_ferias_servidor_id")

  @@index([ano_letivo_id], map: "fk_servidor_ferias_ano_letivo")
  @@index([escola_id], map: "fk_servidor_ferias_escola")
  @@index([servidor_id], map: "fk_servidor_ferias_servidor")
}

model servidor_funcao_escola {
  id                  Int                  @id @default(autoincrement())
  servidor_id         Int
  escola_id           Int
  cargo_mec_id        Int?
  situacao            Boolean?
  vaga_id             Int?
  comissionado        Boolean?
  regime_trabalho     String?
  created_at          DateTime?            @db.DateTime(0)
  updated_at          DateTime             @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?            @db.DateTime(0)
  quadro_vagas_escola quadro_vagas_escola? @relation(fields: [vaga_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_servidor_funcao_escola_vaga_id")
  cargos_mec          cargos_mec?          @relation(fields: [cargo_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_funcao_escola_cargo_mec1")
  escola              escola               @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_funcao_escola_escola1")
  servidor            servidor             @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_servidor_funcao_escola_servidor1")

  @@index([vaga_id], map: "FK_servidor_funcao_escola_vaga_id")
  @@index([escola_id], map: "fk_servidor_funcao_escola_escola1")
  @@index([cargo_mec_id], map: "fk_servidor_funcao_escola_funcoes_mec1")
  @@index([servidor_id], map: "fk_servidor_funcao_escola_servidor1")
}

model servidor_resumo_ponto {
  id                       Int                                 @id @default(autoincrement()) @db.UnsignedInt
  servidor_cargo_escola_id Int                                 @default(0)
  pp_motivo_id             Int?
  data_falta               DateTime?                           @db.Date
  falta_abonada            servidor_resumo_ponto_falta_abonada @default(N)
  frequencia               servidor_resumo_ponto_frequencia?
  turno                    servidor_resumo_ponto_turno?
  created_at               DateTime                            @db.DateTime(0)
  updated_at               DateTime                            @db.DateTime(0)
  deleted_at               DateTime?                           @db.DateTime(0)
  horario                  Int?
  pp_motivo                pp_motivo?                          @relation(fields: [pp_motivo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "servidor_resumo_ponto_FK_pp_motivo")
  servidor_cargo_escola    servidor_cargo_escola               @relation(fields: [servidor_cargo_escola_id], references: [id], onUpdate: Restrict, map: "servidor_resuno_ponto_FK_servidor_cargo_escola")

  @@index([pp_motivo_id], map: "servidor_resumo_ponto_FK_pp_motivo")
  @@index([servidor_cargo_escola_id], map: "servidor_resuno_ponto_FK_servidor_cargo_escola")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model setor {
  id                 Int                  @id @default(autoincrement())
  escola_id          Int?
  nome               String?              @db.VarChar(60)
  descricao          String?              @db.Text
  created            DateTime?            @db.DateTime(0)
  status             String?              @db.Char(1)
  created_at         DateTime?            @db.DateTime(0)
  updated_at         DateTime             @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?            @db.DateTime(0)
  almoxarifado_saida almoxarifado_saida[]
  saida              saida[]

  @@index([escola_id], map: "fk_setor_escola1")
}

model simulado {
  id            Int         @id @default(autoincrement())
  ano_id        Int?
  formulario_id Int?        @db.UnsignedMediumInt
  data_inicio   DateTime?   @db.Date
  data_fim      DateTime?   @db.Date
  status        Int?        @default(1) @db.TinyInt
  created_at    DateTime?   @db.DateTime(0)
  updated_at    DateTime    @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?   @db.DateTime(0)
  ano           ano?        @relation(fields: [ano_id], references: [id], onUpdate: SetNull, map: "ibiriteste_FK1_ano")
  formulario    formulario? @relation(fields: [formulario_id], references: [id], onUpdate: SetNull, map: "ibiriteste_FK1_formulario")

  @@index([ano_id], map: "ibiriteste_FK1_ano")
  @@index([formulario_id], map: "ibiriteste_FK1_formulario")
}

model situacao_final_aluno {
  id                   Int       @id @default(autoincrement())
  nome                 String?   @db.VarChar(100)
  sigla                String?   @db.Char(4)
  escola_id            Int?
  ano_id               Int?
  nivel_ensino_id      Int?
  modalidade_ensino_id Int?
  ciclo_id             Int?
  created              DateTime? @db.DateTime(0)
  status               String?   @db.Char(1)
  created_at           DateTime? @db.DateTime(0)
  updated_at           DateTime  @default(now()) @db.Timestamp(0)
  deleted_at           DateTime? @db.DateTime(0)
}

model situacao_funcionamento {
  id                               Int                                @id
  nome                             String?                            @db.VarChar(80)
  status                           String?                            @db.Char(1)
  created_at                       DateTime?                          @db.DateTime(0)
  updated_at                       DateTime                           @default(now()) @db.Timestamp(0)
  deleted_at                       DateTime?                          @db.DateTime(0)
  configuracao_escola              configuracao_escola[]
  escola_situacao_ano              escola_situacao_ano[]
  situacao_funcionamento_historico situacao_funcionamento_historico[]
}

model situacao_funcionamento_historico {
  id                                                                                                            Int                     @id @default(autoincrement())
  situacao_funcionamento_id                                                                                     Int?
  configuracao_escola_id                                                                                        Int?
  ano_letivo                                                                                                    String?                 @db.VarChar(200)
  created                                                                                                       DateTime?               @db.DateTime(0)
  created_at                                                                                                    DateTime?               @db.DateTime(0)
  updated_at                                                                                                    DateTime                @default(now()) @db.Timestamp(0)
  deleted_at                                                                                                    DateTime?               @db.DateTime(0)
  configuracao_escola_configuracao_escola_situacao_funcionamento_historico_idTosituacao_funcionamento_historico configuracao_escola[]   @relation("configuracao_escola_situacao_funcionamento_historico_idTosituacao_funcionamento_historico")
  configuracao_escola_situacao_funcionamento_historico_configuracao_escola_idToconfiguracao_escola              configuracao_escola?    @relation("situacao_funcionamento_historico_configuracao_escola_idToconfiguracao_escola", fields: [configuracao_escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "configuracao_escola_FK_situacao_funcionamento_historico")
  situacao_funcionamento                                                                                        situacao_funcionamento? @relation(fields: [situacao_funcionamento_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "situacao_funcionamento_FK_situacao_funcionamento_historico")

  @@index([configuracao_escola_id], map: "configuracao_escola_FK_situacao_funcionamento_historico")
  @@index([situacao_funcionamento_id], map: "situacao_funcionamento_FK_situacao_funcionamento_historico")
}

model situacao_servidor {
  id         Int        @id @default(0)
  nome       String?    @db.VarChar(50)
  created_at DateTime?  @db.DateTime(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.DateTime(0)
  servidor   servidor[]
}

model solicitacoes {
  id                                                      Int                        @id @default(autoincrement())
  servidor_solicitante_id                                 Int?
  nome_servidor_solicitante                               String?                    @db.VarChar(250)
  usuario_destinatario_id                                 Int                        @db.UnsignedInt
  data_solicitacao                                        DateTime                   @db.DateTime(0)
  solicitacoes_meio_id                                    Int
  complexidade                                            solicitacoes_complexidade?
  prioridade                                              solicitacoes_prioridade
  descricao_cliente                                       String?                    @db.Text
  descricao_suporte                                       String?                    @db.Text
  descricao_tecnica                                       String?                    @db.Text
  data_solucao                                            DateTime?                  @db.DateTime(0)
  usuario_solucionador_id                                 Int?                       @db.UnsignedInt
  solucao_tipo                                            solicitacoes_solucao_tipo?
  situacao                                                solicitacoes_situacao?
  created_at                                              DateTime?                  @db.DateTime(0)
  updated_at                                              DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at                                              DateTime?                  @db.DateTime(0)
  servidor                                                servidor?                  @relation(fields: [servidor_solicitante_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "solicitacoes_fk_servidor")
  solicitacoes_tipo                                       solicitacoes_tipo          @relation(fields: [solicitacoes_meio_id], references: [id], onUpdate: Restrict, map: "solicitacoes_fk_solicitacoes_tipo")
  usuarios_solicitacoes_usuario_destinatario_idTousuarios usuarios                   @relation("solicitacoes_usuario_destinatario_idTousuarios", fields: [usuario_destinatario_id], references: [id], onUpdate: Restrict, map: "solicitacoes_fk_usuarios_dif_destinatario")
  usuarios_solicitacoes_usuario_solucionador_idTousuarios usuarios?                  @relation("solicitacoes_usuario_solucionador_idTousuarios", fields: [usuario_solucionador_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "solicitacoes_fk_usuarios_dif_solucionador")

  @@index([servidor_solicitante_id], map: "solicitacoes_fk_servidor")
  @@index([solicitacoes_meio_id], map: "solicitacoes_fk_solicitacoes_tipo")
  @@index([usuario_destinatario_id], map: "solicitacoes_fk_usuarios_dif_destinatario")
  @@index([usuario_solucionador_id], map: "solicitacoes_fk_usuarios_dif_solucionador")
}

model solicitacoes_escola {
  id               Int       @id @default(autoincrement())
  escola_id        Int?
  servidor_id      Int?
  tipo_solicitacao String?
  motivo           String?   @db.VarChar(100)
  created          DateTime? @db.DateTime(0)
  status           String?   @db.Char(1)
  situacao         String?
  created_at       DateTime? @db.DateTime(0)
  updated_at       DateTime  @default(now()) @db.Timestamp(0)
  deleted_at       DateTime? @db.DateTime(0)
}

model solicitacoes_escola_situacao {
  id         Int       @id @default(autoincrement())
  nome       String    @db.VarChar(50)
  cor        String    @db.VarChar(6)
  fonte      String    @db.VarChar(6)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model solicitacoes_tipo {
  id           Int                           @id @default(autoincrement())
  tipo         String                        @db.VarChar(250)
  habilitado   solicitacoes_tipo_habilitado? @default(S)
  created_at   DateTime?                     @db.DateTime(0)
  updated_at   DateTime                      @default(now()) @db.Timestamp(0)
  deleted_at   DateTime?                     @db.DateTime(0)
  solicitacoes solicitacoes[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model substituicao {
  id                            Int                   @id @default(autoincrement())
  novo_servidor_cargo_escola_id Int?
  afastamento_id                Int
  servidor_id                   Int
  protocolo_id                  Int
  substituicao_situacao_id      Int
  data_inicio                   DateTime              @db.Date
  data_fim                      DateTime              @db.Date
  created                       DateTime              @db.DateTime(0)
  status                        Int
  created_at                    DateTime?             @db.DateTime(0)
  updated_at                    DateTime              @default(now()) @db.Timestamp(0)
  deleted_at                    DateTime?             @db.DateTime(0)
  afastamento                   afastamento           @relation(fields: [afastamento_id], references: [id], onUpdate: Restrict, map: "substituicao_ibfk_1")
  servidor                      servidor              @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "substituicao_ibfk_2")
  substituicao_situacao         substituicao_situacao @relation(fields: [substituicao_situacao_id], references: [id], onUpdate: Restrict, map: "substituicao_ibfk_4")
  protocolo                     protocolo             @relation(fields: [protocolo_id], references: [id], onUpdate: Restrict, map: "substituicao_ibfk_5")

  @@index([afastamento_id], map: "substituicao_fk_afastamento")
  @@index([protocolo_id], map: "substituicao_fk_protocolo")
  @@index([servidor_id], map: "substituicao_fk_servidor")
  @@index([substituicao_situacao_id], map: "substituicao_fk_substituicao_situacao")
}

model substituicao_situacao {
  id            Int            @id @default(autoincrement())
  nome          String         @db.VarChar(50)
  cor           String         @db.VarChar(6)
  fonte         String         @db.VarChar(6)
  gera_portaria Int
  nivel_atual   Int
  proximo_nivel String?        @db.VarChar(50)
  created_at    DateTime?      @db.DateTime(0)
  updated_at    DateTime       @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?      @db.DateTime(0)
  substituicao  substituicao[]
}

model sugestao_comunidade {
  id                    Int       @id @default(autoincrement())
  usuario_comunidade_id Int?
  sugestao              String?   @db.VarChar(500)
  created               DateTime? @db.DateTime(0)
  status                String?   @db.Char(1)
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
}

model tabela_funcao {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  tabela_id  Int?      @db.UnsignedInt
  funcao_id  Int?      @db.UnsignedInt
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)

  @@unique([tabela_id, funcao_id], map: "tabela_id_funcao_id")
}

model tabela_referencia_imc {
  id          Int                        @id @default(autoincrement()) @db.UnsignedInt
  meses       Int                        @db.UnsignedInt
  abaixo_3_sd Float
  abaixo_2_sd Float
  abaixo_1_sd Float
  median      Float
  acima_1_sd  Float
  acima_2_sd  Float
  acima_3_sd  Float
  sexo        tabela_referencia_imc_sexo
}

model tabela_referencia_imc_percentil_infantil {
  id   Int                                           @id @default(autoincrement()) @db.UnsignedInt
  dia  Int
  sexo tabela_referencia_imc_percentil_infantil_sexo
  P1   Float
  P3   Float
  P5   Float
  P10  Float
  P15  Float
  P25  Float
  P50  Float
  P75  Float
  P85  Float
  P90  Float
  P95  Float
  P97  Float
  P99  Float
  P999 Float
}

model tabela_referencia_imc_percentil_infantil_adolescente {
  id    Int                                                       @id @default(autoincrement()) @db.UnsignedInt
  meses Int
  sexo  tabela_referencia_imc_percentil_infantil_adolescente_sexo
  P1    Float
  P3    Float
  P5    Float
  P10   Float
  P15   Float
  P25   Float
  P50   Float
  P75   Float
  P85   Float
  P90   Float
  P95   Float
  P97   Float
  P99   Float
  P999  Float
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tabelas {
  id                 Int       @id @default(autoincrement()) @db.UnsignedInt
  tabela_id          Int?      @default(0) @db.UnsignedInt
  menu_id            Int?      @db.UnsignedInt
  nome               String?   @db.VarChar(50)
  tipo               Int?      @db.UnsignedInt
  pasta              String?   @db.VarChar(100)
  status             Boolean?
  ordem              Int?      @db.UnsignedTinyInt
  auditar            Int?
  escola_selecionada Int       @default(0)
  created_at         DateTime? @db.DateTime(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.DateTime(0)
  log                log[]
}

model temas_contemporaneos_transversais {
  id                                                   Int                                                    @id @default(autoincrement())
  nome                                                 String?                                                @db.VarChar(100)
  status                                               Int?                                                   @default(1) @db.TinyInt
  created_at                                           DateTime?                                              @db.DateTime(0)
  updated_at                                           DateTime                                               @default(now()) @db.Timestamp(0)
  deleted_at                                           DateTime?                                              @db.DateTime(0)
  turma_planejamento_temas_contemporaneos_transversais turma_planejamento_temas_contemporaneos_transversais[]
}

model temas_diagnostico {
  id                        Int                         @id @default(autoincrement())
  disciplinas_mec_id        Int
  nome                      String                      @db.VarChar(50)
  campo                     String?                     @db.VarChar(100)
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime?                   @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.DateTime(0)
  aluno_diagnostico_temas   aluno_diagnostico_temas[]
  valores_temas_diagnostico valores_temas_diagnostico[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ticket {
  id                                            Int               @id @default(autoincrement())
  remetente_id                                  Int?
  destinatario_id                               Int?
  ultimo_respondeu_id                           Int?
  ticket_meios_id                               Int?              @db.UnsignedInt
  prioridade                                    String?           @default("baixa")
  assunto                                       String?           @db.TinyText
  acompanhamento                                Boolean?          @default(true)
  data_solucao                                  DateTime?         @db.Date
  created                                       DateTime?         @db.DateTime(0)
  updated                                       DateTime?         @db.DateTime(0)
  created_at                                    DateTime?         @db.DateTime(0)
  updated_at                                    DateTime          @default(now()) @db.Timestamp(0)
  deleted_at                                    DateTime?         @db.DateTime(0)
  status                                        Boolean?          @default(true)
  servidor_ticket_destinatario_idToservidor     servidor?         @relation("ticket_destinatario_idToservidor", fields: [destinatario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ticket_destinatario")
  servidor_ticket_remetente_idToservidor        servidor?         @relation("ticket_remetente_idToservidor", fields: [remetente_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ticket_remetente")
  servidor_ticket_ultimo_respondeu_idToservidor servidor?         @relation("ticket_ultimo_respondeu_idToservidor", fields: [ultimo_respondeu_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ticket_ultimorespondeu")
  ticket_meios                                  ticket_meios?     @relation(fields: [ticket_meios_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "ticket_FK_ticket_meios")
  ticket_mensagem                               ticket_mensagem[]

  @@index([destinatario_id], map: "fk_ticket_destinatario")
  @@index([remetente_id], map: "fk_ticket_remetente")
  @@index([ultimo_respondeu_id], map: "fk_ticket_ultimorespondeu")
  @@index([ticket_meios_id], map: "ticket_FK_ticket_meios")
}

model ticket_acompanhamento {
  id         Int       @id @default(autoincrement())
  nome       String    @db.VarChar(100)
  created    DateTime  @db.DateTime(0)
  status     Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model ticket_meios {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  meio       String    @unique(map: "meios_meio_unique") @db.VarChar(255)
  created_at DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  ticket     ticket[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ticket_mensagem {
  id                      Int                       @id @default(autoincrement())
  ticket_id               Int?
  usuario_id              Int?                      @db.UnsignedInt
  servidor_id             Int?
  ip                      String?                   @default("baixa") @db.VarChar(15)
  mensagem                String?                   @db.Text
  status                  Boolean?                  @default(true)
  created                 DateTime?                 @db.DateTime(0)
  created_at              DateTime?                 @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  servidor                servidor?                 @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ticket_mensagem_servidor")
  ticket                  ticket?                   @relation(fields: [ticket_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ticketmensagem_ticket")
  usuarios                usuarios?                 @relation(fields: [usuario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ticketmensagem_usuario")
  ticket_mensagem_arquivo ticket_mensagem_arquivo[]

  @@index([ticket_id], map: "fk_ticketmensagem_ticket")
  @@index([usuario_id], map: "fk_ticketmensagem_usuario")
  @@index([servidor_id], map: "servidor_id")
}

model ticket_mensagem_arquivo {
  id                 Int              @id @default(autoincrement())
  ticket_mensagem_id Int?
  arquivo            String?          @db.VarChar(250)
  created_at         DateTime?        @db.DateTime(0)
  updated_at         DateTime         @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?        @db.DateTime(0)
  ticket_mensagem    ticket_mensagem? @relation(fields: [ticket_mensagem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_ticketmensagemarquivo_ticket")

  @@index([ticket_mensagem_id], map: "fk_ticketmensagemarquivo_ticket")
}

model tipo_acervo {
  id                 Int             @id @default(autoincrement())
  nome               String?         @db.VarChar(255)
  descricao          String?         @db.Text
  created            DateTime?       @db.DateTime(0)
  status             String?         @db.VarChar(1)
  tipo_publicacao_id Int
  created_at         DateTime?       @db.DateTime(0)
  updated_at         DateTime        @default(now()) @db.Timestamp(0)
  deleted_at         DateTime?       @db.DateTime(0)
  acervo             acervo[]
  tipo_publicacao    tipo_publicacao @relation(fields: [tipo_publicacao_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipo_acervo_tipo_publicacao1")

  @@index([tipo_publicacao_id], map: "fk_tipo_acervo_tipo_publicacao1")
}

model tipo_acompanhamento {
  id                        Int                         @id @default(autoincrement())
  descricao                 String                      @db.VarChar(50)
  created                   DateTime                    @db.DateTime(0)
  status                    Int
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.DateTime(0)
  aluno_tipo_acompanhamento aluno_tipo_acompanhamento[]
}

model tipo_assistencia {
  id                     Int                      @id @default(autoincrement())
  descricao              String                   @db.VarChar(50)
  created                DateTime                 @db.DateTime(0)
  status                 Int
  created_at             DateTime?                @db.DateTime(0)
  updated_at             DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?                @db.DateTime(0)
  aluno_tipo_assistencia aluno_tipo_assistencia[]
}

model tipo_atendimento_educacional_especializado {
  id         Int       @id @default(autoincrement())
  descricao  String?   @db.VarChar(255)
  STATUS     Int       @db.TinyInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model tipo_atividade_complementar {
  id                Int       @id @default(autoincrement())
  codigo            String?   @db.Char(6)
  nome              String?   @db.TinyText
  area              String?   @db.VarChar(255)
  subarea           String?   @db.VarChar(255)
  status            String?   @db.Char(1)
  individual_escola String?   @db.Char(1)
  created_at        DateTime? @db.DateTime(0)
  updated_at        DateTime  @default(now()) @db.Timestamp(0)
  deleted_at        DateTime? @db.DateTime(0)
}

model tipo_aula {
  id         Int       @id @default(autoincrement())
  tipo       String?   @db.VarChar(50)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)
}

model tipo_avaliacao {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  descricao  String?   @db.VarChar(50)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  ciclo      ciclo[]
}

model tipo_compartamento_turma {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(50)
  descricao  String?   @db.Text
  created    DateTime? @db.DateTime(0)
  status     Int?      @db.TinyInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model tipo_dificuldade {
  id                     Int                      @id @default(autoincrement())
  descricao              String                   @db.VarChar(80)
  created                DateTime                 @db.DateTime(0)
  status                 Int
  created_at             DateTime?                @db.DateTime(0)
  updated_at             DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?                @db.DateTime(0)
  aluno_tipo_dificuldade aluno_tipo_dificuldade[]
}

model tipo_entrada {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(80)
  descricao  String?   @db.Text
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  entrada    entrada[]
}

model tipo_fatura {
  id            Int             @id @default(autoincrement())
  nome          String?         @db.VarChar(100)
  created       DateTime?       @db.DateTime(0)
  status        Boolean         @default(true)
  created_at    DateTime?       @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?       @db.DateTime(0)
  escola_fatura escola_fatura[]
}

model tipo_moradia {
  id         Int       @id @default(autoincrement())
  descricao  String    @db.VarChar(50)
  created    DateTime  @db.DateTime(0)
  status     Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  aluno      aluno[]
}

model tipo_pergunta {
  id         Int        @id @default(autoincrement()) @db.UnsignedSmallInt
  descricao  String?    @db.VarChar(50)
  created_at DateTime?  @db.DateTime(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.DateTime(0)
  pergunta   pergunta[]
}

model tipo_professor {
  id               Int                @id @default(autoincrement())
  tipo             String?            @db.VarChar(50)
  created_at       DateTime?          @db.Timestamp(0)
  updated_at       DateTime?          @db.DateTime(0)
  deleted_at       DateTime?          @db.DateTime(0)
  ciclo            ciclo[]
  turma_disciplina turma_disciplina[]
}

model tipo_publicacao {
  id          Int           @id @default(autoincrement())
  nome        String?       @db.VarChar(255)
  descricao   String?       @db.Text
  created     DateTime?     @db.DateTime(0)
  status      String?       @db.VarChar(1)
  created_at  DateTime?     @db.DateTime(0)
  updated_at  DateTime      @default(now()) @db.Timestamp(0)
  deleted_at  DateTime?     @db.DateTime(0)
  acervo      acervo[]
  tipo_acervo tipo_acervo[]
}

model tipo_saneamento {
  id                    Int                     @id @default(autoincrement())
  descricao             String                  @db.VarChar(50)
  created               DateTime                @db.DateTime(0)
  status                Int
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  aluno_tipo_saneamento aluno_tipo_saneamento[]
}

model tipos_bem_escola {
  id               Int           @id
  escola_id        Int
  tipos_bem_mec_id Int
  created_at       DateTime?     @db.DateTime(0)
  updated_at       DateTime      @default(now()) @db.Timestamp(0)
  deleted_at       DateTime?     @db.DateTime(0)
  escola           escola        @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_bem_escola_escola1")
  tipos_bem_mec    tipos_bem_mec @relation(fields: [tipos_bem_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_bem_escola_tipos_bem_mec1")

  @@index([escola_id], map: "fk_tipos_bem_escola_escola1")
  @@index([tipos_bem_mec_id], map: "fk_tipos_bem_escola_tipos_bem_mec1")
}

model tipos_bem_mec {
  id                Int                @id @default(autoincrement())
  codigo            String?            @db.Char(20)
  nome              String?            @db.VarChar(60)
  individual_escola String?            @db.Char(1)
  created           DateTime?          @db.DateTime(0)
  status            String?            @db.Char(1)
  created_at        DateTime?          @db.DateTime(0)
  updated_at        DateTime           @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?          @db.DateTime(0)
  tipos_bem_escola  tipos_bem_escola[]
}

model tipos_deficiencia {
  id                      Int                       @id @default(autoincrement())
  descricao               String                    @db.VarChar(50)
  created                 DateTime                  @db.DateTime(0)
  status                  Int
  created_at              DateTime?                 @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  tipos_deficiencia_aluno tipos_deficiencia_aluno[]
}

model tipos_deficiencia_aluno {
  id                   Int               @id @default(autoincrement())
  aluno_id             Int
  tipos_deficiencia_id Int
  created_at           DateTime?         @db.DateTime(0)
  updated_at           DateTime          @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?         @db.DateTime(0)
  aluno                aluno             @relation(fields: [aluno_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tipos_deficiencia_aluno_fk_aluno")
  tipos_deficiencia    tipos_deficiencia @relation(fields: [tipos_deficiencia_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tipos_deficiencia_aluno_fk_tipos_deficiencia")

  @@index([aluno_id], map: "tipos_deficiencia_aluno_fk_aluno")
  @@index([tipos_deficiencia_id], map: "tipos_deficiencia_aluno_fk_tipos_deficiencia")
}

model tipos_deficiencia_servidor {
  id                  Int       @id @default(autoincrement())
  servidor_id         Int
  tipo_deficiencia_id Int
  created_at          DateTime? @db.DateTime(0)
  updated_at          DateTime  @default(now()) @db.Timestamp(0)
  deleted_at          DateTime? @db.DateTime(0)
}

model tipos_dependencia_escola {
  id                       Int                   @id @default(autoincrement())
  escola_id                Int
  tipos_dependencia_mec_id Int
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  escola                   escola                @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_dependencia_escola_escola1")
  tipos_dependencia_mec    tipos_dependencia_mec @relation(fields: [tipos_dependencia_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_dependencia_escola_tipos_dependencia_mec1")

  @@index([escola_id], map: "fk_tipos_dependencia_escola_escola1")
  @@index([tipos_dependencia_mec_id], map: "fk_tipos_dependencia_escola_tipos_dependencia_mec1")
}

model tipos_dependencia_mec {
  id                       Int                        @id @default(autoincrement())
  codigo                   String?                    @db.Char(20)
  nome                     String?                    @db.VarChar(50)
  individual_escola        String?                    @db.Char(1)
  created                  DateTime?                  @db.DateTime(0)
  status                   String?                    @db.Char(1)
  created_at               DateTime?                  @db.DateTime(0)
  updated_at               DateTime                   @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  tipos_dependencia_escola tipos_dependencia_escola[]
}

model tipos_despesa_escola {
  id                   Int               @id @default(autoincrement())
  escola_id            Int
  tipos_despesa_mec_id Int
  created_at           DateTime?         @db.DateTime(0)
  updated_at           DateTime          @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?         @db.DateTime(0)
  escola               escola            @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_despesa_escola_escola1")
  tipos_despesa_mec    tipos_despesa_mec @relation(fields: [tipos_despesa_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_despesa_escola_tipos_despesa_mec1")

  @@index([escola_id], map: "fk_tipos_despesa_escola_escola1")
  @@index([tipos_despesa_mec_id], map: "fk_tipos_despesa_escola_tipos_despesa_mec1")
}

model tipos_despesa_mec {
  id                   Int                    @id @default(autoincrement())
  codigo               String?                @db.Char(20)
  nome                 String?                @db.VarChar(70)
  individual_escola    String?                @db.Char(1)
  created              DateTime?              @db.DateTime(0)
  status               String?                @db.Char(1)
  created_at           DateTime?              @db.DateTime(0)
  updated_at           DateTime               @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?              @db.DateTime(0)
  despesa              despesa[]
  tipos_despesa_escola tipos_despesa_escola[]
}

model tipos_ensino_escola {
  id                  Int              @id @default(autoincrement())
  tipos_ensino_mec_id Int
  escola_id           Int
  ano_letivo_id       Int?
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  ano_letivo          ano_letivo?      @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipo_ensino_escola_ano_letivo1")
  escola              escola           @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_ensino_escola_escola1")
  tipos_ensino_mec    tipos_ensino_mec @relation(fields: [tipos_ensino_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_ensino_escola_tipos_ensino_mec1")

  @@index([ano_letivo_id], map: "fk_tipo_ensino_escola_ano_letivo1")
  @@index([escola_id], map: "fk_tipos_ensino_escola_escola1")
  @@index([tipos_ensino_mec_id], map: "fk_tipos_ensino_escola_tipos_ensino_mec1")
}

model tipos_ensino_mec {
  id                  Int                   @id @default(autoincrement())
  codigo              String?               @db.Char(25)
  nome                String?               @db.VarChar(60)
  descricao           String?               @db.Text
  individual_escola   String?               @db.Char(1)
  created             DateTime?             @db.DateTime(0)
  status              String?               @db.Char(1)
  created_at          DateTime?             @db.DateTime(0)
  updated_at          DateTime              @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?             @db.DateTime(0)
  plano_curricular    plano_curricular[]
  tipos_ensino_escola tipos_ensino_escola[]
}

model tipos_frequencia_escola {
  id                      Int                  @id @default(autoincrement())
  escola_id               Int
  tipos_frequencia_mec_id Int
  created_at              DateTime?            @db.DateTime(0)
  updated_at              DateTime             @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?            @db.DateTime(0)
  escola                  escola               @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_frequencia_escola_escola1")
  tipos_frequencia_mec    tipos_frequencia_mec @relation(fields: [tipos_frequencia_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_frequencia_escola_tipos_frequencia_mec1")

  @@index([escola_id], map: "fk_tipos_frequencia_escola_escola1")
  @@index([tipos_frequencia_mec_id], map: "fk_tipos_frequencia_escola_tipos_frequencia_mec1")
}

model tipos_frequencia_mec {
  id                      Int                       @id @default(autoincrement())
  codigo                  String?                   @db.Char(20)
  nome                    String?                   @db.VarChar(60)
  individual_escola       String?                   @db.Char(1)
  created                 DateTime?                 @db.DateTime(0)
  status                  String?                   @db.Char(1)
  created_at              DateTime?                 @db.DateTime(0)
  updated_at              DateTime                  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  tipos_frequencia_escola tipos_frequencia_escola[]
}

model tipos_material_escola {
  id                    Int                @id
  escola_id             Int
  tipos_material_mec_id Int
  created_at            DateTime?          @db.DateTime(0)
  updated_at            DateTime           @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?          @db.DateTime(0)
  escola                escola             @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_material_escola_escola1")
  tipos_material_mec    tipos_material_mec @relation(fields: [tipos_material_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tipos_material_escola_tipos_material_mec1")

  @@index([escola_id], map: "fk_tipos_material_escola_escola1")
  @@index([tipos_material_mec_id], map: "fk_tipos_material_escola_tipos_material_mec1")
}

model tipos_material_mec {
  id                    Int                     @id @default(autoincrement())
  codigo                String?                 @db.Char(20)
  nome                  String?                 @db.VarChar(60)
  individual_escola     String?                 @db.Char(1)
  created               DateTime?               @db.DateTime(0)
  status                String?                 @db.Char(1)
  created_at            DateTime?               @db.DateTime(0)
  updated_at            DateTime                @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?               @db.DateTime(0)
  tipos_material_escola tipos_material_escola[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model transferencia {
  id                      Int       @id @default(autoincrement())
  matricula_id            Int?
  aluno_id                Int
  ano_letivo_id           Int
  escola_saida_id         Int?
  estado_saida_id         Int?
  cidade_saida_id         Int?
  escola_transferido_id   Int?
  estado_transferido_id   Int?
  cidade_transferido_id   Int?
  nome_escola_saida       String?   @db.VarChar(100)
  nome_escola_transferido String    @db.VarChar(100)
  motivo_transferencia    String    @db.VarChar(255)
  tipo_escola_transferido String?
  data_expedicao          DateTime? @db.Date
  data_historico          DateTime? @db.Date
  data_ficha_individual   DateTime? @db.Date
  situacao                String?
  motivo_cancelamento     String?   @db.VarChar(255)
  avanco                  Int?
  status                  String?   @db.Char(1)
  created                 DateTime? @db.DateTime(0)
  created_at              DateTime? @db.DateTime(0)
  updated_at              DateTime  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime? @db.DateTime(0)
}

model transporte_item {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedSmallInt
  transporte_item_tipo_id    Int                          @db.UnsignedSmallInt
  descricao                  String                       @db.VarChar(100)
  previsao_km                Int                          @default(0) @db.UnsignedMediumInt
  created_at                 DateTime                     @db.DateTime(0)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime?                    @db.DateTime(0)
  transporte_item_tipo       transporte_item_tipo         @relation(fields: [transporte_item_tipo_id], references: [id], onUpdate: Restrict, map: "transporte_item_FK_transporte_item_tipo")
  transporte_manutencao_item transporte_manutencao_item[]

  @@index([transporte_item_tipo_id], map: "transporte_item_FK_transporte_item_tipo")
}

model transporte_item_tipo {
  id              Int               @id @default(autoincrement()) @db.UnsignedSmallInt
  descricao       String            @db.VarChar(75)
  created_at      DateTime          @db.DateTime(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.DateTime(0)
  transporte_item transporte_item[]
}

model transporte_manutencao {
  id                         Int                          @id @default(autoincrement()) @db.UnsignedMediumInt
  veiculo_id                 Int
  descricao                  String?                      @db.VarChar(100)
  km_atual                   Int                          @default(0) @db.UnsignedInt
  data                       DateTime                     @db.Date
  created_at                 DateTime                     @db.DateTime(0)
  updated_at                 DateTime                     @default(now()) @db.Timestamp(0)
  deleted_at                 DateTime?                    @db.DateTime(0)
  veiculo                    veiculo                      @relation(fields: [veiculo_id], references: [id], onUpdate: Restrict, map: "transporte_manutencao_FK_veiculo")
  transporte_manutencao_foto transporte_manutencao_foto[]
  transporte_manutencao_item transporte_manutencao_item[]

  @@index([veiculo_id], map: "transporte_manutencao_FK_veiculo")
}

model transporte_manutencao_foto {
  id                       Int                   @id @default(autoincrement()) @db.UnsignedMediumInt
  transporte_manutencao_id Int                   @default(0) @db.UnsignedMediumInt
  foto                     String?               @db.VarChar(75)
  created_at               DateTime?             @db.DateTime(0)
  updated_at               DateTime?             @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  transporte_manutencao    transporte_manutencao @relation(fields: [transporte_manutencao_id], references: [id], onUpdate: Restrict, map: "transporte_manutencao_foto_FK_transporte_manutencao")

  @@index([transporte_manutencao_id], map: "transporte_manutencao_foto_FK_transporte_manutencao")
}

model transporte_manutencao_item {
  id                       Int                   @id @default(autoincrement()) @db.UnsignedInt
  transporte_item_id       Int                   @db.UnsignedSmallInt
  transporte_manutencao_id Int                   @db.UnsignedMediumInt
  descricao                String?               @db.VarChar(100)
  km_prevista              Int                   @db.UnsignedInt
  data_prevista_manutencao DateTime?             @db.Date
  created_at               DateTime              @db.DateTime(0)
  updated_at               DateTime              @default(now()) @db.Timestamp(0)
  deleted_at               DateTime?             @db.DateTime(0)
  transporte_item          transporte_item       @relation(fields: [transporte_item_id], references: [id], onUpdate: Restrict, map: "transporte_manutencao_FK_transporte_item")
  transporte_manutencao    transporte_manutencao @relation(fields: [transporte_manutencao_id], references: [id], onUpdate: Restrict, map: "transporte_manutencao_item_FK_transporte_manutencao")

  @@index([transporte_item_id], map: "transporte_manutencao_FK_transporte_item")
  @@index([transporte_manutencao_id], map: "transporte_manutencao_item_FK_transporte_manutencao")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model transporte_motorista {
  id                        Int                         @id @default(autoincrement())
  servidor_id               Int?
  cnh                       String?                     @db.VarChar(50)
  cnh_foto                  String?                     @db.VarChar(50)
  venc_cnh                  String?                     @db.VarChar(50)
  observacao                String?                     @db.Text
  status                    Boolean?                    @default(false)
  created_at                DateTime?                   @db.DateTime(0)
  updated_at                DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at                DateTime?                   @db.DateTime(0)
  rota_motorista_veiculo    rota_motorista_veiculo[]
  servidor                  servidor?                   @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "transporte_motorista_FK_servidor")
  transporte_motorista_cnh  transporte_motorista_cnh[]
  transporte_motorista_rota transporte_motorista_rota[]

  @@index([servidor_id], map: "transporte_motorista_FK_servidor")
}

model transporte_motorista_cnh {
  id                                    Int                                @id @default(autoincrement()) @db.UnsignedInt
  transporte_motorista_id               Int
  transporte_motorista_cnh_categoria_id Int                                @db.UnsignedInt
  created_at                            DateTime                           @db.DateTime(0)
  updated_at                            DateTime                           @db.DateTime(0)
  deleted_at                            DateTime?                          @db.DateTime(0)
  transporte_motorista_cnh_categoria    transporte_motorista_cnh_categoria @relation(fields: [transporte_motorista_cnh_categoria_id], references: [id], onUpdate: Restrict, map: "trans_moto_cnh_cat_FK_transporte_motorista_cnh")
  transporte_motorista                  transporte_motorista               @relation(fields: [transporte_motorista_id], references: [id], onUpdate: Restrict, map: "transporte_motorista_cnh_FK_transporte_motorista")

  @@index([transporte_motorista_cnh_categoria_id], map: "trans_moto_cnh_cat_FK_transporte_motorista_cnh")
  @@index([transporte_motorista_id], map: "transporte_motorista_cnh_FK_transporte_motorista")
}

model transporte_motorista_cnh_categoria {
  id                       Int                        @id @default(autoincrement()) @db.UnsignedInt
  categoria                String?                    @db.VarChar(50)
  created_at               DateTime                   @db.DateTime(0)
  updated_at               DateTime                   @db.DateTime(0)
  deleted_at               DateTime?                  @db.DateTime(0)
  transporte_motorista_cnh transporte_motorista_cnh[]
}

model transporte_motorista_rota {
  id                      Int                   @id @default(autoincrement())
  transporte_motorista_id Int?
  rota_id                 Int?
  status                  Int
  created_at              DateTime?             @db.DateTime(0)
  updated_at              DateTime              @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?             @db.DateTime(0)
  rota_diassemana         rota_diassemana[]
  rota                    rota?                 @relation(fields: [rota_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_transporte_motorista_rota_rota")
  transporte_motorista    transporte_motorista? @relation(fields: [transporte_motorista_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_transporte_motorista_rota_transporte_motorista")

  @@index([rota_id], map: "FK_transporte_motorista_rota_rota")
  @@index([transporte_motorista_id], map: "FK_transporte_motorista_rota_transporte_motorista")
}

model transporte_veiculo_quilometragem {
  id            Int       @id @default(autoincrement()) @db.UnsignedInt
  veiculo_id    Int
  medicao_km    Int
  data_marcacao DateTime  @db.Date
  created_at    DateTime? @db.DateTime(0)
  updated_at    DateTime? @default(now()) @db.Timestamp(0)
  deleted_at    DateTime? @db.DateTime(0)
  veiculo       veiculo   @relation(fields: [veiculo_id], references: [id], onUpdate: Restrict, map: "transporte_veiculo_quilometragem_FK_veiculo")

  @@index([veiculo_id], map: "transporte_veiculo_quilometragem_FK_veiculo")
}

model trecho {
  id                                                       Int               @id @default(autoincrement())
  nome                                                     String?           @db.VarChar(50)
  ponto_inicial_id                                         Int?
  ponto_final_id                                           Int?
  distancia                                                Decimal?          @db.Decimal(4, 2)
  tempo                                                    Int?              @db.UnsignedSmallInt
  created                                                  DateTime?         @db.DateTime(0)
  status                                                   Boolean?          @default(true)
  created_at                                               DateTime?         @db.DateTime(0)
  updated_at                                               DateTime          @default(now()) @db.Timestamp(0)
  deleted_at                                               DateTime?         @db.DateTime(0)
  percurso_trecho                                          percurso_trecho[]
  ponto_de_parada_trecho_ponto_final_idToponto_de_parada   ponto_de_parada?  @relation("trecho_ponto_final_idToponto_de_parada", fields: [ponto_final_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trecho_ponto_final_id")
  ponto_de_parada_trecho_ponto_inicial_idToponto_de_parada ponto_de_parada?  @relation("trecho_ponto_inicial_idToponto_de_parada", fields: [ponto_inicial_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_trecho_ponto_inicial_id")

  @@index([ponto_final_id], map: "fk_trecho_ponto_final_id")
  @@index([ponto_inicial_id], map: "fk_trecho_ponto_inicial_id")
  @@index([created], map: "index_trecho_created")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model turma {
  id                                        Int                               @id @default(autoincrement())
  escola_id                                 Int
  ano_letivo_id                             Int
  nivel_ensino_mec_id                       Int?
  turno_id                                  Int?
  ano_id                                    Int?
  sala_id                                   Int?
  turma_tipo_atendimento_id                 Int?                              @db.UnsignedInt
  estrutura_curricular_formacao_geral       Int?                              @db.TinyInt
  estrutura_curricular_itinerario_formativo Int?                              @db.TinyInt
  estrutura_curricular_nao_se_aplica        Int?                              @db.TinyInt
  ensino_de_libras                          Int?                              @db.TinyInt
  semestre                                  String?
  codigo                                    String?                           @db.VarChar(80)
  situacao_turma                            String?                           @default("ABERTO") @db.VarChar(20)
  dias_semana                               String?                           @db.Char(13)
  tipo_compartamento_turma_id               Int?
  avaliacao_lancamento_tipo_id              Int?
  plano_curricular_id                       Int?
  servidor_id                               Int?
  calendario_escolar_id                     Int?
  curso_educacional_profissional_id         Int?
  ciclo_id                                  Int?
  programas_sociais_escola_id               Int?
  num_max_aluno                             Int?
  inep                                      String?                           @db.VarChar(80)
  horario_inicial_hora                      String?                           @db.Char(2)
  horario_inicial_minuto                    String?                           @db.Char(2)
  horario_final_hora                        String?                           @db.Char(2)
  horario_final_minuto                      String?                           @db.Char(2)
  tipo_atendimento_id                       Int?
  tipo_atendimento                          Int?
  programa_mais_educacao                    String?                           @db.Char(1)
  ensino_sistema_braile                     String?                           @db.Char(1)
  ensino_recursos_optico                    String?                           @db.Char(1)
  estrategia_processo_mental                String?                           @db.Char(1)
  orientacao_e_mobilidade                   String?                           @db.Char(1)
  ensino_libra                              String?                           @db.Char(1)
  ensino_css                                String?                           @db.Char(1)
  estrategia_enriquecimento_curricular      String?                           @db.Char(1)
  ensino_uso_soroban                        String?                           @db.Char(1)
  ensino_informatica_acessivel              String?                           @db.Char(1)
  ensino_modalidade_escrita                 String?                           @db.Char(1)
  estrategias_autonomia_ambiente_escolar    String?                           @db.Char(1)
  turma_sem_docente                         Boolean?                          @default(false)
  ordem_diario                              String?                           @db.Char(5)
  qtd_max_pontos_aluno                      Int?
  porcentagem_min_frequencia                Int?
  participa_mais_educacao                   String?                           @db.Char(1)
  status                                    Int                               @default(1) @db.TinyInt
  created_at                                DateTime?                         @db.DateTime(0)
  updated_at                                DateTime                          @default(now()) @db.Timestamp(0)
  deleted_at                                DateTime?                         @db.DateTime(0)
  is_teste                                  Boolean?                          @default(false)
  local_funcionamento_diferenciado          Int?                              @db.TinyInt
  acompanhamentos                           acompanhamentos[]
  aluno_diagnostico                         aluno_diagnostico[]
  aluno_planejamento_infantil_AEE           aluno_planejamento_infantil_AEE[]
  aula                                      aula[]
  calendario_escolar_evento                 calendario_escolar_evento[]
  cr                                        cr[]
  dispensa_disciplina                       dispensa_disciplina[]
  distribuicao_ponto                        distribuicao_ponto[]
  edi_ficha_individual                      edi_ficha_individual[]
  formulario_turma_ano                      formulario_turma_ano[]
  horario                                   horario[]
  matricula                                 matricula[]
  motivo_falta_aluno                        motivo_falta_aluno[]
  nota                                      nota[]
  nota_descritiva                           nota_descritiva[]
  pp_justificar_falta                       pp_justificar_falta[]
  pp_naolocalizado                          pp_naolocalizado[]
  ano                                       ano?                              @relation(fields: [ano_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_turma_ano_id")
  ano_letivo                                ano_letivo                        @relation(fields: [ano_letivo_id], references: [id], onUpdate: Restrict, map: "fk_turma_ano_letivo_id")
  escola                                    escola                            @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "fk_turma_escola_id")
  nivel_ensino_mec                          nivel_ensino_mec?                 @relation(fields: [nivel_ensino_mec_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_turma_nivel_ensino_mec_id")
  sala                                      sala?                             @relation(fields: [sala_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_turma_sala_id")
  turma_tipo_atendimento                    turma_tipo_atendimento?           @relation(fields: [turma_tipo_atendimento_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_turma_tipo_atendimento_id")
  turno                                     turno?                            @relation(fields: [turno_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_turma_turno_id")
  turma_ano                                 turma_ano[]
  turma_disciplina                          turma_disciplina[]
  turma_forma_organizacao_ensino            turma_forma_organizacao_ensino[]
  turma_planejamento                        turma_planejamento[]
  turma_planejamento_infantil               turma_planejamento_infantil[]
  turma_planejamento_objetivo               turma_planejamento_objetivo[]

  @@index([ano_id], map: "fk_turma_ano1")
  @@index([ano_letivo_id], map: "fk_turma_ano_letivo1")
  @@index([escola_id], map: "fk_turma_escola1")
  @@index([nivel_ensino_mec_id], map: "fk_turma_nivel_ensino_mec1")
  @@index([sala_id], map: "fk_turma_sala")
  @@index([turma_tipo_atendimento_id], map: "fk_turma_tipo_atendimento_id")
  @@index([turno_id], map: "fk_turma_turno1")
}

model turma_ano {
  id         Int       @id @default(autoincrement())
  turma_id   Int
  ano_id     Int
  status     Int       @db.TinyInt
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  ano        ano       @relation(fields: [ano_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "turma_ano_FK_ano")
  turma      turma     @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "turma_ano_FK_turma")

  @@index([ano_id], map: "turma_ano_FK_ano")
  @@index([turma_id], map: "turma_ano_FK_turma")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model turma_conferencia {
  id                  Int                      @id @default(autoincrement()) @db.UnsignedInt
  ano_letivo          Int?
  escola_id           Int?
  nivel_ensino_mec_id Int?
  etapa_id            Int?
  turno               turma_conferencia_turno?
  qtd_turmas          Int?
  qtd_alunos          Int?
  ano                 ano?                     @relation(fields: [etapa_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "turma_conferencia_FK_ano")
  escola              escola?                  @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "turma_conferencia_FK_escola")
  nivel_ensino_mec    nivel_ensino_mec?        @relation(fields: [nivel_ensino_mec_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "turma_conferencia_FK_nivel_ensino_mec")

  @@index([etapa_id], map: "turma_conferencia_FK_ano")
  @@index([escola_id], map: "turma_conferencia_FK_escola")
  @@index([nivel_ensino_mec_id], map: "turma_conferencia_FK_nivel_ensino_mec")
}

model turma_disciplina {
  id                                  Int                                   @id @default(autoincrement())
  turma_id                            Int
  disciplinas_mec_id                  Int?
  servidor_id                         Int?
  servidor_cargo_escola_id            Int?
  tipo_professor_id                   Int?
  horas_aula_semestre1                Int?
  horas_aula_semestre2                Int?
  permite_avaliacao                   String                                @default("S")
  numero_aula                         Int?
  situacao                            String                                @default("1")
  created_at                          DateTime?                             @db.DateTime(0)
  updated_at                          DateTime                              @default(now()) @db.Timestamp(0)
  deleted_at                          DateTime?                             @db.DateTime(0)
  tipo_atividade_complementar_id      Int?
  nivel_lotacao                       Int?                                  @db.TinyInt
  aluno_afastamento                   aluno_afastamento[]
  aluno_diagnostico                   aluno_diagnostico[]
  aula                                aula[]
  aula_disciplina                     aula_disciplina[]
  avaliacao_lancamento                avaliacao_lancamento[]
  dispensa_disciplina                 dispensa_disciplina[]
  edi_quadro_curricular               edi_quadro_curricular[]
  falta_aluno_admitido                falta_aluno_admitido[]
  falta_mes_aluno                     falta_mes_aluno[]
  gabarito                            gabarito[]
  matricula_turma_disciplina_situacao matricula_turma_disciplina_situacao[]
  nota                                nota[]
  nota_conceito                       nota_conceito[]
  nota_conceito_nome                  nota_conceito_nome[]
  nota_observacao                     nota_observacao[]
  nota_ponto                          nota_ponto[]
  nota_ponto_prova                    nota_ponto_prova[]
  nota_progressao_parcial             nota_progressao_parcial[]
  ocorrencia_aluno                    ocorrencia_aluno[]
  ocorrencia_aluno_historico          ocorrencia_aluno_historico[]
  projeto_didatico                    projeto_didatico[]
  disciplinas_mec                     disciplinas_mec?                      @relation(fields: [disciplinas_mec_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_turma_disciplina_disciplinas_mec_id")
  servidor_cargo_escola               servidor_cargo_escola?                @relation(fields: [servidor_cargo_escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_turma_disciplina_servidor_cargo_escola")
  servidor                            servidor?                             @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_turma_disciplina_servidor_id")
  tipo_professor                      tipo_professor?                       @relation(fields: [tipo_professor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_turma_disciplina_tipo_professor")
  turma                               turma                                 @relation(fields: [turma_id], references: [id], onUpdate: Restrict, map: "fk_turma_disciplina_turma_id")
  turma_disciplina_horario            turma_disciplina_horario[]
  turma_planejamento                  turma_planejamento[]
  turma_planejamento_infantil         turma_planejamento_infantil[]
  turma_planejamento_objetivo         turma_planejamento_objetivo[]

  @@index([disciplinas_mec_id], map: "fk_turma_disciplina_disciplinas_mec1")
  @@index([servidor_id], map: "fk_turma_disciplina_servidor1")
  @@index([servidor_cargo_escola_id], map: "fk_turma_disciplina_servidor_cargo_escola")
  @@index([tipo_professor_id], map: "fk_turma_disciplina_tipo_professor")
  @@index([turma_id], map: "fk_turma_disciplina_turma1")
}

model turma_disciplina_horario {
  id                  Int              @id @default(autoincrement())
  turma_disciplina_id Int
  horario_id          Int?
  dias_semana         String?          @db.Char(20)
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  tipo_turma          Int?             @default(14)
  horario             horario?         @relation(fields: [horario_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_horario")
  turma_disciplina    turma_disciplina @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_turma_disciplina_horario_turma_disciplina1")

  @@index([horario_id], map: "fk_horario")
  @@index([turma_disciplina_id], map: "fk_turma_disciplina_horario_turma_disciplina1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model turma_fechamento {
  id              Int       @id @default(autoincrement())
  escola_id       Int?
  turma_id        Int?
  data_fechamento DateTime? @db.Date
  etapa           String?   @db.Char(15)
  created_at      DateTime? @db.DateTime(0)
  updated_at      DateTime  @default(now()) @db.Timestamp(0)
  deleted_at      DateTime? @db.DateTime(0)
}

model turma_forma_organizacao_ensino {
  id                          Int                      @id @default(autoincrement())
  turma_id                    Int
  forma_organizacao_ensino_id Int
  created_at                  DateTime                 @default(now()) @db.DateTime(0)
  updated_at                  DateTime                 @default(now()) @db.Timestamp(0)
  deleted_at                  DateTime?                @db.DateTime(0)
  forma_organizacao_ensino    forma_organizacao_ensino @relation(fields: [forma_organizacao_ensino_id], references: [id], onUpdate: Restrict, map: "fk_forma_organizacao_ensino_id")
  turma                       turma                    @relation(fields: [turma_id], references: [id], onUpdate: Restrict, map: "fk_turma_id")

  @@index([forma_organizacao_ensino_id], map: "fk_forma_organizacao_ensino_id")
  @@index([turma_id], map: "fk_turma_id")
}

model turma_planejamento {
  id                                                   Int                                                    @id @default(autoincrement())
  uuid                                                 String?                                                @db.VarChar(255)
  turma_id                                             Int?
  turma_disciplina_id                                  Int?
  ano_letivo_id                                        Int?
  escola_id                                            Int?
  tipo_periodo_planejamento                            String
  arquivo_url                                          String?                                                @db.VarChar(255)
  periodo                                              String                                                 @db.VarChar(50)
  objetivo                                             String?                                                @db.Text
  conteudo                                             String?                                                @db.Text
  metodologia                                          String?                                                @db.Text
  recursos                                             String?                                                @db.Text
  avaliacoes                                           String?                                                @db.Text
  acoes                                                String?                                                @db.Text
  prazos                                               String?                                                @db.Text
  conhecimento_previo                                  String?                                                @db.Text
  componentes_curriculares                             String?                                                @db.Text
  bibliografia                                         String?                                                @db.Text
  habilidades                                          String?                                                @db.Text
  created                                              DateTime?                                              @db.DateTime(0)
  status                                               String?                                                @db.Char(1)
  data_validacao                                       DateTime?                                              @db.DateTime(0)
  usuario_id_validacao                                 Int?
  created_at                                           DateTime?                                              @db.DateTime(0)
  updated_at                                           DateTime                                               @default(now()) @db.Timestamp(0)
  deleted_at                                           DateTime?                                              @db.DateTime(0)
  servidor_id                                          Int?
  cadastrado_por                                       String?                                                @db.VarChar(25)
  modelo_bncc_ma                                       Int?                                                   @default(0) @db.TinyInt
  modelo_PAP                                           Int?
  competencias_gerais_text                             String?                                                @db.Text
  competencias_especificas_text                        String?                                                @db.Text
  habilidade_caixa_bncc_text                           String?                                                @db.Text
  atividade_diferenciada                               String?                                                @db.Text
  comentarios_planejamento                             comentarios_planejamento[]
  ano_letivo                                           ano_letivo?                                            @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_turma_planejamento_ano_letivo_id")
  escola                                               escola?                                                @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_turma_planejamento_escola_id")
  turma_disciplina                                     turma_disciplina?                                      @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_turma_planejamento_turma_disciplina_id")
  turma                                                turma?                                                 @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_turma_planejamento_turma_id")
  turma_planejamento_temas_contemporaneos_transversais turma_planejamento_temas_contemporaneos_transversais[]

  @@index([ano_letivo_id], map: "FK_turma_planejamento_ano_letivo_id")
  @@index([escola_id], map: "FK_turma_planejamento_escola_id")
  @@index([turma_disciplina_id], map: "FK_turma_planejamento_turma_disciplina_id")
  @@index([turma_id], map: "FK_turma_planejamento_turma_id")
}

model turma_planejamento_competencias_especificas {
  id                        Int       @id @default(autoincrement())
  turma_planejamento_id     Int
  competencia_especifica_id Int
  created_at                DateTime? @db.DateTime(0)
  updated_at                DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                DateTime? @db.DateTime(0)
}

model turma_planejamento_competencias_gerais {
  id                    Int       @id @default(autoincrement())
  turma_planejamento_id Int
  competencia_geral_id  Int
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
}

model turma_planejamento_habilidades {
  id                    Int       @id @default(autoincrement())
  turma_planejamento_id Int
  habilidade_id         Int
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
}

model turma_planejamento_infantil {
  id                                          Int                                           @id @default(autoincrement())
  turma_id                                    Int?
  turma_disciplina_id                         Int?
  ano_letivo_id                               Int?
  escola_id                                   Int?
  tipo_periodo_planejamento                   String
  arquivo_url                                 String?                                       @db.VarChar(255)
  periodo                                     String                                        @db.VarChar(50)
  grupo_etario                                String?                                       @db.Text
  objetivos                                   String?                                       @db.Text
  atividades                                  String?                                       @db.Text
  recursos                                    String?                                       @db.Text
  registros                                   String?                                       @db.Text
  avaliacao                                   String?                                       @db.Text
  created                                     DateTime?                                     @db.DateTime(0)
  status                                      String?                                       @db.Char(1)
  data_validacao                              DateTime?                                     @db.DateTime(0)
  usuario_id_validacao                        Int?
  created_at                                  DateTime?                                     @db.DateTime(0)
  updated_at                                  DateTime?                                     @default(now()) @db.Timestamp(0)
  deleted_at                                  DateTime?                                     @db.DateTime(0)
  direitos                                    String?                                       @db.Text
  modelo_bncc_ma                              Int?                                          @default(0) @db.TinyInt
  grupos_etarios_infantil_id                  Int?
  referencias                                 String?                                       @db.Text
  servidor_id                                 Int?
  cadastrado_por                              String?                                       @db.VarChar(25)
  tema                                        String?                                       @db.Text
  tema_conteudo_didatico                      String?                                       @db.Text
  ano_letivo                                  ano_letivo?                                   @relation(fields: [ano_letivo_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_turma_planejamento_infantil_ano_letivo_id")
  escola                                      escola?                                       @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_turma_planejamento_infantil_escola_id")
  turma_disciplina                            turma_disciplina?                             @relation(fields: [turma_disciplina_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_turma_planejamento_infantil_turma_disciplina_id")
  turma                                       turma?                                        @relation(fields: [turma_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_turma_planejamento_infantil_turma_id")
  turma_planejamento_infantil_disciplinas_mec turma_planejamento_infantil_disciplinas_mec[]

  @@index([ano_letivo_id], map: "FK_turma_planejamento_infantil_ano_letivo_id")
  @@index([escola_id], map: "FK_turma_planejamento_infantil_escola_id")
  @@index([turma_disciplina_id], map: "FK_turma_planejamento_infantil_turma_disciplina_id")
  @@index([turma_id], map: "FK_turma_planejamento_infantil_turma_id")
}

model turma_planejamento_infantil_atividades_permanentes {
  id                             Int       @id @default(autoincrement())
  turma_planejamento_infantil_id Int
  atividades_permanentes_id      Int
  created_at                     DateTime? @db.DateTime(0)
  updated_at                     DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime? @db.DateTime(0)
}

model turma_planejamento_infantil_competencias_gerais {
  id                             Int       @id @default(autoincrement())
  turma_planejamento_infantil_id Int
  competencias_gerais_id         Int
  created_at                     DateTime? @db.DateTime(0)
  updated_at                     DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime? @db.DateTime(0)
}

model turma_planejamento_infantil_disciplinas_mec {
  id                             Int                         @id @default(autoincrement())
  turma_planejamento_infantil_id Int
  disciplinas_mec_id             Int
  created_at                     DateTime?                   @db.DateTime(0)
  updated_at                     DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime?                   @db.DateTime(0)
  disciplinas_mec                disciplinas_mec             @relation(fields: [disciplinas_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "turma_infantil_disciplinas_mec_FK_disciplinas_mec")
  turma_planejamento_infantil    turma_planejamento_infantil @relation(fields: [turma_planejamento_infantil_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "turma_infantil_disciplinas_mec_FK_turma_infantil")

  @@index([disciplinas_mec_id], map: "turma_infantil_disciplinas_mec_FK_disciplinas_mec")
  @@index([turma_planejamento_infantil_id], map: "turma_infantil_disciplinas_mec_FK_turma_infantil")
}

model turma_planejamento_infantil_objetivos_aprendizagem {
  id                             Int       @id @default(autoincrement())
  turma_planejamento_infantil_id Int
  objetivos_aprendizagem_codigo  String    @db.VarChar(15)
  created_at                     DateTime? @db.DateTime(0)
  updated_at                     DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime? @db.DateTime(0)
}

model turma_planejamento_linguagens_artisticas {
  id                     Int       @id @default(autoincrement())
  turma_planejamento_id  Int
  linguagem_artistica_id Int
  created_at             DateTime? @db.DateTime(0)
  updated_at             DateTime  @default(now()) @db.Timestamp(0)
  deleted_at             DateTime? @db.DateTime(0)
}

model turma_planejamento_objetivo {
  id                                                            Int                              @id @default(autoincrement())
  turma_id                                                      Int?
  turma_disciplina_id                                           Int?
  ano_letivo                                                    Int?
  escola_id                                                     Int?
  tipo_periodo_planejamento                                     String?                          @db.Text
  periodo                                                       String?                          @db.Text
  resposta_pergunta_planejamento                                resposta_pergunta_planejamento[]
  turma                                                         turma?                           @relation(fields: [turma_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "turma_planejamento_objetivo_ibfk_1")
  turma_disciplina                                              turma_disciplina?                @relation(fields: [turma_disciplina_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "turma_planejamento_objetivo_ibfk_2")
  ano_letivo_turma_planejamento_objetivo_ano_letivoToano_letivo ano_letivo?                      @relation("turma_planejamento_objetivo_ano_letivoToano_letivo", fields: [ano_letivo], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "turma_planejamento_objetivo_ibfk_3")
  escola                                                        escola?                          @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "turma_planejamento_objetivo_ibfk_4")

  @@index([ano_letivo], map: "ano_letivo")
  @@index([escola_id], map: "escola_id")
  @@index([turma_disciplina_id], map: "turma_disciplina_id")
  @@index([turma_id], map: "turma_id")
}

model turma_planejamento_praticas_linguagem_campos {
  id                           Int       @id @default(autoincrement())
  turma_planejamento_id        Int
  praticas_linguagem_campos_id Int
  created_at                   DateTime? @db.DateTime(0)
  updated_at                   DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                   DateTime? @db.DateTime(0)
}

model turma_planejamento_praticas_linguagem_eixos {
  id                          Int       @id @default(autoincrement())
  turma_planejamento_id       Int
  praticas_linguagem_eixos_id Int
  created_at                  DateTime? @db.DateTime(0)
  updated_at                  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                  DateTime? @db.DateTime(0)
}

model turma_planejamento_temas_contemporaneos_transversais {
  id                                   Int                               @id @default(autoincrement())
  turma_planejamento_id                Int
  temas_contemporaneos_transversais_id Int
  created_at                           DateTime?                         @db.DateTime(0)
  updated_at                           DateTime                          @default(now()) @db.Timestamp(0)
  deleted_at                           DateTime?                         @db.DateTime(0)
  temas_contemporaneos_transversais    temas_contemporaneos_transversais @relation(fields: [temas_contemporaneos_transversais_id], references: [id], onUpdate: Restrict, map: "FK_temas_contemporaneos_transversais_id")
  turma_planejamento                   turma_planejamento                @relation(fields: [turma_planejamento_id], references: [id], onUpdate: Restrict, map: "FK_turma_planejamento_id")

  @@index([temas_contemporaneos_transversais_id], map: "FK_temas_contemporaneos_transversais_id")
  @@index([turma_planejamento_id], map: "FK_turma_planejamento_id")
}

model turma_planejamento_unidades_tematicas {
  id                    Int       @id @default(autoincrement())
  turma_planejamento_id Int
  unidade_tematica_id   Int
  created_at            DateTime? @db.DateTime(0)
  updated_at            DateTime  @default(now()) @db.Timestamp(0)
  deleted_at            DateTime? @db.DateTime(0)
}

model turma_tipo_atendimento {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  nome       String?   @db.VarChar(200)
  ordem      Int?
  created_at DateTime  @db.DateTime(0)
  updated_at DateTime  @db.DateTime(0)
  deleted_at DateTime? @db.DateTime(0)
  turma      turma[]
}

model turma_tipo_atividade_complementar {
  id                             Int       @id @default(autoincrement())
  turma_id                       Int
  tipo_atividade_complementar_id Int
  created_at                     DateTime? @db.DateTime(0)
  updated_at                     DateTime  @default(now()) @db.Timestamp(0)
  deleted_at                     DateTime? @db.DateTime(0)
}

model turno {
  id                                     Int                                      @id @default(autoincrement())
  escola_id                              Int
  nome                                   String?                                  @db.VarChar(50)
  created                                DateTime?                                @db.DateTime(0)
  status                                 String?                                  @db.Char(1)
  created_at                             DateTime?                                @db.DateTime(0)
  updated_at                             DateTime                                 @default(now()) @db.Timestamp(0)
  deleted_at                             DateTime?                                @db.DateTime(0)
  escola_turno                           escola_turno[]
  horario                                horario[]
  servidor_cargo_escola_etapa_disciplina servidor_cargo_escola_etapa_disciplina[]
  turma                                  turma[]
  escola                                 escola                                   @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_turno_escola1")
  turno_nivel_ensino                     turno_nivel_ensino[]

  @@index([escola_id], map: "fk_turno_escola1")
}

model turno_geral {
  id         Int       @id @default(autoincrement())
  nome       String    @default("0") @db.VarChar(15)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model turno_nivel_ensino {
  id                  Int              @id @default(autoincrement())
  turno_id            Int
  nivel_ensino_mec_id Int
  nome                String?          @db.VarChar(255)
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime?        @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  horario             horario[]
  turno               turno            @relation(fields: [turno_id], references: [id], onUpdate: Restrict, map: "turno_nivel_ensino_ibfk_1")
  nivel_ensino_mec    nivel_ensino_mec @relation(fields: [nivel_ensino_mec_id], references: [id], onUpdate: Restrict, map: "turno_nivel_ensino_ibfk_2")

  @@index([nivel_ensino_mec_id], map: "nivel_ensino_mec_id")
  @@index([turno_id], map: "turno_id")
}

model tutorial {
  id             Int              @id @default(autoincrement())
  nome           String           @db.VarChar(50)
  imagem         String           @db.VarChar(50)
  pai_id         Int?
  created        DateTime         @db.DateTime(0)
  status         Boolean          @default(true)
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  tutorial       tutorial?        @relation("tutorialTotutorial", fields: [pai_id], references: [id], onUpdate: SetNull, map: "tutorial_fk_tutorial_pai_id")
  other_tutorial tutorial[]       @relation("tutorialTotutorial")
  tutorial_etapa tutorial_etapa[]

  @@index([pai_id], map: "tutorial_fk_tutorial_pai_id")
}

model tutorial_etapa {
  id             Int              @id @default(autoincrement())
  descricao      String           @db.Text
  tutorial_id    Int?
  ordem          Int?             @db.TinyInt
  created        DateTime         @db.DateTime(0)
  status         Boolean          @default(true)
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  tutorial       tutorial?        @relation(fields: [tutorial_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "tutorial_fk_tutorial_etapa_tutorial_id")
  tutorial_passo tutorial_passo[]

  @@index([tutorial_id], map: "tutorial_fk_tutorial_etapa_tutorial_id")
}

model tutorial_passo {
  id                Int             @id @default(autoincrement())
  descricao         String          @db.Text
  tutorial_etapa_id Int?
  imagem            String?         @db.VarChar(50)
  ordem             Int?            @db.TinyInt
  created           DateTime        @db.DateTime(0)
  status            Boolean         @default(true)
  created_at        DateTime?       @db.DateTime(0)
  updated_at        DateTime        @default(now()) @db.Timestamp(0)
  deleted_at        DateTime?       @db.DateTime(0)
  tutorial_etapa    tutorial_etapa? @relation(fields: [tutorial_etapa_id], references: [id], onUpdate: SetNull, map: "tutorial_etapa_fk_tutorial_passo_id")

  @@index([tutorial_etapa_id], map: "tutorial_etapa_fk_tutorial_passo_id")
}

model unidade_basica_saude {
  id         Int       @id @default(autoincrement())
  codigo     String    @db.VarChar(30)
  nome       String    @db.VarChar(100)
  created    DateTime  @db.DateTime(0)
  status     Int
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
}

model unidade_basica_saude_escola {
  id                      Int       @id @default(autoincrement())
  unidade_basica_saude_id Int
  escola_id               Int
  status                  Int
  created                 DateTime  @db.DateTime(0)
  updated                 DateTime  @db.DateTime(0)
  update_usuarios_id      Int       @db.UnsignedInt
  created_at              DateTime? @db.DateTime(0)
  updated_at              DateTime  @default(now()) @db.Timestamp(0)
  deleted_at              DateTime? @db.DateTime(0)
}

model unidade_medida {
  id         Int       @id @default(autoincrement())
  nome       String?   @db.VarChar(80)
  sigla      String?   @db.Char(10)
  grandeza   String?   @db.VarChar(50)
  created    DateTime? @db.DateTime(0)
  status     String?   @db.Char(1)
  created_at DateTime? @db.DateTime(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.DateTime(0)
  produto    produto[]
}

model usuario_comunidade {
  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  nome        String?   @db.VarChar(200)
  cpf         String?   @db.VarChar(50)
  referencia  String?   @db.VarChar(200)
  qtd_acessos Int?      @db.UnsignedInt
  created     DateTime? @db.DateTime(0)
  status      Boolean?
  created_at  DateTime? @db.DateTime(0)
  updated_at  DateTime  @default(now()) @db.Timestamp(0)
  deleted_at  DateTime? @db.DateTime(0)
  log         log[]
}

model usuarios {
  id                                                          Int                           @id @default(autoincrement()) @db.UnsignedInt
  grupo_id                                                    Int?                          @db.UnsignedInt
  acesso_diretor                                              Int?                          @db.UnsignedTinyInt
  primeiro_ip                                                 String?                       @db.VarChar(50)
  tipo                                                        Boolean?                      @default(true)
  login                                                       String?                       @db.VarChar(80)
  senha                                                       String?                       @db.VarChar(50)
  password                                                    String?                       @db.VarChar(60)
  nome                                                        String?                       @db.VarChar(200)
  email                                                       String?                       @db.VarChar(200)
  msn                                                         String?                       @db.VarChar(200)
  orkut                                                       String?                       @db.VarChar(200)
  fone                                                        String?                       @db.VarChar(50)
  celular                                                     String?                       @db.VarChar(50)
  foto                                                        String?                       @db.VarChar(50)
  ultimoacesso                                                DateTime?                     @db.DateTime(0)
  acessos                                                     Int?                          @default(0) @db.UnsignedInt
  horarios_acesso                                             String?                       @db.VarChar(100)
  created                                                     DateTime?                     @db.DateTime(0)
  modified                                                    DateTime?                     @db.DateTime(0)
  status                                                      Boolean?
  is_saic                                                     Boolean?
  data_expiracao                                              DateTime?                     @db.Date
  servidor_id                                                 Int?
  ultima_data_acesso_suporte_eletronico                       DateTime?                     @db.DateTime(0)
  created_at                                                  DateTime?                     @db.DateTime(0)
  updated_at                                                  DateTime                      @default(now()) @db.Timestamp(0)
  deleted_at                                                  DateTime?                     @db.DateTime(0)
  acesso_erro                                                 acesso_erro[]
  ficha_acompanhamento                                        ficha_acompanhamento[]
  log                                                         log[]
  log_historico_alteracao                                     log_historico_alteracao[]
  log_pege                                                    log_pege[]
  nota_conceito                                               nota_conceito[]
  nota_ponto                                                  nota_ponto[]
  protocolo_movimentacao                                      protocolo_movimentacao[]
  resposta_conferencia_escola                                 resposta_conferencia_escola[]
  solicitacoes_solicitacoes_usuario_destinatario_idTousuarios solicitacoes[]                @relation("solicitacoes_usuario_destinatario_idTousuarios")
  solicitacoes_solicitacoes_usuario_solucionador_idTousuarios solicitacoes[]                @relation("solicitacoes_usuario_solucionador_idTousuarios")
  ticket_mensagem                                             ticket_mensagem[]
  servidor                                                    servidor?                     @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "usuarios_ibfk_1")
  visita_planejamento                                         visita_planejamento[]
  visita_tecnicos                                             visita_tecnicos[]

  @@index([servidor_id], map: "servidor_id")
}

model vale_escola {
  id                  Int              @id @default(autoincrement())
  escola_id           Int?
  vale_escola_tipo_id Int
  vales_recebidos     Int
  servidor_id         Int?
  telefone            String?          @db.VarChar(50)
  recebedor           String?          @db.VarChar(80)
  numero_cupom        String?          @db.VarChar(80)
  data_recebimento    DateTime         @db.Date
  created             DateTime         @db.DateTime(0)
  created_at          DateTime?        @db.DateTime(0)
  updated_at          DateTime         @default(now()) @db.Timestamp(0)
  deleted_at          DateTime?        @db.DateTime(0)
  escola              escola?          @relation(fields: [escola_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_vale_escola_escola_id")
  servidor            servidor?        @relation(fields: [servidor_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "FK_vale_escola_servidor_id")
  vale_escola_tipo    vale_escola_tipo @relation(fields: [vale_escola_tipo_id], references: [id], onUpdate: Restrict, map: "FK_vale_escola_tipo_id")

  @@index([escola_id], map: "FK_vale_escola_escola_id")
  @@index([servidor_id], map: "FK_vale_escola_servidor_id")
  @@index([vale_escola_tipo_id], map: "FK_vale_escola_tipo_id")
}

model vale_escola_tipo {
  id          Int                         @id @default(autoincrement())
  tipo        String                      @db.VarChar(50)
  habilitado  vale_escola_tipo_habilitado @default(S)
  created_at  DateTime?                   @db.DateTime(0)
  updated_at  DateTime                    @default(now()) @db.Timestamp(0)
  deleted_at  DateTime?                   @db.DateTime(0)
  vale_escola vale_escola[]
}

model valores_temas_diagnostico {
  id                      Int                       @id @default(autoincrement())
  tema_diagnostico_id     Int
  descricao               String?                   @db.VarChar(255)
  valor                   String                    @db.VarChar(5)
  created_at              DateTime?                 @db.DateTime(0)
  updated_at              DateTime?                 @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?                 @db.DateTime(0)
  aluno_diagnostico_temas aluno_diagnostico_temas[]
  temas_diagnostico       temas_diagnostico         @relation(fields: [tema_diagnostico_id], references: [id], onUpdate: Restrict, map: "FK_valores_temas_diagnostico_tema_diagnostico_id")

  @@index([tema_diagnostico_id], map: "FK_valores_temas_diagnostico_tema_diagnostico_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model veiculo {
  id                               Int                                @id @default(autoincrement())
  veiculo_modelo_id                String?                            @db.VarChar(30)
  observacao_terceirizado          String?                            @db.Text
  vencimento_placa                 Int?
  veiculo_terceirizado             veiculo_veiculo_terceirizado?      @default(N)
  cor                              String?                            @db.VarChar(20)
  placa                            String?                            @db.VarChar(12)
  modelo_ano                       String?                            @db.VarChar(12)
  ano                              String?                            @db.VarChar(5)
  renavan                          String?                            @db.VarChar(50)
  tipo_combustivel                 veiculo_tipo_combustivel?
  categoria                        veiculo_categoria?
  data_vencimento_ipva             DateTime?                          @db.Date
  veiculo_caracteristica           String?                            @db.Text
  veiculo_foto                     String?                            @db.VarChar(50)
  consumo_por_km                   String?                            @db.VarChar(50)
  capacidade                       Int?                               @db.UnsignedTinyInt
  created                          DateTime?                          @db.DateTime(0)
  status                           Boolean?                           @default(true)
  created_at                       DateTime?                          @db.DateTime(0)
  updated_at                       DateTime                           @default(now()) @db.Timestamp(0)
  deleted_at                       DateTime?                          @db.DateTime(0)
  matricula                        matricula[]
  rota_motorista_veiculo           rota_motorista_veiculo[]
  transporte_manutencao            transporte_manutencao[]
  transporte_veiculo_quilometragem transporte_veiculo_quilometragem[]
  veiculo_modelo                   veiculo_modelo?                    @relation(fields: [veiculo_modelo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "veiculo_ibfk_1")
  veiculo_rota                     veiculo_rota[]

  @@index([ano], map: "index_veiculo_ano")
  @@index([created], map: "index_veiculo_created")
  @@index([veiculo_modelo_id], map: "veiculo_modelo_id")
}

model veiculo_marca {
  id              Int          @id
  nome            String       @db.VarChar(200)
  veiculo_tipo_id Int
  created_at      DateTime?    @db.DateTime(0)
  updated_at      DateTime     @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?    @db.DateTime(0)
  veiculo_tipo    veiculo_tipo @relation(fields: [veiculo_tipo_id], references: [id], onUpdate: Restrict, map: "veiculo_marca_ibfk_1")

  @@index([veiculo_tipo_id], map: "veiculo_tipo_id")
}

model veiculo_modelo {
  id               String    @id @db.VarChar(30)
  nome             String    @db.VarChar(200)
  veiculo_marca_id Int
  created_at       DateTime? @db.DateTime(0)
  updated_at       DateTime  @default(now()) @db.Timestamp(0)
  deleted_at       DateTime? @db.DateTime(0)
  veiculo          veiculo[]

  @@index([veiculo_marca_id], map: "marca_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model veiculo_rota {
  id              Int               @id @default(autoincrement())
  veiculo_id      Int?
  rota_id         Int?
  data_inicio     DateTime?         @db.Date
  data_final      DateTime?         @db.Date
  status          Int
  created_at      DateTime?         @db.DateTime(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.DateTime(0)
  rota_diassemana rota_diassemana[]
  veiculo         veiculo?          @relation(fields: [veiculo_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "veiculo_rota_ibfk_1")
  rota            rota?             @relation(fields: [rota_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "veiculo_rota_ibfk_2")

  @@index([rota_id], map: "fk_veiculo_rota_rota_id")
  @@index([veiculo_id], map: "fk_veiculo_rota_veiculo_id")
}

model veiculo_tipo {
  id            Int             @id @default(autoincrement())
  nome          String          @db.VarChar(100)
  created_at    DateTime?       @db.DateTime(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  deleted_at    DateTime?       @db.DateTime(0)
  veiculo_marca veiculo_marca[]
}

model verba {
  id             Int              @id @default(autoincrement())
  escola_id      Int
  codigo         String           @db.VarChar(45)
  descricao      String           @db.VarChar(150)
  tipo           String
  valor_max      Decimal          @db.Decimal(10, 3)
  valor_min      Decimal          @db.Decimal(10, 3)
  status         String?          @db.Char(1)
  created        DateTime?        @db.DateTime(0)
  created_at     DateTime?        @db.DateTime(0)
  updated_at     DateTime         @default(now()) @db.Timestamp(0)
  deleted_at     DateTime?        @db.DateTime(0)
  escola         escola           @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_verba_escola1")
  verba_servidor verba_servidor[]
  verbas_cargo   verbas_cargo[]

  @@index([escola_id], map: "fk_verba_escola1")
}

model verba_servidor {
  id                    Int                @id @default(autoincrement())
  escola_id             Int
  servidor_id           Int
  verba_id              Int
  periodo_lancamento_id Int
  valor                 Decimal            @db.Decimal(10, 3)
  created_at            DateTime?          @db.DateTime(0)
  updated_at            DateTime           @default(now()) @db.Timestamp(0)
  deleted_at            DateTime?          @db.DateTime(0)
  escola                escola             @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_verba_servidor_escola1")
  periodo_lancamento    periodo_lancamento @relation(fields: [periodo_lancamento_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_verba_servidor_periodo_lancamento1")
  servidor              servidor           @relation(fields: [servidor_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_verba_servidor_servidor1")
  verba                 verba              @relation(fields: [verba_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_verba_servidor_verba1")

  @@index([escola_id], map: "fk_verba_servidor_escola1")
  @@index([periodo_lancamento_id], map: "fk_verba_servidor_periodo_lancamento1")
  @@index([servidor_id], map: "fk_verba_servidor_servidor1")
  @@index([verba_id], map: "fk_verba_servidor_verba1")
}

model verbas_cargo {
  id           Int        @id @default(autoincrement())
  escola_id    Int
  verba_id     Int
  cargo_mec_id Int
  status       String?    @db.Char(1)
  created      DateTime?  @db.DateTime(0)
  created_at   DateTime?  @db.DateTime(0)
  updated_at   DateTime   @default(now()) @db.Timestamp(0)
  deleted_at   DateTime?  @db.DateTime(0)
  cargos_mec   cargos_mec @relation(fields: [cargo_mec_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_verbas_cargo_cargo_mec1")
  escola       escola     @relation(fields: [escola_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_verbas_cargo_escola1")
  verba        verba      @relation(fields: [verba_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_verbas_cargo_verba1")

  @@index([cargo_mec_id], map: "fk_verbas_cargo_cargo_mec1")
  @@index([escola_id], map: "fk_verbas_cargo_escola1")
  @@index([verba_id], map: "fk_verbas_cargo_verba1")
}

model visita_arquivos {
  id                      Int               @id @default(autoincrement()) @db.UnsignedInt
  visita_documento_id     Int               @db.UnsignedInt
  documento               String            @db.VarChar(50)
  nome_domumento_original String            @db.VarChar(200)
  created_at              DateTime          @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at              DateTime          @default(now()) @db.Timestamp(0)
  deleted_at              DateTime?         @db.Timestamp(0)
  visita_documentos       visita_documentos @relation(fields: [visita_documento_id], references: [id], onUpdate: Restrict, map: "visita_arquivos_FK_visita_documentos")

  @@index([visita_documento_id], map: "visita_arquivos_FK_visita_documentos")
}

model visita_certificados {
  id               Int       @id @default(autoincrement()) @db.UnsignedInt
  certificado      String    @db.VarChar(50)
  layout           String    @db.VarChar(50)
  texto_principal  String    @db.Text
  texto_secundario String    @db.Text
  texto_terciario  String    @db.Text
  rodape           String    @db.Text
  created_at       DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at       DateTime  @default(now()) @db.Timestamp(0)
  deleted_at       DateTime? @db.Timestamp(0)
  visitas          visitas[]
}

model visita_despesa_itens {
  id              Int               @id @default(autoincrement()) @db.UnsignedInt
  item            String            @db.VarChar(50)
  created_at      DateTime          @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  visita_despesas visita_despesas[]
}

model visita_despesas {
  id                     Int                  @id @default(autoincrement()) @db.UnsignedInt
  visita_id              Int                  @db.UnsignedInt
  visita_despesa_item_id Int                  @db.UnsignedInt
  quantidade             Int                  @db.UnsignedInt
  observacao             String?              @db.Text
  valor                  Decimal              @db.Decimal(8, 2)
  created_at             DateTime             @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at             DateTime             @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?            @db.Timestamp(0)
  visitas                visitas              @relation(fields: [visita_id], references: [id], onUpdate: Restrict, map: "visita_despesas_FK_visita")
  visita_despesa_itens   visita_despesa_itens @relation(fields: [visita_despesa_item_id], references: [id], onUpdate: Restrict, map: "visita_despesas_FK_visita_despesa_itens")

  @@index([visita_id], map: "visita_despesas_FK_visita")
  @@index([visita_despesa_item_id], map: "visita_despesas_FK_visita_despesa_itens")
}

model visita_documentos {
  id              Int               @id @default(autoincrement()) @db.UnsignedInt
  visita_id       Int               @db.UnsignedInt
  nome_documento  String            @db.VarChar(50)
  observacao      String?           @db.Text
  arquivo         String?           @db.VarChar(300)
  created_at      DateTime          @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0)
  deleted_at      DateTime?         @db.Timestamp(0)
  visita_arquivos visita_arquivos[]
  visitas         visitas           @relation(fields: [visita_id], references: [id], onUpdate: Restrict, map: "visita_documento_FK_visita")

  @@index([visita_id], map: "visita_documento_FK_visita")
}

model visita_domiciliar {
  id               Int       @id @default(autoincrement())
  aluno_id         Int
  servidor_id      Int
  objetivo         String?   @db.VarChar(1000)
  relatorio        String?   @db.VarChar(2000)
  data_criacao     DateTime? @db.Date
  created_at       DateTime? @db.DateTime(0)
  updated_at       DateTime  @default(now()) @db.Timestamp(0)
  deleted_at       DateTime? @db.DateTime(0)
  responsavel_id   Int?
  nome_responsavel String?   @db.VarChar(255)
  endereco         String?   @db.VarChar(255)
}

model visita_domiciliar_anexos {
  id                   Int       @id @default(autoincrement())
  visita_domiciliar_id Int
  url_arquivo          String?   @db.VarChar(255)
  created_at           DateTime? @db.DateTime(0)
  updated_at           DateTime  @default(now()) @db.Timestamp(0)
  deleted_at           DateTime? @db.DateTime(0)
  tipo                 Int?      @db.TinyInt
  nome_original        String?   @db.VarChar(255)
}

model visita_fotos {
  id                 Int       @id @default(autoincrement()) @db.UnsignedInt
  visita_id          Int       @db.UnsignedInt
  foto               String    @db.VarChar(50)
  nome_foto_original String?   @db.VarChar(200)
  created_at         DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at         DateTime  @default(now()) @db.Timestamp(0)
  deleted_at         DateTime? @db.Timestamp(0)
  visitas            visitas   @relation(fields: [visita_id], references: [id], onUpdate: Restrict, map: "visita_fotos_fk_visitas")

  @@index([visita_id], map: "visita_fotos_fk_visitas")
}

model visita_planejamento {
  id          Int                            @id @default(autoincrement()) @db.UnsignedInt
  escola_id   Int
  usuario_id  Int                            @db.UnsignedInt
  data_visita DateTime                       @db.Date
  turno       visita_planejamento_turno
  visitada    visita_planejamento_visitada   @default(N)
  prioridade  visita_planejamento_prioridade
  observacao  String                         @db.Text
  created_at  DateTime                       @db.DateTime(0)
  updated_at  DateTime                       @default(now()) @db.Timestamp(0)
  deleted_at  DateTime?                      @db.DateTime(0)
  escola      escola                         @relation(fields: [escola_id], references: [id], onUpdate: Restrict, map: "visita_planejamento_FK_escola")
  usuarios    usuarios                       @relation(fields: [usuario_id], references: [id], onUpdate: Restrict, map: "visita_planejamento_FK_usuarios")
  visitas     visitas[]

  @@index([escola_id], map: "visita_planejamento_FK_escola")
  @@index([usuario_id], map: "visita_planejamento_FK_usuarios")
}

model visita_servidores {
  id                   Int                                     @id @default(autoincrement()) @db.UnsignedInt
  visita_id            Int                                     @db.UnsignedInt
  servidor_id          Int
  presenca             visita_servidores_presenca?             @default(AG)
  situacao_certificado visita_servidores_situacao_certificado? @default(NEM)
  created_at           DateTime                                @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at           DateTime                                @default(now()) @db.Timestamp(0)
  deleted_at           DateTime?                               @db.Timestamp(0)
  servidor             servidor                                @relation(fields: [servidor_id], references: [id], onUpdate: Restrict, map: "visita_servidores_FK_servidor")
  visitas              visitas                                 @relation(fields: [visita_id], references: [id], onUpdate: Restrict, map: "visita_servidores_FK_visita")

  @@index([servidor_id], map: "visita_servidores_FK_servidor")
  @@index([visita_id], map: "visita_servidores_FK_visita")
}

model visita_tecnicos {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  visita_id  Int       @db.UnsignedInt
  usuario_id Int       @db.UnsignedInt
  created_at DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  usuarios   usuarios  @relation(fields: [usuario_id], references: [id], onUpdate: Restrict, map: "visita_tecnicos_FK_usuario")
  visitas    visitas   @relation(fields: [visita_id], references: [id], onUpdate: Restrict, map: "visita_tecnicos_FK_visita")

  @@index([usuario_id], map: "visita_tecnicos_FK_usuario")
  @@index([visita_id], map: "visita_tecnicos_FK_visita")
}

model visita_tipos {
  id         Int       @id @default(autoincrement()) @db.UnsignedInt
  tipo       String    @db.VarChar(50)
  created_at DateTime  @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at DateTime  @default(now()) @db.Timestamp(0)
  deleted_at DateTime? @db.Timestamp(0)
  visitas    visitas[]
}

model visitas {
  id                     Int                  @id @default(autoincrement()) @db.UnsignedInt
  tipo_visita_id         Int                  @db.UnsignedInt
  visita_certificado_id  Int?                 @db.UnsignedInt
  visita_planejamento_id Int?                 @db.UnsignedInt
  sinal                  visitas_sinal
  data_visita            DateTime             @db.Date
  data_agendamento       DateTime             @db.Date
  descricao              String               @db.Text
  created_at             DateTime             @default(dbgenerated("'0000-00-00 00:00:00'")) @db.Timestamp(0)
  updated_at             DateTime             @default(now()) @db.Timestamp(0)
  deleted_at             DateTime?            @db.Timestamp(0)
  visita_despesas        visita_despesas[]
  visita_documentos      visita_documentos[]
  visita_fotos           visita_fotos[]
  visita_servidores      visita_servidores[]
  visita_tecnicos        visita_tecnicos[]
  visita_certificados    visita_certificados? @relation(fields: [visita_certificado_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "visitas_FK_visita_certificados")
  visita_planejamento    visita_planejamento? @relation(fields: [visita_planejamento_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "visitas_FK_visita_planejamento")
  visita_tipos           visita_tipos         @relation(fields: [tipo_visita_id], references: [id], onUpdate: Restrict, map: "visitas_FK_visita_tipos")

  @@index([visita_certificado_id], map: "visitas_FK_visita_certificados")
  @@index([visita_planejamento_id], map: "visitas_FK_visita_planejamento")
  @@index([tipo_visita_id], map: "visitas_FK_visita_tipos")
}

model zona {
  id         Int        @id
  nome       String?    @db.VarChar(80)
  status     String?    @db.Char(1)
  created_at DateTime?  @db.DateTime(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  deleted_at DateTime?  @db.DateTime(0)
  distrito   distrito[]
  escola     escola[]
  polo       polo[]
}

enum acervo_digital_nivel_acesso_nivel {
  ESCOLA
  ALUNO
  PROFESSOR
  COMUNIDADE
  SECRETARIA
  TODOS
}

enum ciclo_grupo_status {
  S
  N
}

enum diario_chamada_diario_tipo_chamada {
  Aplicativo
  Servidor
  Foto
}

enum merenda_unidade_medida_habilitado {
  S
  N
}

enum ponto_de_parada_tipo_ponto_parada {
  E
  O
}

enum solicitacoes_tipo_habilitado {
  S
  N
}

enum tabela_referencia_imc_percentil_infantil_sexo {
  M
  F
}

enum tabela_referencia_imc_percentil_infantil_adolescente_sexo {
  M
  F
}

enum vale_escola_tipo_habilitado {
  S
  N
}

enum afastamento_tipo_necessita_da_data_final {
  S
  N
}

enum api_falta_aluno_envio_destinatario {
  PAI
  MAE
  RESPONSAVEL
}

enum ata_reuniao_conselho_tipo_participante {
  P
  A
  S
}

enum calendario_escolar_tipo_status {
  S
  N
}

enum dashboard_perfil_habilitado {
  S
  N
}

enum merenda_produto_grupo_habilitado {
  S
  N
}

enum visita_servidores_presenca {
  AG
  P
}

enum acervo_digital_documento_tipo {
  PASTA
  ARQUIVO
}

enum almoxarifado_acompanhamento_situacao_objeto_tipo {
  Entrada
  Saida
}

enum almoxarifado_pedido_escola_atendido {
  AN
  AP
  RP
}

enum log_historico_alteracao_acao {
  I
  U
  D
}

enum polo_habilitado {
  S
  N
}

enum servidor_resumo_ponto_falta_abonada {
  S
  N
}

enum veiculo_veiculo_terceirizado {
  S
  N
}

enum visita_planejamento_turno {
  M
  T
}

enum visita_servidores_situacao_certificado {
  EM
  NEM
}

enum visitas_sinal {
  amarelo
  vermelho
  verde
}

enum almoxarifado_acompanhamento_situacao_procedimento {
  Automatico
  Manual
}

enum almoxarifado_pedido_secretaria_atendido {
  AN
  AP
  RP
}

enum almoxarifado_produto_medida_unidade_padrao {
  S
  N
}

enum ata_reuniao_situacao {
  AG
  RE
}

enum ciclo_tipo_aula {
  Horario
  Dia
}

enum falta_aluno_falta_aluno_afastamento {
  S
  N
}

enum pege_log_erro_resolvido {
  S
  N
}

enum servidor_resumo_ponto_frequencia {
  P
  A
}

enum turma_conferencia_turno {
  M
  V
  N
  I
}

enum visita_planejamento_visitada {
  S
  N
}

enum api_log_chamada_tipo_chamada {
  A
  S
  F
}

enum aula_tipo_aula {
  Normal
  Reposicao
  SabadoLetivo
}

enum aula_disciplina_forma_trabalho {
  I
  T
  R
  C
}

enum biblioteca_exemplar_situacao_emprestimo {
  DISPONIVEL
  RESERVADO
  EMPRESTADO
}

enum calendario_categoria_exibir_no_cadastro {
  SIM
  NAO
}

enum gabarito_cadastrado_por {
  Mobile
  Pege
  Mobile___Diretor   @map("Mobile - Diretor")
  Mobile___Professor @map("Mobile - Professor")
}

enum servidor_resumo_ponto_turno {
  M
  T
  N
}

enum solicitacoes_complexidade {
  BAIXA
  MEDIA
  ALTA
}

enum visita_planejamento_prioridade {
  BAIXA
  ALTA
}

enum aluno_afastamento_lancamento_direto_faltas {
  S
  N
}

enum aula_disciplina_cadastrado_por {
  Mobile
  Pege
  Mobile___Diretor   @map("Mobile - Diretor")
  Mobile___Professor @map("Mobile - Professor")
}

enum biblioteca_exemplar_cativo {
  S
  N
}

enum gabarito_resposta_cadastrado_por {
  Mobile
  Pege
  Mobile___Diretor   @map("Mobile - Diretor")
  Mobile___Professor @map("Mobile - Professor")
}

enum solicitacoes_prioridade {
  BAIXA
  MEDIA
  ALTA
}

enum almoxarifado_produto_perecivel {
  S
  N
}

enum biblioteca_emprestimo_foi_devolvido {
  S
  N
}

enum ocorrencia_aluno_cadastrado_por {
  Mobile
  Pege
  Mobile___Diretor   @map("Mobile - Diretor")
  Mobile___Professor @map("Mobile - Professor")
}

enum tabela_referencia_imc_sexo {
  M
  F
}

enum falta_aluno_cadastrado_por {
  Mobile
  Pege
  Mobile___Diretor   @map("Mobile - Diretor")
  Mobile___Professor @map("Mobile - Professor")
}

enum nota_cadastrado_por {
  Mobile
  Pege
  Mobile___Diretor   @map("Mobile - Diretor")
  Mobile___Professor @map("Mobile - Professor")
}

enum veiculo_tipo_combustivel {
  A
  G
  D
  GN
  F
}

enum aluno_prontuario_imc_cadastrado_por {
  Mobile
  Pege
  Mobile___Diretor   @map("Mobile - Diretor")
  Mobile___Professor @map("Mobile - Professor")
}

enum veiculo_categoria {
  P
  C
  O
  V
  T
}

enum api_dispositivo_habilitado {
  S
  N
}

enum pedidos_situacao {
  PAGO
  ABRT
  VENC
}

enum solicitacoes_solucao_tipo {
  TECNICA
  SUPORTE
}

enum solicitacoes_situacao {
  NOVO
  ANDAMENTO
  CANCELADO
  FINALIZADO
}

enum api_alteracao_status {
  I
  U
  D
}

enum api_alteracao_entidade {
  Escola
  Aluno
  Servidor
  Turma
  Disciplina
  Aula
  Falta
  Avaliacao
  Matricula
  Horario
  Turma_Disciplina @map("Turma Disciplina")
  Nota
}

enum aula_forma_trabalho {
  I
  T
  R
  C
}

enum aula_cadastrado_por {
  Mobile
  Pege
  Mobile___Diretor   @map("Mobile - Diretor")
  Mobile___Professor @map("Mobile - Professor")
  Pege___Professor   @map("Pege - Professor")
}

enum servidor_cargo_escola_origem_servidor {
  SECRETARIA
  PERMUTADO
  DISPONIBILIZADO
  CEDIDO
  ESTADUAL
}

enum escola_situacao {
  ATIVO
  INATIVO
  INTERNO
}

enum servidor_estadocivil {
  S
  C
  D
  V
}
